<?php

// This file is auto-generated, don't edit it. Thanks.
namespace AlibabaCloud\SDK\SDK_DATA_1598238000612;

use AlibabaCloud\Tea\Utils\Utils;
use AlibabaCloud\Tea\Tea;
use AlibabaCloud\Tea\Request;
use Darabonba\Url\Client;
use AlibabaCloud\Tea\Exception\TeaError;
use \Exception;
use AlibabaCloud\Tea\Exception\TeaUnableRetryError;

use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Config;
use AlibabaCloud\Tea\Utils\Utils\RuntimeOptions;
use Darabonba\Url\Models\Url;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelemployeedismissionandhandoverCorpHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelemployeedismissionandhandoverCorpHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelemployeedismissionandhandoverCorpHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetdismissionlistCorpHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetdismissionlistCorpHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetdismissionlistCorpHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpDingindexRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpDingindexResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpDingindexParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatisticsOapiReportRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatisticsOapiReportResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatisticsOapiReportParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModjobinfoCorpHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModjobinfoCorpHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModjobinfoCorpHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiMedalCorpmedalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiMedalCorpmedalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiMedalCorpmedalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceCircleGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceCircleGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceCircleGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiWorkspaceCircleGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiWorkspaceCircleGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiWorkspaceCircleGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceMeetingroomParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceMeetingroomParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceMeetingroomParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatebanwordsOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatebanwordsOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatebanwordsOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessTemplateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessTemplateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessTemplateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationRecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationRecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationRecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessPropertyRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessPropertyResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessPropertyParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationQuotaRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationQuotaResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationQuotaParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatbotPictureurlRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatbotPictureurlResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatbotPictureurlParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiReportTemplateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiReportTemplateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiReportTemplateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TestOapiTestRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TestOapiTestResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TestOapiTestParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAppstoreInternalOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAppstoreInternalOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAppstoreInternalOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAppstoreInternalSkupageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAppstoreInternalSkupageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAppstoreInternalSkupageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAppstoreInternalUnfinishedorderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAppstoreInternalUnfinishedorderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAppstoreInternalUnfinishedorderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiEduGroupMsgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiEduGroupMsgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiEduGroupMsgParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAppstoreInternalOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAppstoreInternalOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAppstoreInternalOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConsumeOapiAppstoreInternalOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConsumeOapiAppstoreInternalOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConsumeOapiAppstoreInternalOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappScopeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappScopeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappScopeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMicroappScopeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMicroappScopeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMicroappScopeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiConferenceParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiConferenceParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiConferenceParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiConferenceParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiConferenceParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiConferenceParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiConferenceParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiConferenceParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiConferenceParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiConferenceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiConferenceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiConferenceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiConferenceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiConferenceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiConferenceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnpublishOapiConferenceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnpublishOapiConferenceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnpublishOapiConferenceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpCalendarRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpCalendarResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpCalendarParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListsimpleOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListsimpleOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListsimpleOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpDingRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpDingResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpDingParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SectionfirstOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SectionfirstOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SectionfirstOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InactiveOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InactiveOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InactiveOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SynccreateOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SynccreateOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SynccreateOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpDingReceiverstatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpDingReceiverstatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpDingReceiverstatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceVacationQuotaRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceVacationQuotaResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceVacationQuotaParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InitOapiAttendanceVacationQuotaRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InitOapiAttendanceVacationQuotaResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InitOapiAttendanceVacationQuotaParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceVacationTypeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceVacationTypeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceVacationTypeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationTypeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationTypeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceVacationTypeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceVacationTypeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceVacationTypeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceVacationTypeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiAttendanceVacationTypeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiAttendanceVacationTypeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiAttendanceVacationTypeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduGuardianRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduGuardianResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduGuardianParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduGuardianRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduGuardianResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduGuardianParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduStudentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduStudentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduStudentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduStudentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduStudentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduStudentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduClassRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduClassResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduClassParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduClassRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduClassResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduClassParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduGradeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduGradeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduGradeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduGradeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduGradeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduGradeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduTeacherRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduTeacherResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduTeacherParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCampusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCampusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCampusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCampusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCampusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecognitionOapiAttendanceFaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecognitionOapiAttendanceFaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecognitionOapiAttendanceFaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduPeriodRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduPeriodResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduPeriodParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartworkHrmEmployeeFieldRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartworkHrmEmployeeFieldResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartworkHrmEmployeeFieldParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduPeriodRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduPeriodResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduPeriodParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduTeacherRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduTeacherResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduTeacherParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiDingRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiDingResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiDingParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsPluginStatisticsResumeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsPluginStatisticsResumeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsPluginStatisticsResumeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHirePluginStatisticsBizflowRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHirePluginStatisticsBizflowResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHirePluginStatisticsBizflowParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsPluginStatisticsJobRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsPluginStatisticsJobResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsPluginStatisticsJobParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoliveViewerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoliveViewerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoliveViewerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListscheduleOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListscheduleOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListscheduleOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetDeptMemberOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetDeptMemberOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetDeptMemberOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCollectionSchemaRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCollectionSchemaResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCollectionSchemaParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTrainingGroupinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTrainingGroupinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTrainingGroupinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsimplegroupsOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsimplegroupsOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsimplegroupsOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleaveapprovedurationOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleaveapprovedurationOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleaveapprovedurationOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHireStatisticsBizflowRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHireStatisticsBizflowResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHireStatisticsBizflowParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolesforempsOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolesforempsOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolesforempsOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsStatisticsJobRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsStatisticsJobResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsStatisticsJobParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsStatisticsResumeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsStatisticsResumeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAtsStatisticsResumeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetusergroupOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetusergroupOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetusergroupOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoverolesforempsOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoverolesforempsOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoverolesforempsOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteroleOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteroleOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteroleOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiVillageScreenRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiVillageScreenResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiVillageScreenParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetrolegroupOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetrolegroupOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetrolegroupOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiCalendarRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiCalendarResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiCalendarParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuseridsOapiWorkspaceCorpMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuseridsOapiWorkspaceCorpMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuseridsOapiWorkspaceCorpMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCheckinRecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCheckinRecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCheckinRecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsOapiExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsOapiExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsOapiExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListtoptenOapiBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListtoptenOapiBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListtoptenOapiBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHealthStepinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHealthStepinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiHealthStepinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiHealthStepinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiHealthStepinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiHealthStepinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserstatusOapiHealthStepinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserstatusOapiHealthStepinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserstatusOapiHealthStepinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangeOapiRhinoSalesOrderCustomInfoStatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangeOapiRhinoSalesOrderCustomInfoStatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangeOapiRhinoSalesOrderCustomInfoStatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CopyOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CopyOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CopyOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendbycodeOapiMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendbycodeOapiMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendbycodeOapiMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddresumerecordCorpHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddresumerecordCorpHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddresumerecordCorpHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendprogressOapiMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendprogressOapiMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendprogressOapiMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendresultOapiMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendresultOapiMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendresultOapiMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiAtsEvaluateJobmatchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiAtsEvaluateJobmatchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiAtsEvaluateJobmatchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAtsEvaluateJobmatchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAtsEvaluateJobmatchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAtsEvaluateJobmatchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiAtsEvaluateJobmatchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiAtsEvaluateJobmatchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiAtsEvaluateJobmatchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAtsCandidateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAtsCandidateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAtsCandidateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiOrgUnionTrunkRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiOrgUnionTrunkResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiOrgUnionBranchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiOrgUnionBranchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchupdateOapiChatNickRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchupdateOapiChatNickResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchupdateOapiChatNickParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEnterpriseFamilydrRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEnterpriseFamilydrResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEnterpriseFamilydrParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydayOapiAttendanceScheduleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydayOapiAttendanceScheduleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydayOapiAttendanceScheduleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCorpConversationMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCorpConversationMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCorpConversationMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetSmartworkBpmsProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetSmartworkBpmsProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetSmartworkBpmsProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMemberusersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMemberusersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMemberusersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMinimalismRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMinimalismResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMinimalismParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyidsOapiAttendanceScheduleResultRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyidsOapiAttendanceScheduleResultResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyidsOapiAttendanceScheduleResultParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceShiftHistoryRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceShiftHistoryResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceShiftHistoryParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAttendanceShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAttendanceShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAttendanceShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_to_single_conversationOapiMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_to_single_conversationOapiMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_to_single_conversationOapiMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListRecordOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListRecordOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListRecordOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Set_corp_ipwhitelistOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Set_corp_ipwhitelistOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Set_corp_ipwhitelistOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Reauth_corpOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Reauth_corpOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Reauth_corpOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseSuborgTotaldataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseSuborgTotaldataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseSuborgTotaldataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseMicroappUsedataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseMicroappUsedataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseMicroappUsedataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetReadListOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetReadListOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetReadListOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseMainorgTotaldataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseMainorgTotaldataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseMainorgTotaldataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_parent_deptsOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_parent_deptsOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_parent_deptsOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_parent_depts_by_deptOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_parent_depts_by_deptOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_parent_depts_by_deptOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatebychatbotidCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatebychatbotidCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatebychatbotidCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendCorpMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendCorpMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendCorpMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbychatbotidsCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbychatbotidsCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbychatbotidsCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetUseridByUnionidOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetUseridByUnionidOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetUseridByUnionidOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendprogressCorpMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendprogressCorpMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendprogressCorpMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Can_access_microappOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Can_access_microappOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Can_access_microappOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendresultCorpMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendresultCorpMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsendresultCorpMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_adminOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_adminOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendbycodeCorpMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendbycodeCorpMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendbycodeCorpMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiGroupSetFriendsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiGroupSetFriendsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiGroupSetFriendsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseSubareaTotaldataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseSubareaTotaldataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatOapiEnterpriseSubareaTotaldataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchdeleteOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchdeleteOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchdeleteOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyprojectOapiTdpTasklistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyprojectOapiTdpTasklistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyprojectOapiTdpTasklistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyprojectOapiWorkspaceTasklistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyprojectOapiWorkspaceTasklistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyprojectOapiWorkspaceTasklistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyorgOapiWorkspaceTasklistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyorgOapiWorkspaceTasklistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyorgOapiWorkspaceTasklistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_idsOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_idsOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_idsOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddbyprojectOapiTdpTasklistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddbyprojectOapiTdpTasklistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddbyprojectOapiTdpTasklistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddbyprojectOapiWorkspaceTasklistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddbyprojectOapiWorkspaceTasklistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddbyprojectOapiWorkspaceTasklistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyorgOapiTdpTasklistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyorgOapiTdpTasklistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HidebyorgOapiTdpTasklistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiSsoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiSsoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiSsoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiWorkbenchShortcutRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiWorkbenchShortcutResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiWorkbenchShortcutParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetguideuriOapiWorkbenchShortcutRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetguideuriOapiWorkbenchShortcutResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetguideuriOapiWorkbenchShortcutParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiWorkbenchShortcutRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiWorkbenchShortcutResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiWorkbenchShortcutParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkbenchShortcutRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkbenchShortcutResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkbenchShortcutParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkbenchShortcutRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkbenchShortcutResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkbenchShortcutParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemindOapiAppstoreInternalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemindOapiAppstoreInternalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemindOapiAppstoreInternalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Delete_call_backOapiCall_backRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Delete_call_backOapiCall_backResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_call_backOapiCall_backRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_call_backOapiCall_backResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_call_backOapiCall_backParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_call_backOapiCall_backRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_call_backOapiCall_backResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_sns_tokenOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_sns_tokenOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_sns_tokenOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_unactive_corpOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_unactive_corpOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_unactive_corpOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringPersonalorderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringPersonalorderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringPersonalorderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_agentOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_agentOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_agentOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_auth_infoOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_auth_infoOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_auth_infoOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_corp_tokenOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_corp_tokenOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_corp_tokenOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Activate_suiteOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Activate_suiteOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Activate_suiteOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_permanent_codeOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_permanent_codeOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_permanent_codeOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_suite_tokenOapiServiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_suite_tokenOapiServiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_suite_tokenOapiServiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateorgbotCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateorgbotCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateorgbotCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_call_back_failed_resultOapiCall_backRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_call_back_failed_resultOapiCall_backResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Register_call_backOapiCall_backRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Register_call_backOapiCall_backResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Register_call_backOapiCall_backParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceProjectMemberRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceProjectMemberRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceProjectMemberRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_org_user_countOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_org_user_countOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_org_user_countOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiWorkspaceProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiWorkspaceProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiWorkspaceProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_to_conversationOapiMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_to_conversationOapiMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_to_conversationOapiMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkspaceProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkspaceProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkspaceProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserinfoOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceProjectRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceProjectRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceProjectRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiRetailSellerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiRetailSellerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiRetailSellerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_persistent_codeOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_persistent_codeOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_persistent_codeOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiWorkspaceProjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiWorkspaceProjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceProjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceProjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceProjectParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecordOapiCheckinRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecordOapiCheckinResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecordOapiCheckinParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypagingOapiWorkbenchShortcutRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypagingOapiWorkbenchShortcutResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypagingOapiWorkbenchShortcutParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydaysOapiAttendanceScheduleShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydaysOapiAttendanceScheduleShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydaysOapiAttendanceScheduleShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_by_useridOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_by_useridOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_by_useridOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncOapiAttendanceGroupScheduleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncOapiAttendanceGroupScheduleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncOapiAttendanceGroupScheduleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Visible_scopesOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Visible_scopesOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Visible_scopesOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Set_visible_scopesOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Set_visible_scopesOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Set_visible_scopesOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_rule_listOapiMicroappRuleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_rule_listOapiMicroappRuleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_rule_listOapiMicroappRuleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_user_totalOapiMicroappRuleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_user_totalOapiMicroappRuleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_user_totalOapiMicroappRuleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiSsoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiSsoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiSsoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_jsapi_ticketOapiRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_jsapi_ticketOapiResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappRuleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappRuleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMicroappRuleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiFaceauthRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiFaceauthResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiFaceauthParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettokenOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ScopesOapiAuthRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ScopesOapiAuthResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettodonumOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettodonumOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettodonumOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetunreadcountOapiReportRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetunreadcountOapiReportResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetunreadcountOapiReportParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiSmartworkHrmMasterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiSmartworkHrmMasterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiSmartworkHrmMasterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserlistIsvCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserlistIsvCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserlistIsvCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalluserIsvCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalluserIsvCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalluserIsvCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserlistIsvCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserlistIsvCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserlistIsvCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveuserlistIsvCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveuserlistIsvCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveuserlistIsvCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TranslateOapiPlatformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TranslateOapiPlatformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TranslateOapiPlatformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiSmartdeviceDevicememberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiSmartdeviceDevicememberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiSmartdeviceDevicememberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceDevicememberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceDevicememberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceDevicememberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveallOapiSmartdeviceDevicememberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveallOapiSmartdeviceDevicememberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveallOapiSmartdeviceDevicememberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddvisitorOapiSmartdeviceVisitorRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddvisitorOapiSmartdeviceVisitorResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddvisitorOapiSmartdeviceVisitorParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EditvisitorOapiSmartdeviceVisitorRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EditvisitorOapiSmartdeviceVisitorResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EditvisitorOapiSmartdeviceVisitorParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleavetimebynamesOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleavetimebynamesOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleavetimebynamesOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryOrganizationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryOrganizationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatQrcodeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatQrcodeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiChatQrcodeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrouprobotOapiBipaasNotifyRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrouprobotOapiBipaasNotifyResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrouprobotOapiBipaasNotifyParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiSmartappFormInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiSmartappFormInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiSmartappFormInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessPrinterInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessPrinterInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessPrinterInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfinishOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfinishOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfinishOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiRhinoMosExecTrackRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiRhinoMosExecTrackResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiRhinoMosExecTrackParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesSizeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesSizeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesSizeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateorgbotCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateorgbotCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateorgbotCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiRobotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiRobotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiRobotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListorgbotCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListorgbotCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListorgbotCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiIndustryUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiIndustryUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiIndustryUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiIndustryDepartmentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiIndustryDepartmentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiIndustryDepartmentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDingTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDingTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDingTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCalendarRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCalendarResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCalendarParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDingRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDingResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiDingParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiEduCourseParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiEduCourseParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiEduCourseParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiEduCourseParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiEduCourseParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiEduCourseParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetAttendUpdateDataOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetAttendUpdateDataOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetAttendUpdateDataOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduMainDataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduMainDataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduMainDataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EndOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EndOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EndOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduSubDataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduSubDataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduSubDataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\JoinOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\JoinOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\JoinOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListorgbotbytypeandbottypeCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListorgbotbytypeandbottypeCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListorgbotbytypeandbottypeCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduTypeDataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduTypeDataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduTypeDataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListscheduleSmartworkAttendsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListscheduleSmartworkAttendsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListscheduleSmartworkAttendsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallOapiChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallOapiChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallOapiChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsimplegroupsSmartworkAttendsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsimplegroupsSmartworkAttendsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetsimplegroupsSmartworkAttendsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduSubjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduSubjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduSubjectParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduSubjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduSubjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduSubjectParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduSubjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduSubjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduSubjectParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdategroupnickOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdategroupnickOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdategroupnickOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TranslateOapiAiMtRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TranslateOapiAiMtResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TranslateOapiAiMtParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiDingTaskStatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiDingTaskStatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiDingTaskStatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiSmartworkHrmMasterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiSmartworkHrmMasterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiSmartworkHrmMasterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiSmartworkHrmMasterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiSmartworkHrmMasterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiSmartworkHrmMasterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetupdatedataOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetupdatedataOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetupdatedataOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_to_single_chatOapiCspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_to_single_chatOapiCspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_to_single_chatOapiCspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFacelevelRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFacelevelResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFacelevelParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiCspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiCspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiCspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_custom_spaceOapiCspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_custom_spaceOapiCspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_custom_spaceOapiCspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Grant_custom_spaceOapiCspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Grant_custom_spaceOapiCspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Grant_custom_spaceOapiCspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplytokenOapiSmartworkHrmFlexibleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplytokenOapiSmartworkHrmFlexibleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplytokenOapiSmartworkHrmFlexibleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransactionOapiFileUploadRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransactionOapiFileUploadResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransactionOapiFileUploadParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceGroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceGroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceGroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbysourceidOapiTdpTaskBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbysourceidOapiTdpTaskBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbysourceidOapiTdpTaskBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyusersOapiAttendanceScheduleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyusersOapiAttendanceScheduleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyusersOapiAttendanceScheduleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyidsOapiAttendanceGroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyidsOapiAttendanceGroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyidsOapiAttendanceGroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiAttendanceGroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbysourceidOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbysourceidOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbysourceidOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatepunchesOapiAttendanceShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatepunchesOapiAttendanceShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatepunchesOapiAttendanceShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CidOapiChatGetRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CidOapiChatGetResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CidOapiChatGetParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AgentOapiBipaasDiRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AgentOapiBipaasDiResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AgentOapiBipaasDiParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetoaurlOapiOrgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetoaurlOapiOrgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetoaurlOapiOrgParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_treeOapiBipaasMenuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_treeOapiBipaasMenuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\List_treeOapiBipaasMenuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveuserlistOapiCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveuserlistOapiCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveuserlistOapiCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerydimissionOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerydimissionOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerydimissionOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserlistOapiCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserlistOapiCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserlistOapiCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListdimissionOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListdimissionOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListdimissionOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalluserOapiCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalluserOapiCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalluserOapiCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserlistOapiCallRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserlistOapiCallResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserlistOapiCallParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendsmsOapiNewretailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendsmsOapiNewretailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendsmsOapiNewretailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendnotifyOapiCcoserviceEntranceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendnotifyOapiCcoserviceEntranceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendnotifyOapiCcoserviceEntranceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCourseParticipantRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCourseParticipantResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCourseParticipantParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModprofileOapiImpaasUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModprofileOapiImpaasUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModprofileOapiImpaasUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduSubjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduSubjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduSubjectParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduSubjectRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduSubjectResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduSubjectParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistCorpRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistCorpRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistCorpRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripMonthbillUrlRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripMonthbillUrlResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripMonthbillUrlParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportCommentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportCommentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportCommentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportReceiverRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportReceiverResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiReportReceiverParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbytypeOapiReportStatisticsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbytypeOapiReportStatisticsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbytypeOapiReportStatisticsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiChatMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiChatMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiChatMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiBipaasMenuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiBipaasMenuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiBipaasMenuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_reportOapiBipaasMenuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_reportOapiBipaasMenuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_reportOapiBipaasMenuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiAttendanceRecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiAttendanceRecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiAttendanceRecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetscreenOapiOrgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetscreenOapiOrgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetscreenOapiOrgParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListidsOapiProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListidsOapiProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListidsOapiProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydeviceOapiRhinoMosSpaceDeviceCheckInRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydeviceOapiRhinoMosSpaceDeviceCheckInResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbydeviceOapiRhinoMosSpaceDeviceCheckInParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosExecTrackTrackconditionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosExecTrackTrackconditionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosExecTrackTrackconditionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FilterOapiRhinoMosExecClothesUnperformedRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FilterOapiRhinoMosExecClothesUnperformedResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FilterOapiRhinoMosExecClothesUnperformedParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosExecTrackEntityconditionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosExecTrackEntityconditionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosExecTrackEntityconditionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiCardIntelligentEmpgroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiCardIntelligentEmpgroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiCardIntelligentEmpgroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRhinoMosExecTrackRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRhinoMosExecTrackResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRhinoMosExecTrackParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovefaceOapiSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovefaceOapiSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovefaceOapiSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmMasterCorpconfigRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmMasterCorpconfigResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmMasterCorpconfigParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ReworkOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ReworkOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ReworkOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRhinoMosExecTrackTrackersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRhinoMosExecTrackTrackersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRhinoMosExecTrackTrackersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InvalidbyentopOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InvalidbyentopOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InvalidbyentopOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiOrgpaasOrgInfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiOrgpaasOrgInfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoSalesOrderCustomInfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoSalesOrderCustomInfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoSalesOrderCustomInfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasOtoconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasOtoconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasOtoconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderBatchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderBatchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderBatchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderDetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderDetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderDetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelandhandoverOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelandhandoverOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelandhandoverOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderTagRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderTagResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoOrderTagParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModjobinfoOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModjobinfoOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModjobinfoOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddpreentryOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddpreentryOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddpreentryOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerypreentryOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerypreentryOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerypreentryOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryonjobOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryonjobOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryonjobOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCardTaskTodayRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCardTaskTodayResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduCardTaskTodayParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduCardTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduCardTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduCardTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendnotifyOapiSmartdeviceVisitorRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendnotifyOapiSmartdeviceVisitorResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendnotifyOapiSmartdeviceVisitorParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmessageOapiImpaasMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmessageOapiImpaasMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmessageOapiImpaasMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasfaceCorpSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasfaceCorpSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasfaceCorpSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiHireNavigationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiHireNavigationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiHireNavigationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiAttendanceApproveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiAttendanceApproveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiAttendanceApproveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAttendanceApproveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAttendanceApproveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiAttendanceApproveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteCorpExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteCorpExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteCorpExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalculateOapiAttendanceApproveDurationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalculateOapiAttendanceApproveDurationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CalculateOapiAttendanceApproveDurationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsCorpExtcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsCorpExtcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsCorpExtcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasbinddeviceCorpDeviceManageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasbinddeviceCorpDeviceManageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasbinddeviceCorpDeviceManageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddfaceCorpSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddfaceCorpSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddfaceCorpSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProcessWorkrecordTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProcessWorkrecordTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProcessWorkrecordTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrecognizenotifyCorpSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrecognizenotifyCorpSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrecognizenotifyCorpSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushinfoCorpSmartdeviceReceptionistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushinfoCorpSmartdeviceReceptionistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushinfoCorpSmartdeviceReceptionistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Getuserinfo_bycodeOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Getuserinfo_bycodeOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Getuserinfo_bycodeOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiReportRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiReportResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SimplelistOapiReportParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasfaceOapiSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasfaceOapiSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HasfaceOapiSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiPbpInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiPbpInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiPbpInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstanceGroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstanceGroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstanceGroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiPbpInstanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiPbpInstanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiPbpInstanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetdismissionlistOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetdismissionlistOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetdismissionlistOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstanceGroupPositionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstanceGroupPositionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstanceGroupPositionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiPbpInstanceGroupPositionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiPbpInstanceGroupPositionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiPbpInstanceGroupPositionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstancePositionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstancePositionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiPbpInstancePositionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiPbpInstanceGroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiPbpInstanceGroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiPbpInstanceGroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_msgOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_msgOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Send_msgOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAtsChannelAccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAtsChannelAccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAtsChannelAccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyownerOapiAtsJobRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyownerOapiAtsJobResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyownerOapiAtsJobParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAtsChannelAccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAtsChannelAccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAtsChannelAccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListtoptenSmartworkBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListtoptenSmartworkBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListtoptenSmartworkBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\MigrateOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\MigrateOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\MigrateOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddresumerecordOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddresumerecordOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddresumerecordOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DisableOapiPbpInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DisableOapiPbpInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DisableOapiPbpInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmessageOapiImpaasConversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmessageOapiImpaasConversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmessageOapiImpaasConversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasConversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasConversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasConversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifymemberOapiImpaasConversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifymemberOapiImpaasConversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifymemberOapiImpaasConversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateresumerecordOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateresumerecordOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateresumerecordOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelresumerecordOapiHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelresumerecordOapiHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelresumerecordOapiHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduClassStudentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduClassStudentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduClassStudentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduClassStudentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduClassStudentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduClassStudentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyteacherOapiEduClassRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyteacherOapiEduClassResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyteacherOapiEduClassParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduHomeworkStudentReportRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduHomeworkStudentReportResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduHomeworkStudentReportParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduHomeworkStudentCommentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduHomeworkStudentCommentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduHomeworkStudentCommentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkUserRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkUserRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkUserRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkUserCourseRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkUserCourseResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkUserCourseParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduHomeworkStudentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduHomeworkStudentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SubmitOapiEduHomeworkStudentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduHomeworkGroupRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduHomeworkGroupRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduHomeworkGroupRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecordOapiEduHomeworkStudentTopicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecordOapiEduHomeworkStudentTopicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecordOapiEduHomeworkStudentTopicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiAtsJobRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiAtsJobResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiAtsJobParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkStudentCommentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkStudentCommentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkStudentCommentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduHomeworkRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduHomeworkResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduHomeworkParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatControlgroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatControlgroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatControlgroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkTopicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkTopicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiEduHomeworkTopicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiEduHomeworkParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpHealthStepinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpHealthStepinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpHealthStepinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_admin_scopeOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_admin_scopeOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_admin_scopeOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenericOapiBipaasRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenericOapiBipaasResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenericOapiBipaasParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduHomeworkStudentCommentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduHomeworkStudentCommentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiEduHomeworkStudentCommentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduHomeworkStudentCommentRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduHomeworkStudentCommentResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiEduHomeworkStudentCommentParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduAlumniRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduAlumniResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessinstanceVariableRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessinstanceVariableResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessinstanceVariableParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiProcessinstanceFileRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiProcessinstanceFileResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiProcessinstanceFileParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbytimeOapiLiveGroupliveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbytimeOapiLiveGroupliveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbytimeOapiLiveGroupliveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DownloadOapiProcessinstanceFileRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DownloadOapiProcessinstanceFileResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DownloadOapiProcessinstanceFileParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InfoOapiProcessinstanceCspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InfoOapiProcessinstanceCspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InfoOapiProcessinstanceCspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceFacegroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceFacegroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceFacegroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiLiveGroupliveDetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiLiveGroupliveDetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiLiveGroupliveDetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceFacegroupDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceFacegroupDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiSmartdeviceFacegroupDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFacegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFacegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFacegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiSmartdeviceFacegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiSmartdeviceFacegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiSmartdeviceFacegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceFacegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EnableOapiSmartdeviceFacegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EnableOapiSmartdeviceFacegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EnableOapiSmartdeviceFacegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveallOapiSmartdeviceFacegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveallOapiSmartdeviceFacegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveallOapiSmartdeviceFacegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateSmartworkBpmsProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateSmartworkBpmsProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateSmartworkBpmsProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetroleOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetroleOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetroleOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Asyncsend_v2OapiMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Asyncsend_v2OapiMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Asyncsend_v2OapiMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiOpenencryptEncryptboxStatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiOpenencryptEncryptboxStatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiOpenencryptEncryptboxStatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiWorkspaceTasklistHiddenRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiWorkspaceTasklistHiddenResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiWorkspaceTasklistHiddenParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiTdpTasklistHiddenRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiTdpTasklistHiddenResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiTdpTasklistHiddenParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CloseOapiCustomerserviceSessionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CloseOapiCustomerserviceSessionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CloseOapiCustomerserviceSessionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserworkdataCorpHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserworkdataCorpHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetuserworkdataCorpHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiCustomerserviceMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiCustomerserviceMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiCustomerserviceMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiRhinoMosExecPerformContextRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiRhinoMosExecPerformContextResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiRhinoMosExecPerformContextParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCustomerserviceSessionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCustomerserviceSessionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCustomerserviceSessionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Verify_mobileOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Verify_mobileOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Verify_mobileOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiRhinoMosExecClothesIdRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiRhinoMosExecClothesIdResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiRhinoMosExecClothesIdParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProjectInviteShareurlRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProjectInviteShareurlResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProjectInviteShareurlParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProjectInviteDataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProjectInviteDataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProjectInviteDataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CleanOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CleanOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CleanOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetSmartworkCheckinRecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetSmartworkCheckinRecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetSmartworkCheckinRecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecognizeOapiOcrStructuredRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecognizeOapiOcrStructuredResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecognizeOapiOcrStructuredParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessFormConditionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessFormConditionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessFormConditionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiAttendanceApproveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiAttendanceApproveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiAttendanceApproveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInactiveUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInactiveUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInactiveUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpUserPersonainfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpUserPersonainfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpUserPersonainfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiMcsConferenceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiMcsConferenceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiMcsConferenceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaFollowrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaFollowrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaContactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaContactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaCustomerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaCustomerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FeatureOapiSmartdeviceFaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FeatureOapiSmartdeviceFaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FeatureOapiSmartdeviceFaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatevariablesSmartworkBpmsProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatevariablesSmartworkBpmsProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatevariablesSmartworkBpmsProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupPermissionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupPermissionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupPermissionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetwithformSmartworkBpmsProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetwithformSmartworkBpmsProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetwithformSmartworkBpmsProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmAuthGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpDingTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpDingTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateCorpDingTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteOapiProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteOapiProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteOapiProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataContactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataContactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataContactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataFollowrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataFollowrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataFollowrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataCustomerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataCustomerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataCustomerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataCustomerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataCustomerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataCustomerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataContanctRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataContanctResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataContanctParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataFollowrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataFollowrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataFollowrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataContactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataContactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataContactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiImChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiImChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiImChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiImChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiImChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiImChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConvertOapiImChatCidRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConvertOapiImChatCidResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConvertOapiImChatCidParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbybiztypeSmartworkBpmsProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbybiztypeSmartworkBpmsProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbybiztypeSmartworkBpmsProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetvisibleSmartworkBpmsProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetvisibleSmartworkBpmsProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetvisibleSmartworkBpmsProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiInspectTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiInspectTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiInspectTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCustomerserviceTicketRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCustomerserviceTicketResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCustomerserviceTicketParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCustomerserviceActionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCustomerserviceActionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCustomerserviceActionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteOapiCustomerserviceActivityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteOapiCustomerserviceActivityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteOapiCustomerserviceActivityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCustomerserviceTicketRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCustomerserviceTicketResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCustomerserviceTicketParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiRoleScopeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiRoleScopeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiRoleScopeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetpushidOapiRobotMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetpushidOapiRobotMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduRolesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduRolesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduRolesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCspaceAuditlogRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCspaceAuditlogResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCspaceAuditlogParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListSmartworkBpmsProcessinstanceidRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListSmartworkBpmsProcessinstanceidResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListSmartworkBpmsProcessinstanceidParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListcontactOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListcontactOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListcontactOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCcoserviceServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCcoserviceServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCcoserviceServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypushidOapiRobotMessageStatisticsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypushidOapiRobotMessageStatisticsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypushidOapiRobotMessageStatisticsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRobotMessageStatisticsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRobotMessageStatisticsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRobotMessageStatisticsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteSmartworkBpmsProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteSmartworkBpmsProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ExecuteSmartworkBpmsProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DisbandOapiImChatServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DisbandOapiImChatServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DisbandOapiImChatServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImChatServicegroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImChatServicegroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImChatServicegroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImChatServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImChatServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImChatServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyconversationidOapiRobotMessageStatisticsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyconversationidOapiRobotMessageStatisticsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyconversationidOapiRobotMessageStatisticsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiImChatServicegroupMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiImChatServicegroupMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiImChatServicegroupMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_deptidOapiSmartdeviceAtmachineRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_deptidOapiSmartdeviceAtmachineResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_deptidOapiSmartdeviceAtmachineParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_useridOapiSmartdeviceAtmachineRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_useridOapiSmartdeviceAtmachineResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_useridOapiSmartdeviceAtmachineParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInactiveUserV2Request;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInactiveUserV2Response;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInactiveUserV2Params;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceAtmachineUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceAtmachineUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartdeviceAtmachineUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncSmartworkBpmsProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncSmartworkBpmsProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncSmartworkBpmsProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiWorkspaceProjectNoticeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiWorkspaceProjectNoticeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiWorkspaceProjectNoticeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavMicroappDetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavMicroappDetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavMicroappDetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavTelconfRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavTelconfResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavTelconfParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncuserCorpDeptgroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncuserCorpDeptgroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncuserCorpDeptgroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerybyidOapiSmartdeviceDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerybyidOapiSmartdeviceDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerybyidOapiSmartdeviceDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiDdpaasObjectdataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiDdpaasObjectdataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiDdpaasObjectdataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiSmartdeviceBindRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiSmartdeviceBindResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiSmartdeviceBindParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DetailsOapiStatisticsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DetailsOapiStatisticsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DetailsOapiStatisticsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckuidOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckuidOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckuidOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRetailUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRetailUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiRetailUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindapplyOapiRetailUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindapplyOapiRetailUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindapplyOapiRetailUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenerateOapiRetailUserTokenRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenerateOapiRetailUserTokenResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenerateOapiRetailUserTokenParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInspectFeedbackRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInspectFeedbackResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiInspectFeedbackParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiRetailUserTokenRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiRetailUserTokenResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiRetailUserTokenParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindqueryOapiRetailUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindqueryOapiRetailUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindqueryOapiRetailUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrouplistOapiSmartworkHrmEmployeeFieldRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrouplistOapiSmartworkHrmEmployeeFieldResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrouplistOapiSmartworkHrmEmployeeFieldParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupWifisRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupWifisResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupWifisParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupWifisRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupWifisResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupWifisParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RotateedkOapiOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RotateedkOapiOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RotateedkOapiOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCustomerserviceStatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCustomerserviceStatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCustomerserviceStatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupWifisRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupWifisResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupWifisParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateconfigOapiOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateconfigOapiOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateconfigOapiOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InitOapiAlitripBtripReimbursementRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InitOapiAlitripBtripReimbursementResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InitOapiAlitripBtripReimbursementParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupPositionsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupPositionsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupPositionsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AuthappcloseOapiOrgOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AuthappcloseOapiOrgOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AuthappcloseOapiOrgOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavChatSummaryRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavChatSummaryResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavChatSummaryParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupPositionsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupPositionsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupPositionsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiOrgOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiOrgOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiOrgOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoliveDetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoliveDetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoliveDetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupPositionsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupPositionsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupPositionsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RegistekmsOapiOrgOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RegistekmsOapiOrgOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RegistekmsOapiOrgOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavDauSummaryRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavDauSummaryResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavDauSummaryParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupUsersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupUsersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupUsersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiIsvOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiIsvOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\HeartbeatOapiIsvOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavInactivatedUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavInactivatedUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavInactivatedUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryinfoOapiCertifyRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryinfoOapiCertifyResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryinfoOapiCertifyParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupUsersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupUsersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiAttendanceGroupUsersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AuthappcloseOapiIsvOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AuthappcloseOapiIsvOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AuthappcloseOapiIsvOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptDauRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptDauResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptDauParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupUsersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupUsersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAttendanceGroupUsersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RegistekmsOapiIsvOpenencryptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RegistekmsOapiIsvOpenencryptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RegistekmsOapiIsvOpenencryptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConfirmOapiAttendanceCorpRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConfirmOapiAttendanceCorpResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConfirmOapiAttendanceCorpParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListSmartworkBpmsProcessinstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListSmartworkBpmsProcessinstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListSmartworkBpmsProcessinstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatisticsOapiLiveGroupliveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatisticsOapiLiveGroupliveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StatisticsOapiLiveGroupliveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiLiveGroupliveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiLiveGroupliveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiLiveGroupliveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringStoreRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringStoreResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringStoreParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiCrmObjectmetaParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCrmMenuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCrmMenuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCrmMenuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiCrmObjectdataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCcoserviceServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCcoserviceServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCcoserviceServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddmemberCcoserviceServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddmemberCcoserviceServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddmemberCcoserviceServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransferOapiUserAssociated_unionidRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransferOapiUserAssociated_unionidResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransferOapiUserAssociated_unionidParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiIndustryStudentpoolRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiIndustryStudentpoolResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiIndustryStudentpoolParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryPackRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiIndustryPackResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiRelationRemarkRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiRelationRemarkResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiRelationRemarkParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCrmObjectdataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiEduClassconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiEduClassconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiEduClassconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiRoleVisibleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiRoleVisibleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiRoleVisibleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiRoleVisibleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiRoleVisibleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiRoleVisibleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRoleVisibleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRoleVisibleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRoleVisibleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiDdpaasObjectmetaRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiDdpaasObjectmetaResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DescribeOapiDdpaasObjectmetaParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiDdpaasObjectdataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiDdpaasObjectdataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiDdpaasObjectdataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringOpenOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringOpenOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringOpenOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmockCorpMessageCorpconversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmockCorpMessageCorpconversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmockCorpMessageCorpconversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAlitripBtripReimbursementRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAlitripBtripReimbursementResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAlitripBtripReimbursementParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceStatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceStatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceStatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddwithuseridOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddwithuseridOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddwithuseridOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCustomerserviceStatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCustomerserviceStatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelwithuseridOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelwithuseridOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelwithuseridOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GeneratecodeIsvBlazersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GeneratecodeIsvBlazersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GeneratecodeIsvBlazersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiAlitripBtripReimbursementAppstatusRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiAlitripBtripReimbursementAppstatusResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiAlitripBtripReimbursementAppstatusParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbinddataCorpBlazersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbinddataCorpBlazersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListshortcutOapiOrgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListshortcutOapiOrgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendforpayslipOapiSmartworkHrmSmsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendforpayslipOapiSmartworkHrmSmsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendforpayslipOapiSmartworkHrmSmsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbizidCorpBlazersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbizidCorpBlazersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetshortcutOapiOrgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetshortcutOapiOrgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetshortcutOapiOrgParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CapacityOapiCateringDeductRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CapacityOapiCateringDeductResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CapacityOapiCateringDeductParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PredeductOapiCateringRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PredeductOapiCateringResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PredeductOapiCateringParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessWorkrecordTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessWorkrecordTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiProcessWorkrecordTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordForwardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordForwardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiProcessWorkrecordForwardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessWorkrecordTemplateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessWorkrecordTemplateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessWorkrecordTemplateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripReimbursementRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripReimbursementResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripReimbursementParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangeOapiCustomerserviceEventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangeOapiCustomerserviceEventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangeOapiCustomerserviceEventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiMicroappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiMicroappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiMicroappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptVideoliveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptVideoliveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptVideoliveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EnableOapiPbpInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EnableOapiPbpInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EnableOapiPbpInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiChatbotMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiChatbotMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiChatbotMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiUserCorpinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiUserCorpinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiUserCorpinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Create_orderOapiAppstoreOrdersSpecial_canalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Create_orderOapiAppstoreOrdersSpecial_canalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Create_orderOapiAppstoreOrdersSpecial_canalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_orderOapiAppstoreOrdersSpecial_canalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_orderOapiAppstoreOrdersSpecial_canalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_orderOapiAppstoreOrdersSpecial_canalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAppstoreGoodsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAppstoreGoodsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAppstoreGoodsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpReportRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpReportResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpReportParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InquiryOapiAppstoreOrdersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InquiryOapiAppstoreOrdersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InquiryOapiAppstoreOrdersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiPbpEventResultRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiPbpEventResultResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiPbpEventResultParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiPbpEventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiPbpEventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiPbpEventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiPbpEventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiPbpEventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncOapiPbpEventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCollectionInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCollectionInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCollectionInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchCorpEmpRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchCorpEmpResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchCorpEmpParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SwitchOapiAttendanceApproveScheduleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SwitchOapiAttendanceApproveScheduleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SwitchOapiAttendanceApproveScheduleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendstaffmessageOapiImpaasNewretailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendstaffmessageOapiImpaasNewretailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendstaffmessageOapiImpaasNewretailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteroleCorpRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteroleCorpRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteroleCorpRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetrolegroupCorpRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetrolegroupCorpRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetrolegroupCorpRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolesforempsCorpRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolesforempsCorpRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolesforempsCorpRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoverolesforempsCorpRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoverolesforempsCorpRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoverolesforempsCorpRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiProcessWorkrecordTaskgroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiProcessWorkrecordTaskgroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiProcessWorkrecordTaskgroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_nameOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_nameOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_nameOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendstaffgroupmessageOapiImpaasNewretailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendstaffgroupmessageOapiImpaasNewretailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendstaffgroupmessageOapiImpaasNewretailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovevisitorOapiSmartdeviceVisitorRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovevisitorOapiSmartdeviceVisitorResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovevisitorOapiSmartdeviceVisitorParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiImpaasUserSubaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiImpaasUserSubaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiImpaasUserSubaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiImpaasUserSubaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiImpaasUserSubaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiImpaasUserSubaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddchatbotinstanceCorpChatbotRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddchatbotinstanceCorpChatbotResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddchatbotinstanceCorpChatbotParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCollectionFormRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCollectionFormResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCollectionFormParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmObjectdataCustomerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmObjectdataCustomerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmObjectdataCustomerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCrmObjectdataContactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCrmObjectdataContactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCrmObjectdataContactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpLivenessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpLivenessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCrmObjectdataCustomerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCrmObjectdataCustomerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCrmObjectdataCustomerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmObjectdataContactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmObjectdataContactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCrmObjectdataContactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiSmartdeviceDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiSmartdeviceDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiSmartdeviceDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatenickOapiSmartdeviceDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatenickOapiSmartdeviceDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdatenickOapiSmartdeviceDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiSmartdeviceDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiSmartdeviceDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiSmartdeviceDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbypageOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerylistOapiSmartdeviceDeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerylistOapiSmartdeviceDeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerylistOapiSmartdeviceDeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiChatBanwordsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiChatBanwordsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiChatBanwordsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplyoutidOapiSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplyoutidOapiSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplyoutidOapiSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiImIntelligentCardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiImIntelligentCardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiImIntelligentCardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiNewmanufacturerOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiNewmanufacturerOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiNewmanufacturerOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatMemberFriendswitchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatMemberFriendswitchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatMemberFriendswitchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleaveapprovedurationSmartworkAttendsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleaveapprovedurationSmartworkAttendsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleaveapprovedurationSmartworkAttendsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappPackageconfigRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappPackageconfigResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappPackageconfigParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryorginfoOapiNewretailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryorginfoOapiNewretailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PostOapiSmartdeviceEventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PostOapiSmartdeviceEventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PostOapiSmartdeviceEventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiSmartdeviceExternalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiSmartdeviceExternalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiSmartdeviceExternalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCircleEnworkRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCircleEnworkResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCircleEnworkParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiServicegroupMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiServicegroupMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiServicegroupMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiFugongProcess_codeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiFugongProcess_codeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiFugongHealth_dataRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiFugongHealth_dataResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiFugongHealth_dataParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoOpenserviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoOpenserviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoOpenserviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallOapiWorkspaceTestappRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallOapiWorkspaceTestappResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InstallOapiWorkspaceTestappParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiCustomizeConfigRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiCustomizeConfigResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiCustomizeConfigParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripBindTaobaoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripBindTaobaoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripBindTaobaoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripAddressRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripAddressResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripAddressParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TaobaoOapiAlitripBtripUnbindRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TaobaoOapiAlitripBtripUnbindResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TaobaoOapiAlitripBtripUnbindParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiRobotIntelligentMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiRobotIntelligentMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiRobotIntelligentMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiDingpayVirtualaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiDingpayVirtualaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiDingpayVirtualaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchqueryOapiDingpayBillRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchqueryOapiDingpayBillResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchqueryOapiDingpayBillParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncstatusOapiDingpayOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncstatusOapiDingpayOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SyncstatusOapiDingpayOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchquerycountOapiDingpayBillRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchquerycountOapiDingpayBillResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchquerycountOapiDingpayBillParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\MarkotherpayOapiDingpayOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\MarkotherpayOapiDingpayOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\MarkotherpayOapiDingpayOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerytagOapiDingpayBillRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerytagOapiDingpayBillResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerytagOapiDingpayBillParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplypayOapiDingpayOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplypayOapiDingpayOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ApplypayOapiDingpayOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceCorpInviteactiveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceCorpInviteactiveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceCorpInviteactiveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OpenOapiAttendanceCorpInviteactiveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OpenOapiAttendanceCorpInviteactiveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OpenOapiAttendanceCorpInviteactiveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessFormRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessFormResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiProcessFormParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessTemplateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessTemplateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveOapiProcessTemplateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMaterialArticleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMaterialArticleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMaterialArticleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMaterialNewsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMaterialNewsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMaterialNewsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiMaterialNewsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiMaterialNewsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiMaterialNewsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMaterialNewsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMaterialNewsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiMaterialNewsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMaterialNewsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMaterialNewsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMaterialNewsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMaterialNewsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMaterialNewsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMaterialNewsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMaterialArticleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMaterialArticleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiMaterialArticleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiMaterialArticleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiMaterialArticleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PublishOapiMaterialArticleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiMaterialArticleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiMaterialArticleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiMaterialArticleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMaterialArticleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMaterialArticleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiMaterialArticleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMaterialArticleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMaterialArticleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiMaterialArticleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteCorpExtRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteCorpExtResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteCorpExtParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddCorpExtRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddCorpExtResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddCorpExtParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiSmartdeviceQrRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiSmartdeviceQrResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiSmartdeviceQrParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpExtRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpExtResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpExtParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsCorpExtRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsCorpExtResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListlabelgroupsCorpExtParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCollectionFormRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCollectionFormResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCollectionFormParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Test1OapiXiaoxuanPreRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Test1OapiXiaoxuanPreResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Test1OapiXiaoxuanPreParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCalendarRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCalendarResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCalendarParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenerateOapiCspaceAuthRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenerateOapiCspaceAuthResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GenerateOapiCspaceAuthParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiCspaceAuthRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiCspaceAuthResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiCspaceAuthParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCspaceAuthRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCspaceAuthResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCspaceAuthParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiImGroupappSysmsgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiImGroupappSysmsgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiImGroupappSysmsgParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeletebyprojectOapiWorkspaceTaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeletebyprojectOapiWorkspaceTaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeletebyprojectOapiWorkspaceTaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetusergroupSmartworkAttendsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetusergroupSmartworkAttendsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetusergroupSmartworkAttendsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_role_groupOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_role_groupOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_role_groupOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerypayrelatedtemplateOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerypayrelatedtemplateOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_roleOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_roleOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Add_roleOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_roleOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_roleOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Update_roleOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceTokenRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceTokenResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceTokenParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceClassRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceClassResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAttendanceClassParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessPrinterTemplateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessPrinterTemplateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessPrinterTemplateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridCorpHealthStepinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridCorpHealthStepinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridCorpHealthStepinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserstatusCorpHealthStepinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserstatusCorpHealthStepinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetuserstatusCorpHealthStepinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfreezeOapiCateringRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfreezeOapiCateringResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfreezeOapiCateringParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_mobileOapiUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_mobileOapiUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Get_by_mobileOapiUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ScrapOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ScrapOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ScrapOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiServiceaccountMenuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiServiceaccountMenuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiServiceaccountMenuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiRhinoMosExecPerformConditionalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiRhinoMosExecPerformConditionalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\StartOapiRhinoMosExecPerformConditionalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettitleCorpInvoiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GettitleCorpInvoiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageOtotaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageOtotaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageOtotaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbydeptidOapiImpaasGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbydeptidOapiImpaasGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbydeptidOapiImpaasGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateentranceidOapiImpaasConversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateentranceidOapiImpaasConversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateentranceidOapiImpaasConversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecClothesRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecClothesResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecClothesParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoMosExecPerformRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoMosExecPerformResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoMosExecPerformParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesUnperformedRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesUnperformedResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesUnperformedParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdevicePrintdetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdevicePrintdetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdevicePrintdetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesConditionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesConditionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecClothesConditionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageGrouptaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageGrouptaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageGrouptaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendgroupOapiRobotMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendgroupOapiRobotMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendgroupOapiRobotMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendotoOapiRobotMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendotoOapiRobotMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendotoOapiRobotMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappAppinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappAppinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappAppinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappDeploypackageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappDeploypackageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappDeploypackageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappAppversionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappAppversionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappAppversionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappDeploywindowRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappDeploywindowResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappDeploywindowParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduDeptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduDeptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduDeptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecOperationConditionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecOperationConditionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosExecOperationConditionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduDeptRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduDeptResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduDeptParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InOapiRhinoMosSpaceDeviceCheckRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InOapiRhinoMosSpaceDeviceCheckResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InOapiRhinoMosSpaceDeviceCheckParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduUserRelationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduUserRelationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduUserRelationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceDeviceCheckInRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceDeviceCheckInResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceDeviceCheckInParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduUserRelationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduUserRelationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduUserRelationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosSpaceWorkstationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosSpaceWorkstationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosSpaceWorkstationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Createo2oOapiImpaasConverstionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Createo2oOapiImpaasConverstionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Createo2oOapiImpaasConverstionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OutOapiRhinoMosSpaceDeviceCheckRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OutOapiRhinoMosSpaceDeviceCheckResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OutOapiRhinoMosSpaceDeviceCheckParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiEduUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpsertOapiRhinoMosSpaceWorkstationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpsertOapiRhinoMosSpaceWorkstationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpsertOapiRhinoMosSpaceWorkstationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiServiceaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiServiceaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiServiceaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecPerformBatchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecPerformBatchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiRhinoMosExecPerformBatchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiMessageMassRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiMessageMassResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendOapiMessageMassParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceWorkerCheckInRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceWorkerCheckInResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceWorkerCheckInParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiServiceaccountMenuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiServiceaccountMenuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiServiceaccountMenuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InOapiRhinoMosSpaceWorkerCheckRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InOapiRhinoMosSpaceWorkerCheckResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InOapiRhinoMosSpaceWorkerCheckParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiServiceaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiServiceaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiServiceaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceWorkstationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceWorkstationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpaceWorkstationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiServiceaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiServiceaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiServiceaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnscrapOapiRhinoMosExecClothesBatchRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnscrapOapiRhinoMosExecClothesBatchResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnscrapOapiRhinoMosExecClothesBatchParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetflowOapiRhinoMosLayoutOperationdefRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetflowOapiRhinoMosLayoutOperationdefResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetflowOapiRhinoMosLayoutOperationdefParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EditassignOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EditassignOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\EditassignOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NextOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NextOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NextOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OutOapiRhinoMosSpaceWorkerCheckRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OutOapiRhinoMosSpaceWorkerCheckResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\OutOapiRhinoMosSpaceWorkerCheckParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosSpacePoiRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosSpacePoiResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosSpacePoiParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ActiveflowOapiRhinoMosLayoutOperationdefRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ActiveflowOapiRhinoMosLayoutOperationdefResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ActiveflowOapiRhinoMosLayoutOperationdefParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFocusdetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFocusdetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiSmartdeviceFocusdetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesGroupbyoperationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesGroupbyoperationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CountOapiRhinoMosExecClothesGroupbyoperationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduFaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduFaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduFaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpsertOapiRhinoMosSpacePoiRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpsertOapiRhinoMosSpacePoiResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpsertOapiRhinoMosSpacePoiParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InactiveOapiRhinoMosExecOperationConditionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InactiveOapiRhinoMosExecOperationConditionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\InactiveOapiRhinoMosExecOperationConditionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpacePoiRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpacePoiResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosSpacePoiParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindCorpBlazersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindCorpBlazersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovemappingCorpBlazersRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovemappingCorpBlazersResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovemappingCorpBlazersParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SectionlastOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SectionlastOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SectionlastOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosLayoutOperationdefRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosLayoutOperationdefResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoMosLayoutOperationdefParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCalendarV2EventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCalendarV2EventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiCalendarV2EventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveflowOapiRhinoMosLayoutOperationdefRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveflowOapiRhinoMosLayoutOperationdefResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SaveflowOapiRhinoMosLayoutOperationdefParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DetailOapiCalendarV2EventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DetailOapiCalendarV2EventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DetailOapiCalendarV2EventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PrevOapiRhinoMosLayoutOperationdefsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PrevOapiRhinoMosLayoutOperationdefsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PrevOapiRhinoMosLayoutOperationdefsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiAlitripBtripApprovalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiAlitripBtripApprovalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiAlitripBtripApprovalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiCalendarV2EventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiCalendarV2EventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CancelOapiCalendarV2EventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCalendarV2AttendeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCalendarV2AttendeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCalendarV2AttendeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PlaybackOapiLiveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PlaybackOapiLiveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PlaybackOapiLiveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappMiniappversionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappMiniappversionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMiniappMiniappversionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiLiveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiLiveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiLiveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoHumanresEmployeeProductionteamRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoHumanresEmployeeProductionteamResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoHumanresEmployeeProductionteamParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiLiveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiLiveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiLiveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoHumanresCorpemployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoHumanresCorpemployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoHumanresCorpemployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoCooperationCarrierRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoCooperationCarrierResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoCooperationCarrierParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAtsJobRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAtsJobResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAtsJobParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoDeviceUniquecodeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoDeviceUniquecodeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiRhinoDeviceUniquecodeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAtsJobDeliverRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAtsJobDeliverResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAtsJobDeliverParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CollectOapiAtsRpaResumeMailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CollectOapiAtsRpaResumeMailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CollectOapiAtsRpaResumeMailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresProcessStructuralClusterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresProcessStructuralClusterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresProcessStructuralClusterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresProductionteamRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresProductionteamResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresProductionteamParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleavestatusOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleavestatusOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetleavestatusOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiEduFaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiEduFaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiEduFaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoDtechProcessTypeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoDtechProcessTypeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateroleOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateroleOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateroleOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddroleOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddroleOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddroleOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolegroupOapiRoleRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolegroupOapiRoleResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddrolegroupOapiRoleParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbycertOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbycertOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbycertOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiServiceaccountRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiServiceaccountResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiServiceaccountParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCalendarV2EventRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCalendarV2EventResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCalendarV2EventParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmessageOapiKefuRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmessageOapiKefuResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendmessageOapiKefuParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecPerformConditionalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecPerformConditionalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\FinishOapiRhinoMosExecPerformConditionalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresEmployeeProcessCapacityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresEmployeeProcessCapacityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresEmployeeProcessCapacityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresEmployeeProcessBestdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresEmployeeProcessBestdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRhinoHumanresEmployeeProcessBestdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ForecastOapiProcessApproversRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ForecastOapiProcessApproversResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ForecastOapiProcessApproversParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiImpaasRelationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiImpaasRelationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiImpaasRelationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransformOapiChatRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransformOapiChatResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransformOapiChatParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddprofileOapiImpaasUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddprofileOapiImpaasUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddprofileOapiImpaasUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelOapiImpaasRelationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelOapiImpaasRelationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DelOapiImpaasRelationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetprofileOapiImpaasUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetprofileOapiImpaasUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetprofileOapiImpaasUserParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpEncryptionKeyRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListCorpEncryptionKeyResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessBaseinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessBaseinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiProcessBaseinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryCorpConferenceDetailsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryCorpConferenceDetailsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryCorpConferenceDetailsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCooplistGetRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCooplistGetResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCooplistGetParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringMealconfigGetRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringMealconfigGetResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringMealconfigGetParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringApplylistCorpidlistGetRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringApplylistCorpidlistGetResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringApplylistCorpidlistGetParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCoopDealRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCoopDealResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCoopDealParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiProcessWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCollectionInstanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCollectionInstanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCollectionInstanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpgradeOapiImChatServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpgradeOapiImChatServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpgradeOapiImChatServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatSubadminRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatSubadminResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatSubadminParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbyuseridOapiWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbyuseridOapiWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbyuseridOapiWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifymemberinfoOapiImpaasGroupmemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifymemberinfoOapiImpaasGroupmemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifymemberinfoOapiImpaasGroupmemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DismissOapiImpaasGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DismissOapiImpaasGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DismissOapiImpaasGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmemberlistOapiImpaasGroupmemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmemberlistOapiImpaasGroupmemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmemberlistOapiImpaasGroupmemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImpaasGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImpaasGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImpaasGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiImpaasGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavVideoliveRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavVideoliveResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavVideoliveParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProcessTemplateUpgradeinfoRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProcessTemplateUpgradeinfoResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiProcessTemplateUpgradeinfoParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavVideoconfRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavVideoconfResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacDatavVideoconfParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpgradeOapiProcessTemplateRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpgradeOapiProcessTemplateResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpgradeOapiProcessTemplateParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TerminateOapiDingpayOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TerminateOapiDingpayOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TerminateOapiDingpayOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpDeviceManageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpDeviceManageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetCorpDeviceManageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerylistCorpDeviceManageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerylistCorpDeviceManageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QuerylistCorpDeviceManageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CleanOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CleanOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CleanOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchupdateOapiProcessWorkrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchupdateOapiProcessWorkrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchupdateOapiProcessWorkrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpDeviceNickRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpDeviceNickResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpDeviceNickParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangegroupownerOapiImpaasConversaionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangegroupownerOapiImpaasConversaionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ChangegroupownerOapiImpaasConversaionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetclassOapiAttendanceTestRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetclassOapiAttendanceTestResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetclassOapiAttendanceTestParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiImpaasMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiImpaasMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AsyncsendOapiImpaasMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindCorpDeviceManageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindCorpDeviceManageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindCorpDeviceManageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SuggestOapiAlitripBtripTrainCityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SuggestOapiAlitripBtripTrainCityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SuggestOapiAlitripBtripTrainCityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmessagestatusOapiImpaasMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmessagestatusOapiImpaasMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetmessagestatusOapiImpaasMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAlitripBtripCostCenterEntityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAlitripBtripCostCenterEntityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAlitripBtripCostCenterEntityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NewOapiAlitripBtripApprovalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NewOapiAlitripBtripApprovalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NewOapiAlitripBtripApprovalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripCategoryAddressRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripCategoryAddressResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripCategoryAddressParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatThemeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatThemeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiChatThemeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRetailSellerRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRetailSellerResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRetailSellerParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRetailSellerOrgdetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRetailSellerOrgdetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRetailSellerOrgdetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiRetailSellerOrgRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiRetailSellerOrgResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CheckOapiRetailSellerOrgParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiChatTagRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiChatTagResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiChatTagParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiChatTagRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiChatTagResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiChatTagParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoDtechMachineParamRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoDtechMachineParamResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiRhinoDtechMachineParamParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\IsignoreproblemcheckOapiCcoserviceServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\IsignoreproblemcheckOapiCcoserviceServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\IsignoreproblemcheckOapiCcoserviceServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrantOapiMedalCorpmedalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrantOapiMedalCorpmedalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GrantOapiMedalCorpmedalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\WearOapiMedalCorpmedalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\WearOapiMedalCorpmedalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\WearOapiMedalCorpmedalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListidsOapiBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListidsOapiBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListidsOapiBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpExtRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpExtResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateCorpExtParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiBlackboardRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiBlackboardResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiBlackboardParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMedalCorpmedalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMedalCorpmedalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiMedalCorpmedalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateservicetimeOapiCcoserviceServicegroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateservicetimeOapiCcoserviceServicegroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateservicetimeOapiCcoserviceServicegroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripApplyRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripApplyResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripApplyParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripApplyRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripApplyResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiAlitripBtripApplyParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCoopcontactGetRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCoopcontactGetResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringCoopcontactGetParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PreviewOapiProcessinstanceCspaceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PreviewOapiProcessinstanceCspaceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PreviewOapiProcessinstanceCspaceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Sync_activityOapiSnsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Sync_activityOapiSnsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\Sync_activityOapiSnsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransferOapiAlitripBtripCostCenterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransferOapiAlitripBtripCostCenterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TransferOapiAlitripBtripCostCenterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripInvoiceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripInvoiceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripInvoiceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripFlightOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripFlightOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripFlightOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiBlackboardCategoryRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiBlackboardCategoryResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiBlackboardCategoryParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripTrainOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripTrainOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripTrainOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatServicegroupNoticeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatServicegroupNoticeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiImChatServicegroupNoticeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAlitripBtripCostCenterEntityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAlitripBtripCostCenterEntityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAlitripBtripCostCenterEntityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripHotelOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripHotelOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripHotelOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCustomizeConversationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCustomizeConversationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiCustomizeConversationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkspaceCorpMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkspaceCorpMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiWorkspaceCorpMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiWorkspaceCorpGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiWorkspaceCorpGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BindOapiWorkspaceCorpGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiWorkspaceCorpGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiWorkspaceCorpGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnbindOapiWorkspaceCorpGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiWorkspaceCorpMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiWorkspaceCorpMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiWorkspaceCorpMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiTdpProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiTdpProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemoveOapiTdpProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiTdpTaskBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiTdpTaskBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiTdpTaskBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiMessageMassRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiMessageMassResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RecallOapiMessageMassParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiTdpProjectBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiTdpProjectBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiTdpProjectBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTdpProjectBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTdpProjectBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTdpProjectBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiTdpTaskBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiTdpTaskBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiTdpTaskBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnionexportOapiSmartworkHrmEmployeeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnionexportOapiSmartworkHrmEmployeeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnionexportOapiSmartworkHrmEmployeeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiTdpProjectBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiTdpProjectBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiTdpProjectBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiTdpProjectBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiTdpProjectBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiTdpProjectBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeletebyprojectOapiTdpTaskBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeletebyprojectOapiTdpTaskBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeletebyprojectOapiTdpTaskBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiTdpProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiTdpProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiTdpProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiTdpProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiTdpProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchaddOapiTdpProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchremoveOapiTdpProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchremoveOapiTdpProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BatchremoveOapiTdpProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbyprojectOapiTdpProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbyprojectOapiTdpProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetbyprojectOapiTdpProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiTdpTaskBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiTdpTaskBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\CreateOapiTdpTaskBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacV2DatavVideoconfRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacV2DatavVideoconfResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiKacV2DatavVideoconfParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiAlitripBtripCostCenterEntityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiAlitripBtripCostCenterEntityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SetOapiAlitripBtripCostCenterEntityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovebyprojectOapiTdpProjectMemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovebyprojectOapiTdpProjectMemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\RemovebyprojectOapiTdpProjectMemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAlitripBtripCostCenterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAlitripBtripCostCenterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAlitripBtripCostCenterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTdpTaskBasicRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTdpTaskBasicResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiTdpTaskBasicParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiAlitripBtripCostCenterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiAlitripBtripCostCenterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiAlitripBtripCostCenterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BaseinfoCorpSearchCorpcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BaseinfoCorpSearchCorpcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BaseinfoCorpSearchCorpcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NewOapiAlitripBtripCostCenterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NewOapiAlitripBtripCostCenterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\NewOapiAlitripBtripCostCenterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConfirmOapiCallbackFailrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConfirmOapiCallbackFailrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ConfirmOapiCallbackFailrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAlitripBtripApprovalRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAlitripBtripApprovalResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiAlitripBtripApprovalParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCallbackFailrecordRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCallbackFailrecordResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiCallbackFailrecordParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAlitripBtripCostCenterRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAlitripBtripCostCenterResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiAlitripBtripCostCenterParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListmemberCorpConversationCorpconversionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListmemberCorpConversationCorpconversionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListmemberCorpConversationCorpconversionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiImpaasGroupmemberRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiImpaasGroupmemberResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiImpaasGroupmemberParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmEmployeeDismissionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmEmployeeDismissionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UpdateOapiSmartworkHrmEmployeeDismissionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetconversationCorpConversationCorpconversionRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetconversationCorpConversationCorpconversionResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetconversationCorpConversationCorpconversionParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiImpaasGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiImpaasGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ModifyOapiImpaasGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCertRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCertResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiEduCertParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiPlanetomFeedsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiPlanetomFeedsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UploadOapiPlanetomFeedsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceOrderPushRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceOrderPushResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceOrderPushParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceCapacityGetRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceCapacityGetResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceCapacityGetParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowancePredeductRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowancePredeductResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowancePredeductParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TaskinfoOapiPlanetomFeedsRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TaskinfoOapiPlanetomFeedsResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\TaskinfoOapiPlanetomFeedsParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceUnfreezeRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceUnfreezeResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\BetaOapiCateringAllowanceUnfreezeParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripVehicleOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripVehicleOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SearchOapiAlitripBtripVehicleOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfreezeOapiCateringAllowanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfreezeOapiCateringAllowanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\UnfreezeOapiCateringAllowanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SuggestOapiAlitripBtripFlightCityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SuggestOapiAlitripBtripFlightCityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SuggestOapiAlitripBtripFlightCityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PredeductOapiCateringAllowanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PredeductOapiCateringAllowanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PredeductOapiCateringAllowanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringCooplistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringCooplistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringCooplistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringAllowanceCapacityRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringAllowanceCapacityResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringAllowanceCapacityParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringAllowanceOrderRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringAllowanceOrderResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\PushOapiCateringAllowanceOrderParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringApplylistCorpidlistRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringApplylistCorpidlistResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringApplylistCorpidlistParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DealOapiCateringCoopRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DealOapiCateringCoopResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DealOapiCateringCoopParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringCoopcontactRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringCoopcontactResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringCoopcontactParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringMealconfigRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringMealconfigResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiCateringMealconfigParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceShiftRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceShiftResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\DeleteOapiAttendanceShiftParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\AddOapiAttendanceGroupParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageOrggrouptaskRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageOrggrouptaskResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\QueryOapiRobotMessageOrggrouptaskParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavTelconfDetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavTelconfDetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavTelconfDetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendorggroupOapiRobotMessageRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendorggroupOapiRobotMessageResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\SendorggroupOapiRobotMessageParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptTelconfRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptTelconfResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptTelconfParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptVideoconfRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptVideoconfResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavDeptVideoconfParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoconfDetailRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoconfDetailResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListOapiKacDatavVideoconfDetailParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\IsopensmartreportOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\IsopensmartreportOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetattcolumnsOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetattcolumnsOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetfaceCorpSmartdeviceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetfaceCorpSmartdeviceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetfaceCorpSmartdeviceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetcolumnvalOapiAttendanceRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetcolumnvalOapiAttendanceResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetcolumnvalOapiAttendanceParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiProcessRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiProcessResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\ListbyuseridOapiProcessParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiImpaasRelationRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiImpaasRelationResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetOapiImpaasRelationParams;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetlogintokenOapiImpaasUserRequest;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetlogintokenOapiImpaasUserResponse;
use AlibabaCloud\SDK\SDK_DATA_1598238000612\Models\GetlogintokenOapiImpaasUserParams;

class {{upperFirstPureProductId}} {
    protected $_serverUrl;

    protected $_accessKeyId;

    protected $_accessKeySecret;

    protected $_session;

    protected $_suiteTicket;

    protected $_corpId;

    protected $_userAgent;

    protected $_readTimeout;

    protected $_connectTimeout;

    protected $_httpProxy;

    protected $_httpsProxy;

    protected $_noProxy;

    protected $_maxIdleConns;

    /**
     * Init client with Config
     * @param config config contains the necessary information to create a client
     */
    public function __construct($config){
        if (Utils::isUnset($config)) {
            throw new TeaError([
                "code" => "ParameterMissing",
                "message" => "'config' can not be unset"
            ]);
        }
        if (Utils::isUnset($config->serverUrl)) {
            throw new TeaError([
                "code" => "ParameterMissing",
                "message" => "'config.serverUrl' can not be unset"
            ]);
        }
        $this->_accessKeyId = $config->accessKeyId;
        $this->_accessKeySecret = $config->accessKeySecret;
        $this->_serverUrl = $config->serverUrl;
        $this->_session = $config->session;
        $this->_userAgent = $config->userAgent;
        $this->_readTimeout = $config->readTimeout;
        $this->_connectTimeout = $config->connectTimeout;
        $this->_httpProxy = $config->httpProxy;
        $this->_httpsProxy = $config->httpsProxy;
        $this->_noProxy = $config->noProxy;
        $this->_maxIdleConns = $config->maxIdleConns;
    }

    /**
     * Encapsulate the request and invoke the network
     * @param string $action api name
     * @param string $method e.g. GET
     * @param string $pathname the path of api
     * @param array $headers which contains request headers
     * @param array $appParams which contains request params
     * @param RuntimeOptions $runtime which controls some details of call api, such as retry times
     * @return array the response
     * @throws TeaError
     * @throws Exception
     * @throws TeaUnableRetryError
     */
    public function doRequest($action, $method, $pathname, $headers, $appParams, $runtime){
        $runtime->validate();
        $_runtime = [
            "timeouted" => "retry",
            "readTimeout" => Utils::defaultNumber($runtime->readTimeout, $this->_readTimeout),
            "connectTimeout" => Utils::defaultNumber($runtime->connectTimeout, $this->_connectTimeout),
            "httpProxy" => Utils::defaultString($runtime->httpProxy, $this->_httpProxy),
            "httpsProxy" => Utils::defaultString($runtime->httpsProxy, $this->_httpsProxy),
            "noProxy" => Utils::defaultString($runtime->noProxy, $this->_noProxy),
            "maxIdleConns" => Utils::defaultNumber($runtime->maxIdleConns, $this->_maxIdleConns),
            "retry" => [
                "retryable" => $runtime->autoretry,
                "maxAttempts" => Utils::defaultNumber($runtime->maxAttempts, 3)
            ],
            "backoff" => [
                "policy" => Utils::defaultString($runtime->backoffPolicy, "no"),
                "period" => Utils::defaultNumber($runtime->backoffPeriod, 1)
            ],
            "ignoreSSL" => $runtime->ignoreSSL
        ];
        $_lastRequest = null;
        $_lastException = null;
        $_now = time();
        $_retryTimes = 0;
        while (Tea::allowRetry($_runtime["retry"], $_retryTimes, $_now)) {
            if ($_retryTimes > 0) {
                $_backoffTime = Tea::getBackoffTime($_runtime["backoff"], $_retryTimes);
                if ($_backoffTime > 0) {
                    Tea::sleep($_backoffTime);
                }
            }
            $_retryTimes = $_retryTimes + 1;
            try {
                $_request = new Request();
                $u = Client::parseUrl($this->_serverUrl);
                $_request->protocol = $u->scheme;
                $_request->method = $method;
                $_request->pathname = $pathname;
                $_request->query = [
                    "method" => $action,
                    "v" => "2.0",
                    "timestamp" => \AlibabaCloud\Ding\Util\Url::getTimestamp(),
                    "format" => "json",
                    "sign_method" => "hmac-sha256",
                    "session" => $this->_session,
                    "partner_id" => "top-sdk-java-dynamicVersionNo",
                    "simplify" => "true"
                ];
                $endpoint = $u->host->hostname;
                if (!Utils::isUnset($u->host->port)) {
                    $endpoint = "" . $u->host->hostname . ":" . $u->host->port . "";
                }
                $_request->headers = Tea::merge([
                    "host" => $endpoint,
                    "user-agent" => $this->getUserAgent()
                ], $headers);
                if (!Utils::isUnset($appParams)) {
                    $_request->body = Utils::toFormString(Utils::anyifyMapValue($appParams));
                    $_request->headers["content-type"] = "application/x-www-form-urlencoded";
                }
                $_lastRequest = $_request;
                $_response= Tea::send($_request, $_runtime);
                $obj = Utils::readAsJSON($_response->body);
                $res = Utils::assertAsMap($obj);
                if (\AlibabaCloud\Ding\Util\Url::hasError($res)) {
                    $tmp = $res["error_response"];
                    $e = Utils::assertAsMap($tmp);
                    throw new TeaError([
                        "code" => $e["sub_code"],
                        "message" => $e["sub_msg"],
                        "data" => $res
                    ]);
                }
                return [
                    "body" => $res,
                    "headers" => $_response->headers
                ];
            }
            catch (Exception $e) {
                if (!($e instanceof TeaError)) {
                    $e = new TeaError([], $e->getMessage(), $e->getCode(), $e);
                }
                if (Tea::isRetryable($e)) {
                    $_lastException = $e;
                    continue;
                }
                throw $e;
            }
        }
        throw new TeaUnableRetryError($_lastRequest, $_lastException);
    }

    /**
     * Encapsulate the request and invoke the network
     * @param string $method e.g. GET
     * @param string $pathname the path of api
     * @param array $headers which contains headers params
     * @param array $appParams which contains request params
     * @param RuntimeOptions $runtime which controls some details of call api, such as retry times
     * @return array the response
     * @throws TeaError
     * @throws Exception
     * @throws TeaUnableRetryError
     */
    public function doRequestOApi($method, $pathname, $headers, $appParams, $runtime){
        $runtime->validate();
        $_runtime = [
            "timeouted" => "retry",
            "readTimeout" => Utils::defaultNumber($runtime->readTimeout, $this->_readTimeout),
            "connectTimeout" => Utils::defaultNumber($runtime->connectTimeout, $this->_connectTimeout),
            "httpProxy" => Utils::defaultString($runtime->httpProxy, $this->_httpProxy),
            "httpsProxy" => Utils::defaultString($runtime->httpsProxy, $this->_httpsProxy),
            "noProxy" => Utils::defaultString($runtime->noProxy, $this->_noProxy),
            "maxIdleConns" => Utils::defaultNumber($runtime->maxIdleConns, $this->_maxIdleConns),
            "retry" => [
                "retryable" => $runtime->autoretry,
                "maxAttempts" => Utils::defaultNumber($runtime->maxAttempts, 3)
            ],
            "backoff" => [
                "policy" => Utils::defaultString($runtime->backoffPolicy, "no"),
                "period" => Utils::defaultNumber($runtime->backoffPeriod, 1)
            ],
            "ignoreSSL" => $runtime->ignoreSSL
        ];
        $_lastRequest = null;
        $_lastException = null;
        $_now = time();
        $_retryTimes = 0;
        while (Tea::allowRetry($_runtime["retry"], $_retryTimes, $_now)) {
            if ($_retryTimes > 0) {
                $_backoffTime = Tea::getBackoffTime($_runtime["backoff"], $_retryTimes);
                if ($_backoffTime > 0) {
                    Tea::sleep($_backoffTime);
                }
            }
            $_retryTimes = $_retryTimes + 1;
            try {
                $_request = new Request();
                $u = Client::parseUrl($this->_serverUrl);
                $_request->protocol = $u->scheme;
                $_request->method = $method;
                $_request->pathname = $pathname;
                $endpoint = $u->host->hostname;
                if (!Utils::isUnset($u->host->port)) {
                    $endpoint = "" . $u->host->hostname . ":" . $u->host->port . "";
                }
                $_request->headers = Tea::merge([
                    "host" => $endpoint,
                    "user-agent" => $this->getUserAgent()
                ], $headers);
                if (!Utils::isUnset($this->_accessKeyId)) {
                    $timestamp = \AlibabaCloud\Ding\Util\Url::getTimestamp();
                    $canonicalString = \AlibabaCloud\Ding\Util\Url::getCanonicalStringForIsv($timestamp, $this->_suiteTicket);
                    $_request->query["accessKey"] = $this->_accessKeyId;
                    $_request->query["timestamp"] = $timestamp;
                    $_request->query["signature"] = \AlibabaCloud\Ding\Util\Url::computeSignature($this->_accessKeySecret, $canonicalString);
                    if (!Utils::isUnset($this->_suiteTicket)) {
                        $_request->query["suiteTicket"] = $this->_suiteTicket;
                    }
                    if (!Utils::isUnset($this->_corpId)) {
                        $_request->query["corpId"] = $this->_corpId;
                    }
                }
                else {
                    $_request->query["access_token"] = $this->_session;
                }
                if (!Utils::isUnset($appParams)) {
                    if (Utils::equalString($method, "GET")) {
                        $_request->query = Tea::merge($_request->query, $appParams);
                        $_request->headers["content-type"] = "application/x-www-form-urlencoded;charset=uft-8";
                    }
                    else {
                        $_request->body = Utils::toJSONString($appParams);
                        $_request->headers["content-type"] = "application/json;charset=utf-8";
                    }
                }
                $_lastRequest = $_request;
                $_response= Tea::send($_request, $_runtime);
                $obj = Utils::readAsJSON($_response->body);
                $res = Utils::assertAsMap($obj);
                if (\AlibabaCloud\Ding\Util\Url::hasError($res)) {
                    throw new TeaError([
                        "code" => $res["errcode"],
                        "message" => $res["errmsg"],
                        "data" => $res
                    ]);
                }
                return [
                    "body" => $res,
                    "headers" => $_response->headers
                ];
            }
            catch (Exception $e) {
                if (!($e instanceof TeaError)) {
                    $e = new TeaError([], $e->getMessage(), $e->getCode(), $e);
                }
                if (Tea::isRetryable($e)) {
                    $_lastException = $e;
                    continue;
                }
                throw $e;
            }
        }
        throw new TeaUnableRetryError($_lastRequest, $_lastException);
    }

    /**
     * Get user agent
     * @return string user agent
     */
    public function getUserAgent(){
        $userAgent = "TeaClient/1.0.0";
        return Utils::getUserAgent($userAgent);
    }

    /**
     * Description: 确认离职并指定交接人，会从通讯录删除
     * @param DelemployeedismissionandhandoverCorpHrmEmployeeRequest $request
     * @return DelemployeedismissionandhandoverCorpHrmEmployeeResponse
     */
    public function delemployeedismissionandhandoverCorpHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->delemployeedismissionandhandoverCorpHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 确认离职并指定交接人，会从通讯录删除
     * @param DelemployeedismissionandhandoverCorpHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return DelemployeedismissionandhandoverCorpHrmEmployeeResponse
     */
    public function delemployeedismissionandhandoverCorpHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DelemployeedismissionandhandoverCorpHrmEmployeeResponse::fromMap($this->doRequest("dingtalk.corp.hrm.employee.delemployeedismissionandhandover", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事开放接口-查询离职人员列表
     * @param GetdismissionlistCorpHrmEmployeeRequest $request
     * @return GetdismissionlistCorpHrmEmployeeResponse
     */
    public function getdismissionlistCorpHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->getdismissionlistCorpHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事开放接口-查询离职人员列表
     * @param GetdismissionlistCorpHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetdismissionlistCorpHrmEmployeeResponse
     */
    public function getdismissionlistCorpHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetdismissionlistCorpHrmEmployeeResponse::fromMap($this->doRequest("dingtalk.corp.hrm.employee.getdismissionlist", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业的日钉钉指数和月平均钉钉指数
     * @param GetCorpDingindexRequest $request
     * @return GetCorpDingindexResponse
     */
    public function getCorpDingindex($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCorpDingindexEx($request, $runtime);
    }

    /**
     * Description: 查询企业的日钉钉指数和月平均钉钉指数
     * @param GetCorpDingindexRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCorpDingindexResponse
     */
    public function getCorpDingindexEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetCorpDingindexResponse::fromMap($this->doRequest("dingtalk.corp.dingindex.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取日志统计数据
     * @param StatisticsOapiReportRequest $request
     * @return StatisticsOapiReportResponse
     */
    public function statisticsOapiReport($request){
        $runtime = new RuntimeOptions([]);
        return $this->statisticsOapiReportEx($request, $runtime);
    }

    /**
     * Description: 获取日志统计数据
     * @param StatisticsOapiReportRequest $request
     * @param RuntimeOptions $runtime
     * @return StatisticsOapiReportResponse
     */
    public function statisticsOapiReportEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StatisticsOapiReportResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/statistics", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能人事开放接口-更新员工工作信息
     * @param ModjobinfoCorpHrmEmployeeRequest $request
     * @return ModjobinfoCorpHrmEmployeeResponse
     */
    public function modjobinfoCorpHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->modjobinfoCorpHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能人事开放接口-更新员工工作信息
     * @param ModjobinfoCorpHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return ModjobinfoCorpHrmEmployeeResponse
     */
    public function modjobinfoCorpHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModjobinfoCorpHrmEmployeeResponse::fromMap($this->doRequest("dingtalk.corp.hrm.employee.modjobinfo", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 由于勋章到期、员工离职、员工违规等原因，企业收回已授予员工的勋章
     * @param RemoveOapiMedalCorpmedalRequest $request
     * @return RemoveOapiMedalCorpmedalResponse
     */
    public function removeOapiMedalCorpmedal($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiMedalCorpmedalEx($request, $runtime);
    }

    /**
     * Description: 由于勋章到期、员工离职、员工违规等原因，企业收回已授予员工的勋章
     * @param RemoveOapiMedalCorpmedalRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiMedalCorpmedalResponse
     */
    public function removeOapiMedalCorpmedalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiMedalCorpmedalResponse::fromMap($this->doRequestOApi("POST", "/topapi/medal/corpmedal/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建圈子群
     * @param CreateOapiWorkspaceCircleGroupRequest $request
     * @return CreateOapiWorkspaceCircleGroupResponse
     */
    public function createOapiWorkspaceCircleGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiWorkspaceCircleGroupEx($request, $runtime);
    }

    /**
     * Description: 创建圈子群
     * @param CreateOapiWorkspaceCircleGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiWorkspaceCircleGroupResponse
     */
    public function createOapiWorkspaceCircleGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiWorkspaceCircleGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/circle/group/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询圈子群列表
     * @param ListOapiWorkspaceCircleGroupRequest $request
     * @return ListOapiWorkspaceCircleGroupResponse
     */
    public function listOapiWorkspaceCircleGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiWorkspaceCircleGroupEx($request, $runtime);
    }

    /**
     * Description: 查询圈子群列表
     * @param ListOapiWorkspaceCircleGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiWorkspaceCircleGroupResponse
     */
    public function listOapiWorkspaceCircleGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiWorkspaceCircleGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/circle/group/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取会议室预订相关参会人(当前组织内)列表
     * @param ListOapiSmartdeviceMeetingroomParticipantRequest $request
     * @return ListOapiSmartdeviceMeetingroomParticipantResponse
     */
    public function listOapiSmartdeviceMeetingroomParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiSmartdeviceMeetingroomParticipantEx($request, $runtime);
    }

    /**
     * Description: 获取会议室预订相关参会人(当前组织内)列表
     * @param ListOapiSmartdeviceMeetingroomParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiSmartdeviceMeetingroomParticipantResponse
     */
    public function listOapiSmartdeviceMeetingroomParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiSmartdeviceMeetingroomParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/meetingroom/participant/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: API实现群主对成员单个人的禁言
     * @param UpdatebanwordsOapiChatRequest $request
     * @return UpdatebanwordsOapiChatResponse
     */
    public function updatebanwordsOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->updatebanwordsOapiChatEx($request, $runtime);
    }

    /**
     * Description: API实现群主对成员单个人的禁言
     * @param UpdatebanwordsOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdatebanwordsOapiChatResponse
     */
    public function updatebanwordsOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdatebanwordsOapiChatResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/updatebanwords", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取企业下所有的流程模板
     * @param ListOapiProcessTemplateRequest $request
     * @return ListOapiProcessTemplateResponse
     */
    public function listOapiProcessTemplate($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiProcessTemplateEx($request, $runtime);
    }

    /**
     * Description: 分页获取企业下所有的流程模板
     * @param ListOapiProcessTemplateRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiProcessTemplateResponse
     */
    public function listOapiProcessTemplateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiProcessTemplateResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/template/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据企业或员工分页获取假期消费记录信息 每次返回50条数据
     * @param ListOapiAttendanceVacationRecordRequest $request
     * @return ListOapiAttendanceVacationRecordResponse
     */
    public function listOapiAttendanceVacationRecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceVacationRecordEx($request, $runtime);
    }

    /**
     * Description: 根据企业或员工分页获取假期消费记录信息 每次返回50条数据
     * @param ListOapiAttendanceVacationRecordRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceVacationRecordResponse
     */
    public function listOapiAttendanceVacationRecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceVacationRecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/record/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改用户指定审批流程模板的支付属性
     * @param UpdateOapiProcessPropertyRequest $request
     * @return UpdateOapiProcessPropertyResponse
     */
    public function updateOapiProcessProperty($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiProcessPropertyEx($request, $runtime);
    }

    /**
     * Description: 修改用户指定审批流程模板的支付属性
     * @param UpdateOapiProcessPropertyRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiProcessPropertyResponse
     */
    public function updateOapiProcessPropertyEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiProcessPropertyResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/property/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据企业或员工分页获取假期余额信息 每次返回50条数据
     * @param ListOapiAttendanceVacationQuotaRequest $request
     * @return ListOapiAttendanceVacationQuotaResponse
     */
    public function listOapiAttendanceVacationQuota($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceVacationQuotaEx($request, $runtime);
    }

    /**
     * Description: 根据企业或员工分页获取假期余额信息 每次返回50条数据
     * @param ListOapiAttendanceVacationQuotaRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceVacationQuotaResponse
     */
    public function listOapiAttendanceVacationQuotaEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceVacationQuotaResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/quota/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过downloadCode获取下载url
     * @param GetOapiChatbotPictureurlRequest $request
     * @return GetOapiChatbotPictureurlResponse
     */
    public function getOapiChatbotPictureurl($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiChatbotPictureurlEx($request, $runtime);
    }

    /**
     * Description: 通过downloadCode获取下载url
     * @param GetOapiChatbotPictureurlRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiChatbotPictureurlResponse
     */
    public function getOapiChatbotPictureurlEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiChatbotPictureurlResponse::fromMap($this->doRequestOApi("POST", "/topapi/chatbot/pictureurl/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据用户userId获取当前企业下可见的日志模板列表
     * @param ListbyuseridOapiReportTemplateRequest $request
     * @return ListbyuseridOapiReportTemplateResponse
     */
    public function listbyuseridOapiReportTemplate($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyuseridOapiReportTemplateEx($request, $runtime);
    }

    /**
     * Description: 根据用户userId获取当前企业下可见的日志模板列表
     * @param ListbyuseridOapiReportTemplateRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyuseridOapiReportTemplateResponse
     */
    public function listbyuseridOapiReportTemplateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyuseridOapiReportTemplateResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/template/listbyuserid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: test
     * @param TestOapiTestRequest $request
     * @return TestOapiTestResponse
     */
    public function testOapiTest($request){
        $runtime = new RuntimeOptions([]);
        return $this->testOapiTestEx($request, $runtime);
    }

    /**
     * Description: test
     * @param TestOapiTestRequest $request
     * @param RuntimeOptions $runtime
     * @return TestOapiTestResponse
     */
    public function testOapiTestEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TestOapiTestResponse::fromMap($this->doRequestOApi("GET,POST", "/test/test", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 应用内购流程中，通过该接口查询内购订单信息
     * @param GetOapiAppstoreInternalOrderRequest $request
     * @return GetOapiAppstoreInternalOrderResponse
     */
    public function getOapiAppstoreInternalOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAppstoreInternalOrderEx($request, $runtime);
    }

    /**
     * Description: 应用内购流程中，通过该接口查询内购订单信息
     * @param GetOapiAppstoreInternalOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAppstoreInternalOrderResponse
     */
    public function getOapiAppstoreInternalOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAppstoreInternalOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/internal/order/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 应用内购流程中，通过该接口获取内购商品SKU页面地址
     * @param GetOapiAppstoreInternalSkupageRequest $request
     * @return GetOapiAppstoreInternalSkupageResponse
     */
    public function getOapiAppstoreInternalSkupage($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAppstoreInternalSkupageEx($request, $runtime);
    }

    /**
     * Description: 应用内购流程中，通过该接口获取内购商品SKU页面地址
     * @param GetOapiAppstoreInternalSkupageRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAppstoreInternalSkupageResponse
     */
    public function getOapiAppstoreInternalSkupageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAppstoreInternalSkupageResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/internal/skupage/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 应用内购流程中，通过该接口获取ISV未处理完成的内购订单列表。
     * @param ListOapiAppstoreInternalUnfinishedorderRequest $request
     * @return ListOapiAppstoreInternalUnfinishedorderResponse
     */
    public function listOapiAppstoreInternalUnfinishedorder($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAppstoreInternalUnfinishedorderEx($request, $runtime);
    }

    /**
     * Description: 应用内购流程中，通过该接口获取ISV未处理完成的内购订单列表。
     * @param ListOapiAppstoreInternalUnfinishedorderRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAppstoreInternalUnfinishedorderResponse
     */
    public function listOapiAppstoreInternalUnfinishedorderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAppstoreInternalUnfinishedorderResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/internal/unfinishedorder/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 场景化消息通道
     * @param SendOapiEduGroupMsgRequest $request
     * @return SendOapiEduGroupMsgResponse
     */
    public function sendOapiEduGroupMsg($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiEduGroupMsgEx($request, $runtime);
    }

    /**
     * Description: 场景化消息通道
     * @param SendOapiEduGroupMsgRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiEduGroupMsgResponse
     */
    public function sendOapiEduGroupMsgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiEduGroupMsgResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/group/msg/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 应用内购流程中，通过该接口回传ISV完成订单处理的状态
     * @param FinishOapiAppstoreInternalOrderRequest $request
     * @return FinishOapiAppstoreInternalOrderResponse
     */
    public function finishOapiAppstoreInternalOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->finishOapiAppstoreInternalOrderEx($request, $runtime);
    }

    /**
     * Description: 应用内购流程中，通过该接口回传ISV完成订单处理的状态
     * @param FinishOapiAppstoreInternalOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return FinishOapiAppstoreInternalOrderResponse
     */
    public function finishOapiAppstoreInternalOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FinishOapiAppstoreInternalOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/internal/order/finish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 应用内购流程中，通过该接口对内购订单进行核销
     * @param ConsumeOapiAppstoreInternalOrderRequest $request
     * @return ConsumeOapiAppstoreInternalOrderResponse
     */
    public function consumeOapiAppstoreInternalOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->consumeOapiAppstoreInternalOrderEx($request, $runtime);
    }

    /**
     * Description: 应用内购流程中，通过该接口对内购订单进行核销
     * @param ConsumeOapiAppstoreInternalOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return ConsumeOapiAppstoreInternalOrderResponse
     */
    public function consumeOapiAppstoreInternalOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ConsumeOapiAppstoreInternalOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/internal/order/consume", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除用户可见范围
     * @param DeleteOapiMicroappScopeRequest $request
     * @return DeleteOapiMicroappScopeResponse
     */
    public function deleteOapiMicroappScope($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiMicroappScopeEx($request, $runtime);
    }

    /**
     * Description: 删除用户可见范围
     * @param DeleteOapiMicroappScopeRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiMicroappScopeResponse
     */
    public function deleteOapiMicroappScopeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiMicroappScopeResponse::fromMap($this->doRequestOApi("POST", "/topapi/microapp/scope/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增用户到可见范围
     * @param AddOapiMicroappScopeRequest $request
     * @return AddOapiMicroappScopeResponse
     */
    public function addOapiMicroappScope($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiMicroappScopeEx($request, $runtime);
    }

    /**
     * Description: 新增用户到可见范围
     * @param AddOapiMicroappScopeRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiMicroappScopeResponse
     */
    public function addOapiMicroappScopeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiMicroappScopeResponse::fromMap($this->doRequestOApi("POST", "/topapi/microapp/scope/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能会务项目-添加参会人
     * @param AddOapiConferenceParticipantRequest $request
     * @return AddOapiConferenceParticipantResponse
     */
    public function addOapiConferenceParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiConferenceParticipantEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能会务项目-添加参会人
     * @param AddOapiConferenceParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiConferenceParticipantResponse
     */
    public function addOapiConferenceParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiConferenceParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/conference/participant/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能会务，删除会务参会人
     * @param DeleteOapiConferenceParticipantRequest $request
     * @return DeleteOapiConferenceParticipantResponse
     */
    public function deleteOapiConferenceParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiConferenceParticipantEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能会务，删除会务参会人
     * @param DeleteOapiConferenceParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiConferenceParticipantResponse
     */
    public function deleteOapiConferenceParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiConferenceParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/conference/participant/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能会务全量同步参会人
     * @param SyncOapiConferenceParticipantRequest $request
     * @return SyncOapiConferenceParticipantResponse
     */
    public function syncOapiConferenceParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiConferenceParticipantEx($request, $runtime);
    }

    /**
     * Description: 智能会务全量同步参会人
     * @param SyncOapiConferenceParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiConferenceParticipantResponse
     */
    public function syncOapiConferenceParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiConferenceParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/conference/participant/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能会务，将会务信息发布到工作台，参会者可见
     * @param PublishOapiConferenceRequest $request
     * @return PublishOapiConferenceResponse
     */
    public function publishOapiConference($request){
        $runtime = new RuntimeOptions([]);
        return $this->publishOapiConferenceEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能会务，将会务信息发布到工作台，参会者可见
     * @param PublishOapiConferenceRequest $request
     * @param RuntimeOptions $runtime
     * @return PublishOapiConferenceResponse
     */
    public function publishOapiConferenceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PublishOapiConferenceResponse::fromMap($this->doRequestOApi("POST", "/topapi/conference/publish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能会务，提供给ISV获取会务基础信息
     * @param GetOapiConferenceRequest $request
     * @return GetOapiConferenceResponse
     */
    public function getOapiConference($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiConferenceEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能会务，提供给ISV获取会务基础信息
     * @param GetOapiConferenceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiConferenceResponse
     */
    public function getOapiConferenceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiConferenceResponse::fromMap($this->doRequestOApi("POST", "/topapi/conference/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能会务，将会务信息从工作台tag中撤销，参会者不可见
     * @param UnpublishOapiConferenceRequest $request
     * @return UnpublishOapiConferenceResponse
     */
    public function unpublishOapiConference($request){
        $runtime = new RuntimeOptions([]);
        return $this->unpublishOapiConferenceEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能会务，将会务信息从工作台tag中撤销，参会者不可见
     * @param UnpublishOapiConferenceRequest $request
     * @param RuntimeOptions $runtime
     * @return UnpublishOapiConferenceResponse
     */
    public function unpublishOapiConferenceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnpublishOapiConferenceResponse::fromMap($this->doRequestOApi("POST", "/topapi/conference/unpublish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口可以把企业员工的待办事项导入到钉钉日历并在钉钉日历中展示, 支持任务, 会议,审批,普通日程等.
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param CreateCorpCalendarRequest $request
     * @return CreateCorpCalendarResponse
     */
    public function createCorpCalendar($request){
        $runtime = new RuntimeOptions([]);
        return $this->createCorpCalendarEx($request, $runtime);
    }

    /**
     * Description: 通过此接口可以把企业员工的待办事项导入到钉钉日历并在钉钉日历中展示, 支持任务, 会议,审批,普通日程等.
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param CreateCorpCalendarRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateCorpCalendarResponse
     */
    public function createCorpCalendarEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateCorpCalendarResponse::fromMap($this->doRequest("dingtalk.corp.calendar.create", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量获取最后版本工序精简信息
     * @param ListsimpleOapiRhinoMosLayoutOperationdefsRequest $request
     * @return ListsimpleOapiRhinoMosLayoutOperationdefsResponse
     */
    public function listsimpleOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->listsimpleOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 批量获取最后版本工序精简信息
     * @param ListsimpleOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListsimpleOapiRhinoMosLayoutOperationdefsResponse
     */
    public function listsimpleOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListsimpleOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/listsimple", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口发DING通知给企业内部员工, 支持短信DING和应用内DING. 
     * 该接口正在灰度内测中, 需要申请使用权限请联系: wusuan.yby@alibaba-inc.com
     * @param CreateCorpDingRequest $request
     * @return CreateCorpDingResponse
     */
    public function createCorpDing($request){
        $runtime = new RuntimeOptions([]);
        return $this->createCorpDingEx($request, $runtime);
    }

    /**
     * Description: 通过此接口发DING通知给企业内部员工, 支持短信DING和应用内DING. 
     * 该接口正在灰度内测中, 需要申请使用权限请联系: wusuan.yby@alibaba-inc.com
     * @param CreateCorpDingRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateCorpDingResponse
     */
    public function createCorpDingEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateCorpDingResponse::fromMap($this->doRequest("dingtalk.corp.ding.create", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询工段最前工序定义列表
     * @param SectionfirstOapiRhinoMosLayoutOperationdefsRequest $request
     * @return SectionfirstOapiRhinoMosLayoutOperationdefsResponse
     */
    public function sectionfirstOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->sectionfirstOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 查询工段最前工序定义列表
     * @param SectionfirstOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return SectionfirstOapiRhinoMosLayoutOperationdefsResponse
     */
    public function sectionfirstOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SectionfirstOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/sectionfirst", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 完成工序执行
     * @param FinishOapiRhinoMosExecPerformRequest $request
     * @return FinishOapiRhinoMosExecPerformResponse
     */
    public function finishOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->finishOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 完成工序执行
     * @param FinishOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return FinishOapiRhinoMosExecPerformResponse
     */
    public function finishOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FinishOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/finish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 失效工序执行
     * @param InactiveOapiRhinoMosExecPerformRequest $request
     * @return InactiveOapiRhinoMosExecPerformResponse
     */
    public function inactiveOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->inactiveOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 失效工序执行
     * @param InactiveOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return InactiveOapiRhinoMosExecPerformResponse
     */
    public function inactiveOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InactiveOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/inactive", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过衣服详情，同步批量创建衣服实体
     * @param SynccreateOapiRhinoMosExecClothesRequest $request
     * @return SynccreateOapiRhinoMosExecClothesResponse
     */
    public function synccreateOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->synccreateOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 通过衣服详情，同步批量创建衣服实体
     * @param SynccreateOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return SynccreateOapiRhinoMosExecClothesResponse
     */
    public function synccreateOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SynccreateOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/synccreate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ding接收者状态列表
     * @param ListCorpDingReceiverstatusRequest $request
     * @return ListCorpDingReceiverstatusResponse
     */
    public function listCorpDingReceiverstatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpDingReceiverstatusEx($request, $runtime);
    }

    /**
     * Description: ding接收者状态列表
     * @param ListCorpDingReceiverstatusRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpDingReceiverstatusResponse
     */
    public function listCorpDingReceiverstatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListCorpDingReceiverstatusResponse::fromMap($this->doRequest("dingtalk.corp.ding.receiverstatus.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业批量更新假期余额信息
     * @param UpdateOapiAttendanceVacationQuotaRequest $request
     * @return UpdateOapiAttendanceVacationQuotaResponse
     */
    public function updateOapiAttendanceVacationQuota($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiAttendanceVacationQuotaEx($request, $runtime);
    }

    /**
     * Description: 企业批量更新假期余额信息
     * @param UpdateOapiAttendanceVacationQuotaRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiAttendanceVacationQuotaResponse
     */
    public function updateOapiAttendanceVacationQuotaEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiAttendanceVacationQuotaResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/quota/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建工序执行记录，无行为含义的插入，使用entity_id, entity_type, operation_uid来做幂等控制，CANCEL&EXCEP状态的已有记录不包含在幂等控制判断在内
     * @param CreateOapiRhinoMosExecPerformRequest $request
     * @return CreateOapiRhinoMosExecPerformResponse
     */
    public function createOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 创建工序执行记录，无行为含义的插入，使用entity_id, entity_type, operation_uid来做幂等控制，CANCEL&EXCEP状态的已有记录不包含在幂等控制判断在内
     * @param CreateOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiRhinoMosExecPerformResponse
     */
    public function createOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量初始化假期余额 清空指定假期类型 指定员工所有假期余额 消费记录
     * @param InitOapiAttendanceVacationQuotaRequest $request
     * @return InitOapiAttendanceVacationQuotaResponse
     */
    public function initOapiAttendanceVacationQuota($request){
        $runtime = new RuntimeOptions([]);
        return $this->initOapiAttendanceVacationQuotaEx($request, $runtime);
    }

    /**
     * Description: 批量初始化假期余额 清空指定假期类型 指定员工所有假期余额 消费记录
     * @param InitOapiAttendanceVacationQuotaRequest $request
     * @param RuntimeOptions $runtime
     * @return InitOapiAttendanceVacationQuotaResponse
     */
    public function initOapiAttendanceVacationQuotaEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InitOapiAttendanceVacationQuotaResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/quota/init", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口用于更新指定企业下的指定假期类型的相关规则
     * @param UpdateOapiAttendanceVacationTypeRequest $request
     * @return UpdateOapiAttendanceVacationTypeResponse
     */
    public function updateOapiAttendanceVacationType($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiAttendanceVacationTypeEx($request, $runtime);
    }

    /**
     * Description: 该接口用于更新指定企业下的指定假期类型的相关规则
     * @param UpdateOapiAttendanceVacationTypeRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiAttendanceVacationTypeResponse
     */
    public function updateOapiAttendanceVacationTypeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiAttendanceVacationTypeResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/type/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询假期类型
     * @param ListOapiAttendanceVacationTypeRequest $request
     * @return ListOapiAttendanceVacationTypeResponse
     */
    public function listOapiAttendanceVacationType($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceVacationTypeEx($request, $runtime);
    }

    /**
     * Description: 查询假期类型
     * @param ListOapiAttendanceVacationTypeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceVacationTypeResponse
     */
    public function listOapiAttendanceVacationTypeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceVacationTypeResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/type/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除指定的假期类型
     * @param DeleteOapiAttendanceVacationTypeRequest $request
     * @return DeleteOapiAttendanceVacationTypeResponse
     */
    public function deleteOapiAttendanceVacationType($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiAttendanceVacationTypeEx($request, $runtime);
    }

    /**
     * Description: 删除指定的假期类型
     * @param DeleteOapiAttendanceVacationTypeRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiAttendanceVacationTypeResponse
     */
    public function deleteOapiAttendanceVacationTypeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiAttendanceVacationTypeResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/type/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加假期类型
     * @param CreateOapiAttendanceVacationTypeRequest $request
     * @return CreateOapiAttendanceVacationTypeResponse
     */
    public function createOapiAttendanceVacationType($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiAttendanceVacationTypeEx($request, $runtime);
    }

    /**
     * Description: 添加假期类型
     * @param CreateOapiAttendanceVacationTypeRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiAttendanceVacationTypeResponse
     */
    public function createOapiAttendanceVacationTypeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiAttendanceVacationTypeResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/vacation/type/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询班级下家长列表信息，通过orgid，班级id查询家长的nick（如：小A的爸爸），非真实姓名，关系类别（妈妈、爸爸、其他亲属），学生staffid
     * @param ListOapiEduGuardianRequest $request
     * @return ListOapiEduGuardianResponse
     */
    public function listOapiEduGuardian($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduGuardianEx($request, $runtime);
    }

    /**
     * Description: 查询班级下家长列表信息，通过orgid，班级id查询家长的nick（如：小A的爸爸），非真实姓名，关系类别（妈妈、爸爸、其他亲属），学生staffid
     * @param ListOapiEduGuardianRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduGuardianResponse
     */
    public function listOapiEduGuardianEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduGuardianResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/guardian/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家长信息查询，查询家长信息，通过orgid，班级id查询家长的nick（如：小A的爸爸），非真实姓名，关系类别（妈妈、爸爸、其他亲属），学生staffid
     * @param GetOapiEduGuardianRequest $request
     * @return GetOapiEduGuardianResponse
     */
    public function getOapiEduGuardian($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduGuardianEx($request, $runtime);
    }

    /**
     * Description: 家长信息查询，查询家长信息，通过orgid，班级id查询家长的nick（如：小A的爸爸），非真实姓名，关系类别（妈妈、爸爸、其他亲属），学生staffid
     * @param GetOapiEduGuardianRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduGuardianResponse
     */
    public function getOapiEduGuardianEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduGuardianResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/guardian/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 学生信息查询，通过orgid，学生id，班级id,查询学生的名称、所在校区id、年级id、学段id、学生的staffid
     * @param GetOapiEduStudentRequest $request
     * @return GetOapiEduStudentResponse
     */
    public function getOapiEduStudent($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduStudentEx($request, $runtime);
    }

    /**
     * Description: 学生信息查询，通过orgid，学生id，班级id,查询学生的名称、所在校区id、年级id、学段id、学生的staffid
     * @param GetOapiEduStudentRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduStudentResponse
     */
    public function getOapiEduStudentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduStudentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/student/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 学生列表信息查询,查询学生的名称、所在的班级id、校区id、年级id、学段id、学生的staffid
     * @param ListOapiEduStudentRequest $request
     * @return ListOapiEduStudentResponse
     */
    public function listOapiEduStudent($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduStudentEx($request, $runtime);
    }

    /**
     * Description: 学生列表信息查询,查询学生的名称、所在的班级id、校区id、年级id、学段id、学生的staffid
     * @param ListOapiEduStudentRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduStudentResponse
     */
    public function listOapiEduStudentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduStudentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/student/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 班级信息查询，通过orgid、班级id查询班级名称、所在学段id、校区id
     * @param GetOapiEduClassRequest $request
     * @return GetOapiEduClassResponse
     */
    public function getOapiEduClass($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduClassEx($request, $runtime);
    }

    /**
     * Description: 班级信息查询，通过orgid、班级id查询班级名称、所在学段id、校区id
     * @param GetOapiEduClassRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduClassResponse
     */
    public function getOapiEduClassEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduClassResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/class/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 班级列表信息，通过orgid、班级id查询班级名称、所在学段id、校区id
     * @param ListOapiEduClassRequest $request
     * @return ListOapiEduClassResponse
     */
    public function listOapiEduClass($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduClassEx($request, $runtime);
    }

    /**
     * Description: 班级列表信息，通过orgid、班级id查询班级名称、所在学段id、校区id
     * @param ListOapiEduClassRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduClassResponse
     */
    public function listOapiEduClassEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduClassResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/class/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 年级信息查询接口，通过组织id和年级id查询年级名称、年级的级别、学段id、校区id
     * @param GetOapiEduGradeRequest $request
     * @return GetOapiEduGradeResponse
     */
    public function getOapiEduGrade($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduGradeEx($request, $runtime);
    }

    /**
     * Description: 年级信息查询接口，通过组织id和年级id查询年级名称、年级的级别、学段id、校区id
     * @param GetOapiEduGradeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduGradeResponse
     */
    public function getOapiEduGradeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduGradeResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/grade/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 年级列表查询，通过学段id查询其下面的年级信息列表，最多返回10条数据
     * @param ListOapiEduGradeRequest $request
     * @return ListOapiEduGradeResponse
     */
    public function listOapiEduGrade($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduGradeEx($request, $runtime);
    }

    /**
     * Description: 年级列表查询，通过学段id查询其下面的年级信息列表，最多返回10条数据
     * @param ListOapiEduGradeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduGradeResponse
     */
    public function listOapiEduGradeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduGradeResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/grade/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询老师信息，查询班级下老师列表，通过组织id和班级id查询老师的名称、班级id、staffid、是否为班主任、校区id信息
     * @param GetOapiEduTeacherRequest $request
     * @return GetOapiEduTeacherResponse
     */
    public function getOapiEduTeacher($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduTeacherEx($request, $runtime);
    }

    /**
     * Description: 查询老师信息，查询班级下老师列表，通过组织id和班级id查询老师的名称、班级id、staffid、是否为班主任、校区id信息
     * @param GetOapiEduTeacherRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduTeacherResponse
     */
    public function getOapiEduTeacherEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduTeacherResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/teacher/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询某个组织下面的学校信息
     * @param ListOapiEduCampusRequest $request
     * @return ListOapiEduCampusResponse
     */
    public function listOapiEduCampus($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduCampusEx($request, $runtime);
    }

    /**
     * Description: 查询某个组织下面的学校信息
     * @param ListOapiEduCampusRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduCampusResponse
     */
    public function listOapiEduCampusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ListOapiEduCampusResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/campus/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询校区基本信息接口，返回校区的名称和校区id
     * @param GetOapiEduCampusRequest $request
     * @return GetOapiEduCampusResponse
     */
    public function getOapiEduCampus($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduCampusEx($request, $runtime);
    }

    /**
     * Description: 查询校区基本信息接口，返回校区的名称和校区id
     * @param GetOapiEduCampusRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduCampusResponse
     */
    public function getOapiEduCampusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduCampusResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/campus/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过mediaId识别人员信息
     * @param RecognitionOapiAttendanceFaceRequest $request
     * @return RecognitionOapiAttendanceFaceResponse
     */
    public function recognitionOapiAttendanceFace($request){
        $runtime = new RuntimeOptions([]);
        return $this->recognitionOapiAttendanceFaceEx($request, $runtime);
    }

    /**
     * Description: 通过mediaId识别人员信息
     * @param RecognitionOapiAttendanceFaceRequest $request
     * @param RuntimeOptions $runtime
     * @return RecognitionOapiAttendanceFaceResponse
     */
    public function recognitionOapiAttendanceFaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecognitionOapiAttendanceFaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/face/recognition", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 学段列表查询，每个校区仅有4个学段，幼儿园、小学、初中、高中，因此最多4条数据
     * @param ListOapiEduPeriodRequest $request
     * @return ListOapiEduPeriodResponse
     */
    public function listOapiEduPeriod($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduPeriodEx($request, $runtime);
    }

    /**
     * Description: 学段列表查询，每个校区仅有4个学段，幼儿园、小学、初中、高中，因此最多4条数据
     * @param ListOapiEduPeriodRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduPeriodResponse
     */
    public function listOapiEduPeriodEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduPeriodResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/period/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给ISV查询花名册的员工档案信息中有权限的字段列表
     * @param ListOapiSmartworkHrmEmployeeFieldRequest $request
     * @return ListOapiSmartworkHrmEmployeeFieldResponse
     */
    public function listOapiSmartworkHrmEmployeeField($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiSmartworkHrmEmployeeFieldEx($request, $runtime);
    }

    /**
     * Description: 提供给ISV查询花名册的员工档案信息中有权限的字段列表
     * @param ListOapiSmartworkHrmEmployeeFieldRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiSmartworkHrmEmployeeFieldResponse
     */
    public function listOapiSmartworkHrmEmployeeFieldEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiSmartworkHrmEmployeeFieldResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/field/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 学段信息查询接口，通过orgid，学段id查询学段信息，返回学段名称、nick、校区id
     * @param GetOapiEduPeriodRequest $request
     * @return GetOapiEduPeriodResponse
     */
    public function getOapiEduPeriod($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduPeriodEx($request, $runtime);
    }

    /**
     * Description: 学段信息查询接口，通过orgid，学段id查询学段信息，返回学段名称、nick、校区id
     * @param GetOapiEduPeriodRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduPeriodResponse
     */
    public function getOapiEduPeriodEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduPeriodResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/period/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询班级下老师列表，通过组织id和班级id查询老师的名称、班级id、staffid、是否为班主任、校区id信息
     * @param ListOapiEduTeacherRequest $request
     * @return ListOapiEduTeacherResponse
     */
    public function listOapiEduTeacher($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduTeacherEx($request, $runtime);
    }

    /**
     * Description: 查询班级下老师列表，通过组织id和班级id查询老师的名称、班级id、staffid、是否为班主任、校区id信息
     * @param ListOapiEduTeacherRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduTeacherResponse
     */
    public function listOapiEduTeacherEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduTeacherResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/teacher/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口发DING通知给企业内部员工, 支持短信DING和应用内DING. 
     * 该接口正在灰度内测中, 暂不对外开放
     * @param SendOapiDingRequest $request
     * @return SendOapiDingResponse
     */
    public function sendOapiDing($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiDingEx($request, $runtime);
    }

    /**
     * Description: 通过此接口发DING通知给企业内部员工, 支持短信DING和应用内DING. 
     * 该接口正在灰度内测中, 暂不对外开放
     * @param SendOapiDingRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiDingResponse
     */
    public function sendOapiDingEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiDingResponse::fromMap($this->doRequestOApi("POST", "/topapi/ding/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取简历的基本信息
     * @param ListOapiAtsPluginStatisticsResumeRequest $request
     * @return ListOapiAtsPluginStatisticsResumeResponse
     */
    public function listOapiAtsPluginStatisticsResume($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAtsPluginStatisticsResumeEx($request, $runtime);
    }

    /**
     * Description: 获取简历的基本信息
     * @param ListOapiAtsPluginStatisticsResumeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAtsPluginStatisticsResumeResponse
     */
    public function listOapiAtsPluginStatisticsResumeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAtsPluginStatisticsResumeResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/plugin/statistics/resume/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取业务流程的基本信息
     * @param ListOapiHirePluginStatisticsBizflowRequest $request
     * @return ListOapiHirePluginStatisticsBizflowResponse
     */
    public function listOapiHirePluginStatisticsBizflow($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiHirePluginStatisticsBizflowEx($request, $runtime);
    }

    /**
     * Description: 获取业务流程的基本信息
     * @param ListOapiHirePluginStatisticsBizflowRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiHirePluginStatisticsBizflowResponse
     */
    public function listOapiHirePluginStatisticsBizflowEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiHirePluginStatisticsBizflowResponse::fromMap($this->doRequestOApi("POST", "/topapi/hire/plugin/statistics/bizflow/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取职位的基本信息
     * @param ListOapiAtsPluginStatisticsJobRequest $request
     * @return ListOapiAtsPluginStatisticsJobResponse
     */
    public function listOapiAtsPluginStatisticsJob($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAtsPluginStatisticsJobEx($request, $runtime);
    }

    /**
     * Description: 获取职位的基本信息
     * @param ListOapiAtsPluginStatisticsJobRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAtsPluginStatisticsJobResponse
     */
    public function listOapiAtsPluginStatisticsJobEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAtsPluginStatisticsJobResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/plugin/statistics/job/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询指定场次的视频直播的观看人员列表（含回看人员）
     * @param ListOapiKacDatavVideoliveViewerRequest $request
     * @return ListOapiKacDatavVideoliveViewerResponse
     */
    public function listOapiKacDatavVideoliveViewer($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavVideoliveViewerEx($request, $runtime);
    }

    /**
     * Description: 查询指定场次的视频直播的观看人员列表（含回看人员）
     * @param ListOapiKacDatavVideoliveViewerRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavVideoliveViewerResponse
     */
    public function listOapiKacDatavVideoliveViewerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavVideoliveViewerResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/videolive/viewer/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按天查询企业考勤排班全量信息，使用分页功能
     * @param ListscheduleOapiAttendanceRequest $request
     * @return ListscheduleOapiAttendanceResponse
     */
    public function listscheduleOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listscheduleOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 按天查询企业考勤排班全量信息，使用分页功能
     * @param ListscheduleOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListscheduleOapiAttendanceResponse
     */
    public function listscheduleOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListscheduleOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/listschedule", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业角色列表
     * @param ListOapiRoleRequest $request
     * @return ListOapiRoleResponse
     */
    public function listOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 获取企业角色列表
     * @param ListOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRoleResponse
     */
    public function listOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: aa
     * @param GetDeptMemberOapiUserRequest $request
     * @return GetDeptMemberOapiUserResponse
     */
    public function getDeptMemberOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getDeptMemberOapiUserEx($request, $runtime);
    }

    /**
     * Description: aa
     * @param GetDeptMemberOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetDeptMemberOapiUserResponse
     */
    public function getDeptMemberOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetDeptMemberOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/getDeptMember", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建智能填表的填写任务
     * @param CreateOapiCollectionSchemaRequest $request
     * @return CreateOapiCollectionSchemaResponse
     */
    public function createOapiCollectionSchema($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCollectionSchemaEx($request, $runtime);
    }

    /**
     * Description: 创建智能填表的填写任务
     * @param CreateOapiCollectionSchemaRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCollectionSchemaResponse
     */
    public function createOapiCollectionSchemaEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCollectionSchemaResponse::fromMap($this->doRequestOApi("POST", "/topapi/collection/schema/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加企业外部联系人
     * @param CreateOapiExtcontactRequest $request
     * @return CreateOapiExtcontactResponse
     */
    public function createOapiExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiExtcontactEx($request, $runtime);
    }

    /**
     * Description: 添加企业外部联系人
     * @param CreateOapiExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiExtcontactResponse
     */
    public function createOapiExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiExtcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/extcontact/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业中角色下的员工列表
     * @param SimplelistOapiRoleRequest $request
     * @return SimplelistOapiRoleResponse
     */
    public function simplelistOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->simplelistOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 获取企业中角色下的员工列表
     * @param SimplelistOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return SimplelistOapiRoleResponse
     */
    public function simplelistOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SimplelistOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/simplelist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据群id获取班级群的可用状态，及班级邀请链接，每次最多获取100个群。
     * @param GetOapiTrainingGroupinfoRequest $request
     * @return GetOapiTrainingGroupinfoResponse
     */
    public function getOapiTrainingGroupinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiTrainingGroupinfoEx($request, $runtime);
    }

    /**
     * Description: 根据群id获取班级群的可用状态，及班级邀请链接，每次最多获取100个群。
     * @param GetOapiTrainingGroupinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiTrainingGroupinfoResponse
     */
    public function getOapiTrainingGroupinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiTrainingGroupinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/training/groupinfo/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取公司自身的考勤组列表详情信息
     * @param GetsimplegroupsOapiAttendanceRequest $request
     * @return GetsimplegroupsOapiAttendanceResponse
     */
    public function getsimplegroupsOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getsimplegroupsOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 获取公司自身的考勤组列表详情信息
     * @param GetsimplegroupsOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetsimplegroupsOapiAttendanceResponse
     */
    public function getsimplegroupsOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetsimplegroupsOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getsimplegroups", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉考勤微应用，提供了排班的功能，企业管理员可以设置排班规则，该接口可以自动根据排班规则统计出每个员工的请假时长，进而可以与企业自有的请假／财务系统对接，进行工资统计，如果您的企业使用了钉钉考勤并希望依赖考勤系统自动计算员工请假时长，可选择使用此接口
     * @param GetleaveapprovedurationOapiAttendanceRequest $request
     * @return GetleaveapprovedurationOapiAttendanceResponse
     */
    public function getleaveapprovedurationOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getleaveapprovedurationOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 钉钉考勤微应用，提供了排班的功能，企业管理员可以设置排班规则，该接口可以自动根据排班规则统计出每个员工的请假时长，进而可以与企业自有的请假／财务系统对接，进行工资统计，如果您的企业使用了钉钉考勤并希望依赖考勤系统自动计算员工请假时长，可选择使用此接口
     * @param GetleaveapprovedurationOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetleaveapprovedurationOapiAttendanceResponse
     */
    public function getleaveapprovedurationOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetleaveapprovedurationOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getleaveapproveduration", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取业务流程的基本信息
     * @param ListOapiHireStatisticsBizflowRequest $request
     * @return ListOapiHireStatisticsBizflowResponse
     */
    public function listOapiHireStatisticsBizflow($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiHireStatisticsBizflowEx($request, $runtime);
    }

    /**
     * Description: 获取业务流程的基本信息
     * @param ListOapiHireStatisticsBizflowRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiHireStatisticsBizflowResponse
     */
    public function listOapiHireStatisticsBizflowEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiHireStatisticsBizflowResponse::fromMap($this->doRequestOApi("POST", "/topapi/hire/statistics/bizflow/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量为员工增加角色信息
     * @param AddrolesforempsOapiRoleRequest $request
     * @return AddrolesforempsOapiRoleResponse
     */
    public function addrolesforempsOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->addrolesforempsOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量为员工增加角色信息
     * @param AddrolesforempsOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return AddrolesforempsOapiRoleResponse
     */
    public function addrolesforempsOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddrolesforempsOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/addrolesforemps", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取职位的基本信息
     * @param ListOapiAtsStatisticsJobRequest $request
     * @return ListOapiAtsStatisticsJobResponse
     */
    public function listOapiAtsStatisticsJob($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAtsStatisticsJobEx($request, $runtime);
    }

    /**
     * Description: 获取职位的基本信息
     * @param ListOapiAtsStatisticsJobRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAtsStatisticsJobResponse
     */
    public function listOapiAtsStatisticsJobEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAtsStatisticsJobResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/statistics/job/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业外部联系人详情
     * @param GetOapiExtcontactRequest $request
     * @return GetOapiExtcontactResponse
     */
    public function getOapiExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiExtcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业外部联系人详情
     * @param GetOapiExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiExtcontactResponse
     */
    public function getOapiExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiExtcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/extcontact/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取简历的基本信息
     * @param ListOapiAtsStatisticsResumeRequest $request
     * @return ListOapiAtsStatisticsResumeResponse
     */
    public function listOapiAtsStatisticsResume($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAtsStatisticsResumeEx($request, $runtime);
    }

    /**
     * Description: 获取简历的基本信息
     * @param ListOapiAtsStatisticsResumeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAtsStatisticsResumeResponse
     */
    public function listOapiAtsStatisticsResumeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAtsStatisticsResumeResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/statistics/resume/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在钉钉考勤微应用中，考勤组是一类具有相同的班次、考勤位置等考勤规则的人或部门的组合，一个企业中的一个人只能属于一个考勤组。如果您的企业使用了钉钉考勤并希望获取员工的考勤组信息，可选择使用此接口
     * @param GetusergroupOapiAttendanceRequest $request
     * @return GetusergroupOapiAttendanceResponse
     */
    public function getusergroupOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getusergroupOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 在钉钉考勤微应用中，考勤组是一类具有相同的班次、考勤位置等考勤规则的人或部门的组合，一个企业中的一个人只能属于一个考勤组。如果您的企业使用了钉钉考勤并希望获取员工的考勤组信息，可选择使用此接口
     * @param GetusergroupOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetusergroupOapiAttendanceResponse
     */
    public function getusergroupOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetusergroupOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getusergroup", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量删除员工的角色信息。 角色在钉钉的组织结构里面就是标签的意思，你可以批量为一批用户添加一批角色信息（dingtalk.corp.role.addrolesforemps），那么调用该接口就可以批量删除已经存在的角色和员工对应关系，角色和员工是多对多的关系。参考代码如下： req.setRolelidList("1,2,3,4,5"); // 已经存在的角色id列表 req.setUseridList("a,b,c,d,e"); // 用户的id列表
     * @param RemoverolesforempsOapiRoleRequest $request
     * @return RemoverolesforempsOapiRoleResponse
     */
    public function removerolesforempsOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->removerolesforempsOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量删除员工的角色信息。 角色在钉钉的组织结构里面就是标签的意思，你可以批量为一批用户添加一批角色信息（dingtalk.corp.role.addrolesforemps），那么调用该接口就可以批量删除已经存在的角色和员工对应关系，角色和员工是多对多的关系。参考代码如下： req.setRolelidList("1,2,3,4,5"); // 已经存在的角色id列表 req.setUseridList("a,b,c,d,e"); // 用户的id列表
     * @param RemoverolesforempsOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoverolesforempsOapiRoleResponse
     */
    public function removerolesforempsOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoverolesforempsOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/removerolesforemps", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业在做企业内部组织结构角色管理的时候，如果需要删除该企业下某个角色信息，可以调用该接口。调用的前提是该角色下面的所有员工都已经被删除该角色
     * @param DeleteroleOapiRoleRequest $request
     * @return DeleteroleOapiRoleResponse
     */
    public function deleteroleOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteroleOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 企业在做企业内部组织结构角色管理的时候，如果需要删除该企业下某个角色信息，可以调用该接口。调用的前提是该角色下面的所有员工都已经被删除该角色
     * @param DeleteroleOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteroleOapiRoleResponse
     */
    public function deleteroleOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteroleOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/deleterole", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取数字乡村组织的大屏信息
     * @param GetOapiVillageScreenRequest $request
     * @return GetOapiVillageScreenResponse
     */
    public function getOapiVillageScreen($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiVillageScreenEx($request, $runtime);
    }

    /**
     * Description: 获取数字乡村组织的大屏信息
     * @param GetOapiVillageScreenRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiVillageScreenResponse
     */
    public function getOapiVillageScreenEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiVillageScreenResponse::fromMap($this->doRequestOApi("POST", "/topapi/village/screen/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口通过groupId参数可以获取该角色组详细信息以及下面所有关联的角色的信息
     * @param GetrolegroupOapiRoleRequest $request
     * @return GetrolegroupOapiRoleResponse
     */
    public function getrolegroupOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->getrolegroupOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 该接口通过groupId参数可以获取该角色组详细信息以及下面所有关联的角色的信息
     * @param GetrolegroupOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return GetrolegroupOapiRoleResponse
     */
    public function getrolegroupOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetrolegroupOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/getrolegroup", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除一个指定的日程
     * @param DeleteOapiCalendarRequest $request
     * @return DeleteOapiCalendarResponse
     */
    public function deleteOapiCalendar($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiCalendarEx($request, $runtime);
    }

    /**
     * Description: 删除一个指定的日程
     * @param DeleteOapiCalendarRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiCalendarResponse
     */
    public function deleteOapiCalendarEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiCalendarResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 以运营主体或归属企业的身份，通过传递小圈和小圈userid列表换取与当前组织的userid映射，子圈userId-> (运营主体或归属企业)大圈userId
     * @param GetuseridsOapiWorkspaceCorpMemberRequest $request
     * @return GetuseridsOapiWorkspaceCorpMemberResponse
     */
    public function getuseridsOapiWorkspaceCorpMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuseridsOapiWorkspaceCorpMemberEx($request, $runtime);
    }

    /**
     * Description: 以运营主体或归属企业的身份，通过传递小圈和小圈userid列表换取与当前组织的userid映射，子圈userId-> (运营主体或归属企业)大圈userId
     * @param GetuseridsOapiWorkspaceCorpMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuseridsOapiWorkspaceCorpMemberResponse
     */
    public function getuseridsOapiWorkspaceCorpMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuseridsOapiWorkspaceCorpMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/corp/member/getuserids", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询多个用户一段时间范围内的签到记录，只给企业调用，ISV无法调用。
     * @param GetOapiCheckinRecordRequest $request
     * @return GetOapiCheckinRecordResponse
     */
    public function getOapiCheckinRecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCheckinRecordEx($request, $runtime);
    }

    /**
     * Description: 查询多个用户一段时间范围内的签到记录，只给企业调用，ISV无法调用。
     * @param GetOapiCheckinRecordRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCheckinRecordResponse
     */
    public function getOapiCheckinRecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCheckinRecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/checkin/record/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新企业外部联系人
     * @param UpdateOapiExtcontactRequest $request
     * @return UpdateOapiExtcontactResponse
     */
    public function updateOapiExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiExtcontactEx($request, $runtime);
    }

    /**
     * Description: 更新企业外部联系人
     * @param UpdateOapiExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiExtcontactResponse
     */
    public function updateOapiExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiExtcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/extcontact/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除企业外部联系人
     * @param DeleteOapiExtcontactRequest $request
     * @return DeleteOapiExtcontactResponse
     */
    public function deleteOapiExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiExtcontactEx($request, $runtime);
    }

    /**
     * Description: 删除企业外部联系人
     * @param DeleteOapiExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiExtcontactResponse
     */
    public function deleteOapiExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiExtcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/extcontact/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV调用该接口，可以更新对应授权企业的审批单
     * @param SyncOapiProcessRequest $request
     * @return SyncOapiProcessResponse
     */
    public function syncOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiProcessEx($request, $runtime);
    }

    /**
     * Description: ISV调用该接口，可以更新对应授权企业的审批单
     * @param SyncOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiProcessResponse
     */
    public function syncOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业外部联系人列表
     * @param ListOapiExtcontactRequest $request
     * @return ListOapiExtcontactResponse
     */
    public function listOapiExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiExtcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业外部联系人列表
     * @param ListOapiExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiExtcontactResponse
     */
    public function listOapiExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiExtcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/extcontact/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业外部联系人标签列表
     * @param ListlabelgroupsOapiExtcontactRequest $request
     * @return ListlabelgroupsOapiExtcontactResponse
     */
    public function listlabelgroupsOapiExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->listlabelgroupsOapiExtcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业外部联系人标签列表
     * @param ListlabelgroupsOapiExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return ListlabelgroupsOapiExtcontactResponse
     */
    public function listlabelgroupsOapiExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListlabelgroupsOapiExtcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/extcontact/listlabelgroups", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业或isv调用该api，来发起一个审批实例
     * @param CreateOapiProcessinstanceRequest $request
     * @return CreateOapiProcessinstanceResponse
     */
    public function createOapiProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 企业或isv调用该api，来发起一个审批实例
     * @param CreateOapiProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiProcessinstanceResponse
     */
    public function createOapiProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiProcessinstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可以根据审批流的唯一标识，分页获取该审批流对应的审批实例。只能取到权限范围内的相关部门的审批实例
     * @param ListOapiProcessinstanceRequest $request
     * @return ListOapiProcessinstanceResponse
     */
    public function listOapiProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 企业可以根据审批流的唯一标识，分页获取该审批流对应的审批实例。只能取到权限范围内的相关部门的审批实例
     * @param ListOapiProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiProcessinstanceResponse
     */
    public function listOapiProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiProcessinstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据审批实例id，获取审批实例详情，详情包括审批表单信息、操作记录列表、操作人、抄送人、审批任务列表
     * @param GetOapiProcessinstanceRequest $request
     * @return GetOapiProcessinstanceResponse
     */
    public function getOapiProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 根据审批实例id，获取审批实例详情，详情包括审批表单信息、操作记录列表、操作人、抄送人、审批任务列表
     * @param GetOapiProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiProcessinstanceResponse
     */
    public function getOapiProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiProcessinstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可以根据员工userid或者日志模板名称，分页获取员工一段时间范围内在【日志】微应用发送和修改的日志详细信息
     * @param ListOapiReportRequest $request
     * @return ListOapiReportResponse
     */
    public function listOapiReport($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiReportEx($request, $runtime);
    }

    /**
     * Description: 企业可以根据员工userid或者日志模板名称，分页获取员工一段时间范围内在【日志】微应用发送和修改的日志详细信息
     * @param ListOapiReportRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiReportResponse
     */
    public function listOapiReportEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiReportResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 列出用户当前有权限看到的10条公告，可用于在企业自定义工作首页进行公告轮播展示
     * @param ListtoptenOapiBlackboardRequest $request
     * @return ListtoptenOapiBlackboardResponse
     */
    public function listtoptenOapiBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->listtoptenOapiBlackboardEx($request, $runtime);
    }

    /**
     * Description: 列出用户当前有权限看到的10条公告，可用于在企业自定义工作首页进行公告轮播展示
     * @param ListtoptenOapiBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return ListtoptenOapiBlackboardResponse
     */
    public function listtoptenOapiBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListtoptenOapiBlackboardResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/listtopten", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业用户或部门每天的钉钉运动步数，最多可以查询31天的数据
     * @param ListOapiHealthStepinfoRequest $request
     * @return ListOapiHealthStepinfoResponse
     */
    public function listOapiHealthStepinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiHealthStepinfoEx($request, $runtime);
    }

    /**
     * Description: 查询企业用户或部门每天的钉钉运动步数，最多可以查询31天的数据
     * @param ListOapiHealthStepinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiHealthStepinfoResponse
     */
    public function listOapiHealthStepinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiHealthStepinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/health/stepinfo/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据用户列表和时间列表，批量查询钉钉运动步数
     * @param ListbyuseridOapiHealthStepinfoRequest $request
     * @return ListbyuseridOapiHealthStepinfoResponse
     */
    public function listbyuseridOapiHealthStepinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyuseridOapiHealthStepinfoEx($request, $runtime);
    }

    /**
     * Description: 根据用户列表和时间列表，批量查询钉钉运动步数
     * @param ListbyuseridOapiHealthStepinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyuseridOapiHealthStepinfoResponse
     */
    public function listbyuseridOapiHealthStepinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyuseridOapiHealthStepinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/health/stepinfo/listbyuserid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询用户是否开启了钉钉运动
     * @param GetuserstatusOapiHealthStepinfoRequest $request
     * @return GetuserstatusOapiHealthStepinfoResponse
     */
    public function getuserstatusOapiHealthStepinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserstatusOapiHealthStepinfoEx($request, $runtime);
    }

    /**
     * Description: 查询用户是否开启了钉钉运动
     * @param GetuserstatusOapiHealthStepinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserstatusOapiHealthStepinfoResponse
     */
    public function getuserstatusOapiHealthStepinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserstatusOapiHealthStepinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/health/stepinfo/getuserstatus", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改定制订单状态
     * @param ChangeOapiRhinoSalesOrderCustomInfoStatusRequest $request
     * @return ChangeOapiRhinoSalesOrderCustomInfoStatusResponse
     */
    public function changeOapiRhinoSalesOrderCustomInfoStatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->changeOapiRhinoSalesOrderCustomInfoStatusEx($request, $runtime);
    }

    /**
     * Description: 修改定制订单状态
     * @param ChangeOapiRhinoSalesOrderCustomInfoStatusRequest $request
     * @param RuntimeOptions $runtime
     * @return ChangeOapiRhinoSalesOrderCustomInfoStatusResponse
     */
    public function changeOapiRhinoSalesOrderCustomInfoStatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ChangeOapiRhinoSalesOrderCustomInfoStatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/sales/order/custom/info/status/change", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 审批接口开放中的第一步，ISV调用此接口把它自身的审批流复制都授权企业中
     * @param CopyOapiProcessRequest $request
     * @return CopyOapiProcessResponse
     */
    public function copyOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->copyOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 审批接口开放中的第一步，ISV调用此接口把它自身的审批流复制都授权企业中
     * @param CopyOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return CopyOapiProcessResponse
     */
    public function copyOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CopyOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/copy", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过用户授权码异步向企业会话发送消息
     * @param AsyncsendbycodeOapiMessageCorpconversationRequest $request
     * @return AsyncsendbycodeOapiMessageCorpconversationResponse
     */
    public function asyncsendbycodeOapiMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsendbycodeOapiMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 通过用户授权码异步向企业会话发送消息
     * @param AsyncsendbycodeOapiMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncsendbycodeOapiMessageCorpconversationResponse
     */
    public function asyncsendbycodeOapiMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncsendbycodeOapiMessageCorpconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/corpconversation/asyncsendbycode", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业会话消息异步发送接口
     * @param AsyncsendOapiMessageCorpconversationRequest $request
     * @return AsyncsendOapiMessageCorpconversationResponse
     */
    public function asyncsendOapiMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsendOapiMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 企业会话消息异步发送接口
     * @param AsyncsendOapiMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncsendOapiMessageCorpconversationResponse
     */
    public function asyncsendOapiMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncsendOapiMessageCorpconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/corpconversation/asyncsend", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业员工的成长记录
     * @param AddresumerecordCorpHrmEmployeeRequest $request
     * @return AddresumerecordCorpHrmEmployeeResponse
     */
    public function addresumerecordCorpHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->addresumerecordCorpHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 企业员工的成长记录
     * @param AddresumerecordCorpHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return AddresumerecordCorpHrmEmployeeResponse
     */
    public function addresumerecordCorpHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddresumerecordCorpHrmEmployeeResponse::fromMap($this->doRequest("dingtalk.corp.hrm.employee.addresumerecord", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取异步发送企业会话消息的进度
     * @param GetsendprogressOapiMessageCorpconversationRequest $request
     * @return GetsendprogressOapiMessageCorpconversationResponse
     */
    public function getsendprogressOapiMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getsendprogressOapiMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 获取异步发送企业会话消息的进度
     * @param GetsendprogressOapiMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetsendprogressOapiMessageCorpconversationResponse
     */
    public function getsendprogressOapiMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetsendprogressOapiMessageCorpconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/corpconversation/getsendprogress", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取异步向企业会话发送消息的结果
     * @param GetsendresultOapiMessageCorpconversationRequest $request
     * @return GetsendresultOapiMessageCorpconversationResponse
     */
    public function getsendresultOapiMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getsendresultOapiMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 获取异步向企业会话发送消息的结果
     * @param GetsendresultOapiMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetsendresultOapiMessageCorpconversationResponse
     */
    public function getsendresultOapiMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetsendresultOapiMessageCorpconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/corpconversation/getsendresult", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增待办事项
     * @param AddOapiWorkrecordRequest $request
     * @return AddOapiWorkrecordResponse
     */
    public function addOapiWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 新增待办事项
     * @param AddOapiWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiWorkrecordResponse
     */
    public function addOapiWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/workrecord/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新待办事项状态
     * @param UpdateOapiWorkrecordRequest $request
     * @return UpdateOapiWorkrecordResponse
     */
    public function updateOapiWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 更新待办事项状态
     * @param UpdateOapiWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiWorkrecordResponse
     */
    public function updateOapiWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/workrecord/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开始职位模型匹配度测评
     * @param StartOapiAtsEvaluateJobmatchRequest $request
     * @return StartOapiAtsEvaluateJobmatchResponse
     */
    public function startOapiAtsEvaluateJobmatch($request){
        $runtime = new RuntimeOptions([]);
        return $this->startOapiAtsEvaluateJobmatchEx($request, $runtime);
    }

    /**
     * Description: 开始职位模型匹配度测评
     * @param StartOapiAtsEvaluateJobmatchRequest $request
     * @param RuntimeOptions $runtime
     * @return StartOapiAtsEvaluateJobmatchResponse
     */
    public function startOapiAtsEvaluateJobmatchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StartOapiAtsEvaluateJobmatchResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/evaluate/jobmatch/start", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 完成职位模型匹配度测评
     * @param FinishOapiAtsEvaluateJobmatchRequest $request
     * @return FinishOapiAtsEvaluateJobmatchResponse
     */
    public function finishOapiAtsEvaluateJobmatch($request){
        $runtime = new RuntimeOptions([]);
        return $this->finishOapiAtsEvaluateJobmatchEx($request, $runtime);
    }

    /**
     * Description: 完成职位模型匹配度测评
     * @param FinishOapiAtsEvaluateJobmatchRequest $request
     * @param RuntimeOptions $runtime
     * @return FinishOapiAtsEvaluateJobmatchResponse
     */
    public function finishOapiAtsEvaluateJobmatchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FinishOapiAtsEvaluateJobmatchResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/evaluate/jobmatch/finish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 取消职位模型匹配度测评
     * @param CancelOapiAtsEvaluateJobmatchRequest $request
     * @return CancelOapiAtsEvaluateJobmatchResponse
     */
    public function cancelOapiAtsEvaluateJobmatch($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiAtsEvaluateJobmatchEx($request, $runtime);
    }

    /**
     * Description: 取消职位模型匹配度测评
     * @param CancelOapiAtsEvaluateJobmatchRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiAtsEvaluateJobmatchResponse
     */
    public function cancelOapiAtsEvaluateJobmatchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiAtsEvaluateJobmatchResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/evaluate/jobmatch/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据candidate_id获取候选人信息
     * @param GetOapiAtsCandidateRequest $request
     * @return GetOapiAtsCandidateResponse
     */
    public function getOapiAtsCandidate($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAtsCandidateEx($request, $runtime);
    }

    /**
     * Description: 根据candidate_id获取候选人信息
     * @param GetOapiAtsCandidateRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAtsCandidateResponse
     */
    public function getOapiAtsCandidateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAtsCandidateResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/candidate/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按名称搜索考勤组
     * @param SearchOapiAttendanceGroupRequest $request
     * @return SearchOapiAttendanceGroupResponse
     */
    public function searchOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 按名称搜索考勤组
     * @param SearchOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAttendanceGroupResponse
     */
    public function searchOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取主干组织列表
     * @param GetOapiOrgUnionTrunkRequest $request
     * @return GetOapiOrgUnionTrunkResponse
     */
    public function getOapiOrgUnionTrunk($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiOrgUnionTrunkEx($request, $runtime);
    }

    /**
     * Description: 获取主干组织列表
     * @param GetOapiOrgUnionTrunkRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiOrgUnionTrunkResponse
     */
    public function getOapiOrgUnionTrunkEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiOrgUnionTrunkResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/union/trunk/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取分支组织列表
     * @param GetOapiOrgUnionBranchRequest $request
     * @return GetOapiOrgUnionBranchResponse
     */
    public function getOapiOrgUnionBranch($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiOrgUnionBranchEx($request, $runtime);
    }

    /**
     * Description: 获取分支组织列表
     * @param GetOapiOrgUnionBranchRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiOrgUnionBranchResponse
     */
    public function getOapiOrgUnionBranchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiOrgUnionBranchResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/union/branch/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量更新群成员昵称功能
     * @param BatchupdateOapiChatNickRequest $request
     * @return BatchupdateOapiChatNickResponse
     */
    public function batchupdateOapiChatNick($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchupdateOapiChatNickEx($request, $runtime);
    }

    /**
     * Description: 批量更新群成员昵称功能
     * @param BatchupdateOapiChatNickRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchupdateOapiChatNickResponse
     */
    public function batchupdateOapiChatNickEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchupdateOapiChatNickResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/nick/batchupdate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据stat_date和corp_id查询家医数据
     * @param ListOapiEnterpriseFamilydrRequest $request
     * @return ListOapiEnterpriseFamilydrResponse
     */
    public function listOapiEnterpriseFamilydr($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEnterpriseFamilydrEx($request, $runtime);
    }

    /**
     * Description: 根据stat_date和corp_id查询家医数据
     * @param ListOapiEnterpriseFamilydrRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEnterpriseFamilydrResponse
     */
    public function listOapiEnterpriseFamilydrEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEnterpriseFamilydrResponse::fromMap($this->doRequestOApi("POST", "/topapi/enterprise/familydr/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询某人一天的排班
     * @param ListbydayOapiAttendanceScheduleRequest $request
     * @return ListbydayOapiAttendanceScheduleResponse
     */
    public function listbydayOapiAttendanceSchedule($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbydayOapiAttendanceScheduleEx($request, $runtime);
    }

    /**
     * Description: 查询某人一天的排班
     * @param ListbydayOapiAttendanceScheduleRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbydayOapiAttendanceScheduleResponse
     */
    public function listbydayOapiAttendanceScheduleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbydayOapiAttendanceScheduleResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/schedule/listbyday", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取群成员
     * @param ListOapiCorpConversationMemberRequest $request
     * @return ListOapiCorpConversationMemberResponse
     */
    public function listOapiCorpConversationMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCorpConversationMemberEx($request, $runtime);
    }

    /**
     * Description: 分页获取群成员
     * @param ListOapiCorpConversationMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCorpConversationMemberResponse
     */
    public function listOapiCorpConversationMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCorpConversationMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/corp/conversation/member/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据企业corpId查询班次信息
     * @param ListOapiAttendanceShiftRequest $request
     * @return ListOapiAttendanceShiftResponse
     */
    public function listOapiAttendanceShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceShiftEx($request, $runtime);
    }

    /**
     * Description: 根据企业corpId查询班次信息
     * @param ListOapiAttendanceShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceShiftResponse
     */
    public function listOapiAttendanceShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据审批实例id，获取审批实例详情，详情包括审批表单信息、操作记录列表、操作人、抄送人、审批任务列表
     * @param GetSmartworkBpmsProcessinstanceRequest $request
     * @return GetSmartworkBpmsProcessinstanceResponse
     */
    public function getSmartworkBpmsProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getSmartworkBpmsProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 根据审批实例id，获取审批实例详情，详情包括审批表单信息、操作记录列表、操作人、抄送人、审批任务列表
     * @param GetSmartworkBpmsProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetSmartworkBpmsProcessinstanceResponse
     */
    public function getSmartworkBpmsProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetSmartworkBpmsProcessinstanceResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstance.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分批次获取考勤组人员信息，针对考勤部门设置，获取的是其具体部门人员信息
     * @param ListOapiAttendanceGroupMemberusersRequest $request
     * @return ListOapiAttendanceGroupMemberusersResponse
     */
    public function listOapiAttendanceGroupMemberusers($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceGroupMemberusersEx($request, $runtime);
    }

    /**
     * Description: 分批次获取考勤组人员信息，针对考勤部门设置，获取的是其具体部门人员信息
     * @param ListOapiAttendanceGroupMemberusersRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceGroupMemberusersResponse
     */
    public function listOapiAttendanceGroupMemberusersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceGroupMemberusersResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/memberusers/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分批次获取考勤组极简信息
     * @param ListOapiAttendanceGroupMinimalismRequest $request
     * @return ListOapiAttendanceGroupMinimalismResponse
     */
    public function listOapiAttendanceGroupMinimalism($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceGroupMinimalismEx($request, $runtime);
    }

    /**
     * Description: 分批次获取考勤组极简信息
     * @param ListOapiAttendanceGroupMinimalismRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceGroupMinimalismResponse
     */
    public function listOapiAttendanceGroupMinimalismEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceGroupMinimalismResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/minimalism/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询一批排班的结果
     * @param ListbyidsOapiAttendanceScheduleResultRequest $request
     * @return ListbyidsOapiAttendanceScheduleResultResponse
     */
    public function listbyidsOapiAttendanceScheduleResult($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyidsOapiAttendanceScheduleResultEx($request, $runtime);
    }

    /**
     * Description: 查询一批排班的结果
     * @param ListbyidsOapiAttendanceScheduleResultRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyidsOapiAttendanceScheduleResultResponse
     */
    public function listbyidsOapiAttendanceScheduleResultEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyidsOapiAttendanceScheduleResultResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/schedule/result/listbyids", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据班次id和version查询历史班次信息
     * @param QueryOapiAttendanceShiftHistoryRequest $request
     * @return QueryOapiAttendanceShiftHistoryResponse
     */
    public function queryOapiAttendanceShiftHistory($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceShiftHistoryEx($request, $runtime);
    }

    /**
     * Description: 根据班次id和version查询历史班次信息
     * @param QueryOapiAttendanceShiftHistoryRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceShiftHistoryResponse
     */
    public function queryOapiAttendanceShiftHistoryEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceShiftHistoryResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/history/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按名称搜索班次
     * @param SearchOapiAttendanceShiftRequest $request
     * @return SearchOapiAttendanceShiftResponse
     */
    public function searchOapiAttendanceShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAttendanceShiftEx($request, $runtime);
    }

    /**
     * Description: 按名称搜索班次
     * @param SearchOapiAttendanceShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAttendanceShiftResponse
     */
    public function searchOapiAttendanceShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAttendanceShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据班次id查询班次信息
     * @param QueryOapiAttendanceShiftRequest $request
     * @return QueryOapiAttendanceShiftResponse
     */
    public function queryOapiAttendanceShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceShiftEx($request, $runtime);
    }

    /**
     * Description: 根据班次id查询班次信息
     * @param QueryOapiAttendanceShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceShiftResponse
     */
    public function queryOapiAttendanceShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业内个人之间发送单聊消息接口
     * @param Send_to_single_conversationOapiMessageRequest $request
     * @return Send_to_single_conversationOapiMessageResponse
     */
    public function send_to_single_conversationOapiMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->send_to_single_conversationOapiMessageEx($request, $runtime);
    }

    /**
     * Description: 企业内个人之间发送单聊消息接口
     * @param Send_to_single_conversationOapiMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return Send_to_single_conversationOapiMessageResponse
     */
    public function send_to_single_conversationOapiMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Send_to_single_conversationOapiMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/send_to_single_conversation", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过免登码获取用户userid
     * @param GetuserinfoOapiUserRequest $request
     * @return GetuserinfoOapiUserResponse
     */
    public function getuserinfoOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserinfoOapiUserEx($request, $runtime);
    }

    /**
     * Description: 通过免登码获取用户userid
     * @param GetuserinfoOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserinfoOapiUserResponse
     */
    public function getuserinfoOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserinfoOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/getuserinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口仅限企业接入使用，用于返回企业内员工的实际打卡结果。比如，企业给一个员工设定的排班是上午9点和下午6点各打一次卡，即使员工在这期间打了多次，该接口也只会返回两条记录，包括上午的打卡结果和下午的打卡结果
     * @param ListOapiAttendanceRequest $request
     * @return ListOapiAttendanceResponse
     */
    public function listOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 该接口仅限企业接入使用，用于返回企业内员工的实际打卡结果。比如，企业给一个员工设定的排班是上午9点和下午6点各打一次卡，即使员工在这期间打了多次，该接口也只会返回两条记录，包括上午的打卡结果和下午的打卡结果
     * @param ListOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceResponse
     */
    public function listOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/attendance/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口仅限企业接入使用，用于返回企业内员工的实际打卡记录。比如，企业给一个员工设定的排班是上午9点和下午6点各打一次卡，但是员工在这期间打了多次，该接口会把所有的打卡记录都返回。
     * @param ListRecordOapiAttendanceRequest $request
     * @return ListRecordOapiAttendanceResponse
     */
    public function listRecordOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listRecordOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 该接口仅限企业接入使用，用于返回企业内员工的实际打卡记录。比如，企业给一个员工设定的排班是上午9点和下午6点各打一次卡，但是员工在这期间打了多次，该接口会把所有的打卡记录都返回。
     * @param ListRecordOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListRecordOapiAttendanceResponse
     */
    public function listRecordOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListRecordOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/attendance/listRecord", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV为授权方的企业单独设置IP白名单
     * @param Set_corp_ipwhitelistOapiServiceRequest $request
     * @return Set_corp_ipwhitelistOapiServiceResponse
     */
    public function set_corp_ipwhitelistOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->set_corp_ipwhitelistOapiServiceEx($request, $runtime);
    }

    /**
     * Description: ISV为授权方的企业单独设置IP白名单
     * @param Set_corp_ipwhitelistOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Set_corp_ipwhitelistOapiServiceResponse
     */
    public function set_corp_ipwhitelistOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Set_corp_ipwhitelistOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/set_corp_ipwhitelist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 重新授权未激活应用的企业
     * @param Reauth_corpOapiServiceRequest $request
     * @return Reauth_corpOapiServiceResponse
     */
    public function reauth_corpOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->reauth_corpOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 重新授权未激活应用的企业
     * @param Reauth_corpOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Reauth_corpOapiServiceResponse
     */
    public function reauth_corpOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Reauth_corpOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/reauth_corp", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据stat_date和corp_id查询所辖组织统计接口数据
     * @param StatOapiEnterpriseSuborgTotaldataRequest $request
     * @return StatOapiEnterpriseSuborgTotaldataResponse
     */
    public function statOapiEnterpriseSuborgTotaldata($request){
        $runtime = new RuntimeOptions([]);
        return $this->statOapiEnterpriseSuborgTotaldataEx($request, $runtime);
    }

    /**
     * Description: 根据stat_date和corp_id查询所辖组织统计接口数据
     * @param StatOapiEnterpriseSuborgTotaldataRequest $request
     * @param RuntimeOptions $runtime
     * @return StatOapiEnterpriseSuborgTotaldataResponse
     */
    public function statOapiEnterpriseSuborgTotaldataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StatOapiEnterpriseSuborgTotaldataResponse::fromMap($this->doRequestOApi("POST", "/topapi/enterprise/suborg/totaldata/stat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发送群消息
     * @param SendOapiChatRequest $request
     * @return SendOapiChatResponse
     */
    public function sendOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiChatEx($request, $runtime);
    }

    /**
     * Description: 发送群消息
     * @param SendOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiChatResponse
     */
    public function sendOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiChatResponse::fromMap($this->doRequestOApi("POST", "/chat/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据stat_date和corp_id查询微应用使用数据
     * @param StatOapiEnterpriseMicroappUsedataRequest $request
     * @return StatOapiEnterpriseMicroappUsedataResponse
     */
    public function statOapiEnterpriseMicroappUsedata($request){
        $runtime = new RuntimeOptions([]);
        return $this->statOapiEnterpriseMicroappUsedataEx($request, $runtime);
    }

    /**
     * Description: 根据stat_date和corp_id查询微应用使用数据
     * @param StatOapiEnterpriseMicroappUsedataRequest $request
     * @param RuntimeOptions $runtime
     * @return StatOapiEnterpriseMicroappUsedataResponse
     */
    public function statOapiEnterpriseMicroappUsedataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StatOapiEnterpriseMicroappUsedataResponse::fromMap($this->doRequestOApi("POST", "/topapi/enterprise/microapp/usedata/stat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询群消息已读人员列表
     * @param GetReadListOapiChatRequest $request
     * @return GetReadListOapiChatResponse
     */
    public function getReadListOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->getReadListOapiChatEx($request, $runtime);
    }

    /**
     * Description: 查询群消息已读人员列表
     * @param GetReadListOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return GetReadListOapiChatResponse
     */
    public function getReadListOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetReadListOapiChatResponse::fromMap($this->doRequestOApi("GET", "/chat/getReadList", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据stat_date和corp_id查询组织整体统计指标
     * @param StatOapiEnterpriseMainorgTotaldataRequest $request
     * @return StatOapiEnterpriseMainorgTotaldataResponse
     */
    public function statOapiEnterpriseMainorgTotaldata($request){
        $runtime = new RuntimeOptions([]);
        return $this->statOapiEnterpriseMainorgTotaldataEx($request, $runtime);
    }

    /**
     * Description: 根据stat_date和corp_id查询组织整体统计指标
     * @param StatOapiEnterpriseMainorgTotaldataRequest $request
     * @param RuntimeOptions $runtime
     * @return StatOapiEnterpriseMainorgTotaldataResponse
     */
    public function statOapiEnterpriseMainorgTotaldataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StatOapiEnterpriseMainorgTotaldataResponse::fromMap($this->doRequestOApi("POST", "/topapi/enterprise/mainorg/totaldata/stat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改群会话
     * @param UpdateOapiChatRequest $request
     * @return UpdateOapiChatResponse
     */
    public function updateOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiChatEx($request, $runtime);
    }

    /**
     * Description: 修改群会话
     * @param UpdateOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiChatResponse
     */
    public function updateOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiChatResponse::fromMap($this->doRequestOApi("POST", "/chat/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询指定用户的所有上级父部门路径
     * @param List_parent_deptsOapiDepartmentRequest $request
     * @return List_parent_deptsOapiDepartmentResponse
     */
    public function list_parent_deptsOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->list_parent_deptsOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 查询指定用户的所有上级父部门路径
     * @param List_parent_deptsOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return List_parent_deptsOapiDepartmentResponse
     */
    public function list_parent_deptsOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return List_parent_deptsOapiDepartmentResponse::fromMap($this->doRequestOApi("GET", "/department/list_parent_depts", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询部门的所有上级父部门路径
     * @param List_parent_depts_by_deptOapiDepartmentRequest $request
     * @return List_parent_depts_by_deptOapiDepartmentResponse
     */
    public function list_parent_depts_by_deptOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->list_parent_depts_by_deptOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 查询部门的所有上级父部门路径
     * @param List_parent_depts_by_deptOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return List_parent_depts_by_deptOapiDepartmentResponse
     */
    public function list_parent_depts_by_deptOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return List_parent_depts_by_deptOapiDepartmentResponse::fromMap($this->doRequestOApi("GET", "/department/list_parent_depts_by_dept", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业安装微应用后，ISV可通过本接口给企业上架一个企业机器人。目前灰度几个ISV，机器人应用会白名单处理
     * @param InstallCorpChatbotRequest $request
     * @return InstallCorpChatbotResponse
     */
    public function installCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->installCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: 企业安装微应用后，ISV可通过本接口给企业上架一个企业机器人。目前灰度几个ISV，机器人应用会白名单处理
     * @param InstallCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return InstallCorpChatbotResponse
     */
    public function installCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InstallCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.install", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建群会话
     * @param CreateOapiChatRequest $request
     * @return CreateOapiChatResponse
     */
    public function createOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiChatEx($request, $runtime);
    }

    /**
     * Description: 创建群会话
     * @param CreateOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiChatResponse
     */
    public function createOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiChatResponse::fromMap($this->doRequestOApi("POST", "/chat/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV变更企业已安装机器人的名字或头像
     * @param UpdatebychatbotidCorpChatbotRequest $request
     * @return UpdatebychatbotidCorpChatbotResponse
     */
    public function updatebychatbotidCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->updatebychatbotidCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: ISV变更企业已安装机器人的名字或头像
     * @param UpdatebychatbotidCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdatebychatbotidCorpChatbotResponse
     */
    public function updatebychatbotidCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdatebychatbotidCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.updatebychatbotid", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新部门
     * @param UpdateOapiDepartmentRequest $request
     * @return UpdateOapiDepartmentResponse
     */
    public function updateOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 更新部门
     * @param UpdateOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiDepartmentResponse
     */
    public function updateOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiDepartmentResponse::fromMap($this->doRequestOApi("POST", "/department/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业会话消息异步发送接口
     * @param AsyncsendCorpMessageCorpconversationRequest $request
     * @return AsyncsendCorpMessageCorpconversationResponse
     */
    public function asyncsendCorpMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsendCorpMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 企业会话消息异步发送接口
     * @param AsyncsendCorpMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncsendCorpMessageCorpconversationResponse
     */
    public function asyncsendCorpMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncsendCorpMessageCorpconversationResponse::fromMap($this->doRequest("dingtalk.corp.message.corpconversation.asyncsend", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV根据chatbotId查询给企业已安装的机器人信息
     * @param ListbychatbotidsCorpChatbotRequest $request
     * @return ListbychatbotidsCorpChatbotResponse
     */
    public function listbychatbotidsCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbychatbotidsCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: ISV根据chatbotId查询给企业已安装的机器人信息
     * @param ListbychatbotidsCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbychatbotidsCorpChatbotResponse
     */
    public function listbychatbotidsCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbychatbotidsCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.listbychatbotids", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门列表
     * @param ListOapiDepartmentRequest $request
     * @return ListOapiDepartmentResponse
     */
    public function listOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 获取部门列表
     * @param ListOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiDepartmentResponse
     */
    public function listOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiDepartmentResponse::fromMap($this->doRequestOApi("GET", "/department/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据unionid获取成员的userid
     * @param GetUseridByUnionidOapiUserRequest $request
     * @return GetUseridByUnionidOapiUserResponse
     */
    public function getUseridByUnionidOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getUseridByUnionidOapiUserEx($request, $runtime);
    }

    /**
     * Description: 根据unionid获取成员的userid
     * @param GetUseridByUnionidOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetUseridByUnionidOapiUserResponse
     */
    public function getUseridByUnionidOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetUseridByUnionidOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/getUseridByUnionid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取异步发送企业会话消息的进度
     * @param GetsendprogressCorpMessageCorpconversationRequest $request
     * @return GetsendprogressCorpMessageCorpconversationResponse
     */
    public function getsendprogressCorpMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getsendprogressCorpMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 获取异步发送企业会话消息的进度
     * @param GetsendprogressCorpMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetsendprogressCorpMessageCorpconversationResponse
     */
    public function getsendprogressCorpMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetsendprogressCorpMessageCorpconversationResponse::fromMap($this->doRequest("dingtalk.corp.message.corpconversation.getsendprogress", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取管理员的微应用管理权限
     * @param Can_access_microappOapiUserRequest $request
     * @return Can_access_microappOapiUserResponse
     */
    public function can_access_microappOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->can_access_microappOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取管理员的微应用管理权限
     * @param Can_access_microappOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return Can_access_microappOapiUserResponse
     */
    public function can_access_microappOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Can_access_microappOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/can_access_microapp", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取异步向企业会话发送消息的结果
     * @param GetsendresultCorpMessageCorpconversationRequest $request
     * @return GetsendresultCorpMessageCorpconversationResponse
     */
    public function getsendresultCorpMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getsendresultCorpMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 获取异步向企业会话发送消息的结果
     * @param GetsendresultCorpMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetsendresultCorpMessageCorpconversationResponse
     */
    public function getsendresultCorpMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetsendresultCorpMessageCorpconversationResponse::fromMap($this->doRequest("dingtalk.corp.message.corpconversation.getsendresult", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取管理员列表
     * @param Get_adminOapiUserRequest $request
     * @return Get_adminOapiUserResponse
     */
    public function get_adminOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_adminOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取管理员列表
     * @param Get_adminOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_adminOapiUserResponse
     */
    public function get_adminOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return Get_adminOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/get_admin", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过用户授权码异步向企业会话发送消息
     * @param AsyncsendbycodeCorpMessageCorpconversationRequest $request
     * @return AsyncsendbycodeCorpMessageCorpconversationResponse
     */
    public function asyncsendbycodeCorpMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsendbycodeCorpMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 通过用户授权码异步向企业会话发送消息
     * @param AsyncsendbycodeCorpMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncsendbycodeCorpMessageCorpconversationResponse
     */
    public function asyncsendbycodeCorpMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncsendbycodeCorpMessageCorpconversationResponse::fromMap($this->doRequest("dingtalk.corp.message.corpconversation.asyncsendbycode", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门成员（详情）
     * @param ListOapiUserRequest $request
     * @return ListOapiUserResponse
     */
    public function listOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取部门成员（详情）
     * @param ListOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiUserResponse
     */
    public function listOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置群成员之间是否可以添加好友和私聊的开关
     * @param AddOapiGroupSetFriendsRequest $request
     * @return AddOapiGroupSetFriendsResponse
     */
    public function addOapiGroupSetFriends($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiGroupSetFriendsEx($request, $runtime);
    }

    /**
     * Description: 设置群成员之间是否可以添加好友和私聊的开关
     * @param AddOapiGroupSetFriendsRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiGroupSetFriendsResponse
     */
    public function addOapiGroupSetFriendsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiGroupSetFriendsResponse::fromMap($this->doRequestOApi("POST", "/topapi/group/set/friends/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据stat_date和corp_id查询所辖区域统计数据
     * @param StatOapiEnterpriseSubareaTotaldataRequest $request
     * @return StatOapiEnterpriseSubareaTotaldataResponse
     */
    public function statOapiEnterpriseSubareaTotaldata($request){
        $runtime = new RuntimeOptions([]);
        return $this->statOapiEnterpriseSubareaTotaldataEx($request, $runtime);
    }

    /**
     * Description: 根据stat_date和corp_id查询所辖区域统计数据
     * @param StatOapiEnterpriseSubareaTotaldataRequest $request
     * @param RuntimeOptions $runtime
     * @return StatOapiEnterpriseSubareaTotaldataResponse
     */
    public function statOapiEnterpriseSubareaTotaldataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StatOapiEnterpriseSubareaTotaldataResponse::fromMap($this->doRequestOApi("POST", "/topapi/enterprise/subarea/totaldata/stat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门成员
     * @param SimplelistOapiUserRequest $request
     * @return SimplelistOapiUserResponse
     */
    public function simplelistOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->simplelistOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取部门成员
     * @param SimplelistOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return SimplelistOapiUserResponse
     */
    public function simplelistOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SimplelistOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/simplelist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量删除成员
     * @param BatchdeleteOapiUserRequest $request
     * @return BatchdeleteOapiUserResponse
     */
    public function batchdeleteOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchdeleteOapiUserEx($request, $runtime);
    }

    /**
     * Description: 批量删除成员
     * @param BatchdeleteOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchdeleteOapiUserResponse
     */
    public function batchdeleteOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchdeleteOapiUserResponse::fromMap($this->doRequestOApi("POST", "/user/batchdelete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务从用户的任务列表移除（推荐使用场景：用户离开项目时调用）
     * @param HidebyprojectOapiTdpTasklistRequest $request
     * @return HidebyprojectOapiTdpTasklistResponse
     */
    public function hidebyprojectOapiTdpTasklist($request){
        $runtime = new RuntimeOptions([]);
        return $this->hidebyprojectOapiTdpTasklistEx($request, $runtime);
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务从用户的任务列表移除（推荐使用场景：用户离开项目时调用）
     * @param HidebyprojectOapiTdpTasklistRequest $request
     * @param RuntimeOptions $runtime
     * @return HidebyprojectOapiTdpTasklistResponse
     */
    public function hidebyprojectOapiTdpTasklistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HidebyprojectOapiTdpTasklistResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/tasklist/hidebyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除成员
     * @param DeleteOapiUserRequest $request
     * @return DeleteOapiUserResponse
     */
    public function deleteOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiUserEx($request, $runtime);
    }

    /**
     * Description: 删除成员
     * @param DeleteOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiUserResponse
     */
    public function deleteOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务从用户的任务列表移除（推荐使用场景：用户离开项目时调用）
     * @param HidebyprojectOapiWorkspaceTasklistRequest $request
     * @return HidebyprojectOapiWorkspaceTasklistResponse
     */
    public function hidebyprojectOapiWorkspaceTasklist($request){
        $runtime = new RuntimeOptions([]);
        return $this->hidebyprojectOapiWorkspaceTasklistEx($request, $runtime);
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务从用户的任务列表移除（推荐使用场景：用户离开项目时调用）
     * @param HidebyprojectOapiWorkspaceTasklistRequest $request
     * @param RuntimeOptions $runtime
     * @return HidebyprojectOapiWorkspaceTasklistResponse
     */
    public function hidebyprojectOapiWorkspaceTasklistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HidebyprojectOapiWorkspaceTasklistResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/tasklist/hidebyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建成员
     * @param CreateOapiUserRequest $request
     * @return CreateOapiUserResponse
     */
    public function createOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiUserEx($request, $runtime);
    }

    /**
     * Description: 创建成员
     * @param CreateOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiUserResponse
     */
    public function createOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiUserResponse::fromMap($this->doRequestOApi("POST", "/user/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量将企业下某用户参与的所有任务移出用户的待办列表
     * @param HidebyorgOapiWorkspaceTasklistRequest $request
     * @return HidebyorgOapiWorkspaceTasklistResponse
     */
    public function hidebyorgOapiWorkspaceTasklist($request){
        $runtime = new RuntimeOptions([]);
        return $this->hidebyorgOapiWorkspaceTasklistEx($request, $runtime);
    }

    /**
     * Description: 批量将企业下某用户参与的所有任务移出用户的待办列表
     * @param HidebyorgOapiWorkspaceTasklistRequest $request
     * @param RuntimeOptions $runtime
     * @return HidebyorgOapiWorkspaceTasklistResponse
     */
    public function hidebyorgOapiWorkspaceTasklistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HidebyorgOapiWorkspaceTasklistResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/tasklist/hidebyorg", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取子部门ID列表
     * @param List_idsOapiDepartmentRequest $request
     * @return List_idsOapiDepartmentResponse
     */
    public function list_idsOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->list_idsOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 获取子部门ID列表
     * @param List_idsOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return List_idsOapiDepartmentResponse
     */
    public function list_idsOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return List_idsOapiDepartmentResponse::fromMap($this->doRequestOApi("GET", "/department/list_ids", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务加入用户任务列表（推荐使用场景：用户加入项目时调用）
     * @param AddbyprojectOapiTdpTasklistRequest $request
     * @return AddbyprojectOapiTdpTasklistResponse
     */
    public function addbyprojectOapiTdpTasklist($request){
        $runtime = new RuntimeOptions([]);
        return $this->addbyprojectOapiTdpTasklistEx($request, $runtime);
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务加入用户任务列表（推荐使用场景：用户加入项目时调用）
     * @param AddbyprojectOapiTdpTasklistRequest $request
     * @param RuntimeOptions $runtime
     * @return AddbyprojectOapiTdpTasklistResponse
     */
    public function addbyprojectOapiTdpTasklistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddbyprojectOapiTdpTasklistResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/tasklist/addbyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新用户详情
     * @param UpdateOapiUserRequest $request
     * @return UpdateOapiUserResponse
     */
    public function updateOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiUserEx($request, $runtime);
    }

    /**
     * Description: 更新用户详情
     * @param UpdateOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiUserResponse
     */
    public function updateOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiUserResponse::fromMap($this->doRequestOApi("POST", "/user/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务加入用户任务列表（推荐使用场景：用户加入项目时调用）
     * @param AddbyprojectOapiWorkspaceTasklistRequest $request
     * @return AddbyprojectOapiWorkspaceTasklistResponse
     */
    public function addbyprojectOapiWorkspaceTasklist($request){
        $runtime = new RuntimeOptions([]);
        return $this->addbyprojectOapiWorkspaceTasklistEx($request, $runtime);
    }

    /**
     * Description: 批量将某项目下用户参与的所有任务加入用户任务列表（推荐使用场景：用户加入项目时调用）
     * @param AddbyprojectOapiWorkspaceTasklistRequest $request
     * @param RuntimeOptions $runtime
     * @return AddbyprojectOapiWorkspaceTasklistResponse
     */
    public function addbyprojectOapiWorkspaceTasklistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddbyprojectOapiWorkspaceTasklistResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/tasklist/addbyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户详情
     * @param GetOapiUserRequest $request
     * @return GetOapiUserResponse
     */
    public function getOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取用户详情
     * @param GetOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiUserResponse
     */
    public function getOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量将企业下某用户参与的所有任务移出用户的任务列表 （推荐使用场景：用户离开企业时调用）
     * @param HidebyorgOapiTdpTasklistRequest $request
     * @return HidebyorgOapiTdpTasklistResponse
     */
    public function hidebyorgOapiTdpTasklist($request){
        $runtime = new RuntimeOptions([]);
        return $this->hidebyorgOapiTdpTasklistEx($request, $runtime);
    }

    /**
     * Description: 批量将企业下某用户参与的所有任务移出用户的任务列表 （推荐使用场景：用户离开企业时调用）
     * @param HidebyorgOapiTdpTasklistRequest $request
     * @param RuntimeOptions $runtime
     * @return HidebyorgOapiTdpTasklistResponse
     */
    public function hidebyorgOapiTdpTasklistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HidebyorgOapiTdpTasklistResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/tasklist/hidebyorg", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过CODE换取微应用管理员的身份信息
     * @param GetuserinfoOapiSsoRequest $request
     * @return GetuserinfoOapiSsoResponse
     */
    public function getuserinfoOapiSso($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserinfoOapiSsoEx($request, $runtime);
    }

    /**
     * Description: 通过CODE换取微应用管理员的身份信息
     * @param GetuserinfoOapiSsoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserinfoOapiSsoResponse
     */
    public function getuserinfoOapiSsoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserinfoOapiSsoResponse::fromMap($this->doRequestOApi("GET", "/sso/getuserinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给ISV使用的用于删除已经添加到企业的应用快捷方式
     * @param DeleteOapiWorkbenchShortcutRequest $request
     * @return DeleteOapiWorkbenchShortcutResponse
     */
    public function deleteOapiWorkbenchShortcut($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiWorkbenchShortcutEx($request, $runtime);
    }

    /**
     * Description: 提供给ISV使用的用于删除已经添加到企业的应用快捷方式
     * @param DeleteOapiWorkbenchShortcutRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiWorkbenchShortcutResponse
     */
    public function deleteOapiWorkbenchShortcutEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiWorkbenchShortcutResponse::fromMap($this->doRequestOApi("POST", "/topapi/workbench/shortcut/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV将应用快捷方式添加到企业后会引导用户将该快捷方式添加到工作台,需要获取到工作台快捷方式引导页地址
     * @param GetguideuriOapiWorkbenchShortcutRequest $request
     * @return GetguideuriOapiWorkbenchShortcutResponse
     */
    public function getguideuriOapiWorkbenchShortcut($request){
        $runtime = new RuntimeOptions([]);
        return $this->getguideuriOapiWorkbenchShortcutEx($request, $runtime);
    }

    /**
     * Description: ISV将应用快捷方式添加到企业后会引导用户将该快捷方式添加到工作台,需要获取到工作台快捷方式引导页地址
     * @param GetguideuriOapiWorkbenchShortcutRequest $request
     * @param RuntimeOptions $runtime
     * @return GetguideuriOapiWorkbenchShortcutResponse
     */
    public function getguideuriOapiWorkbenchShortcutEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetguideuriOapiWorkbenchShortcutResponse::fromMap($this->doRequestOApi("POST", "/topapi/workbench/shortcut/getguideuri", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据企业 + 应用信息等(分页)获取企业下对应该应用已经开通的快捷方式列表
     * @param ListOapiWorkbenchShortcutRequest $request
     * @return ListOapiWorkbenchShortcutResponse
     */
    public function listOapiWorkbenchShortcut($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiWorkbenchShortcutEx($request, $runtime);
    }

    /**
     * Description: 根据企业 + 应用信息等(分页)获取企业下对应该应用已经开通的快捷方式列表
     * @param ListOapiWorkbenchShortcutRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiWorkbenchShortcutResponse
     */
    public function listOapiWorkbenchShortcutEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiWorkbenchShortcutResponse::fromMap($this->doRequestOApi("POST", "/topapi/workbench/shortcut/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV给开通其应用的企业添加快捷方式
     * @param AddOapiWorkbenchShortcutRequest $request
     * @return AddOapiWorkbenchShortcutResponse
     */
    public function addOapiWorkbenchShortcut($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiWorkbenchShortcutEx($request, $runtime);
    }

    /**
     * Description: ISV给开通其应用的企业添加快捷方式
     * @param AddOapiWorkbenchShortcutRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiWorkbenchShortcutResponse
     */
    public function addOapiWorkbenchShortcutEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiWorkbenchShortcutResponse::fromMap($this->doRequestOApi("POST", "/topapi/workbench/shortcut/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV对已经添加其应用快捷方式的企业做快捷方式做更新
     * @param UpdateOapiWorkbenchShortcutRequest $request
     * @return UpdateOapiWorkbenchShortcutResponse
     */
    public function updateOapiWorkbenchShortcut($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiWorkbenchShortcutEx($request, $runtime);
    }

    /**
     * Description: ISV对已经添加其应用快捷方式的企业做快捷方式做更新
     * @param UpdateOapiWorkbenchShortcutRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiWorkbenchShortcutResponse
     */
    public function updateOapiWorkbenchShortcutEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiWorkbenchShortcutResponse::fromMap($this->doRequestOApi("POST", "/topapi/workbench/shortcut/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 1. 根据审批单获取发起人，goodCode获取服务商企业信息和服务人员信息。
     * 2. 创建或者拉人进群
     * 3. 发送消息
     * @param RemindOapiAppstoreInternalRequest $request
     * @return RemindOapiAppstoreInternalResponse
     */
    public function remindOapiAppstoreInternal($request){
        $runtime = new RuntimeOptions([]);
        return $this->remindOapiAppstoreInternalEx($request, $runtime);
    }

    /**
     * Description: 1. 根据审批单获取发起人，goodCode获取服务商企业信息和服务人员信息。
     * 2. 创建或者拉人进群
     * 3. 发送消息
     * @param RemindOapiAppstoreInternalRequest $request
     * @param RuntimeOptions $runtime
     * @return RemindOapiAppstoreInternalResponse
     */
    public function remindOapiAppstoreInternalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemindOapiAppstoreInternalResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/internal/remind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取群会话
     * @param GetOapiChatRequest $request
     * @return GetOapiChatResponse
     */
    public function getOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiChatEx($request, $runtime);
    }

    /**
     * Description: 获取群会话
     * @param GetOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiChatResponse
     */
    public function getOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiChatResponse::fromMap($this->doRequestOApi("GET", "/chat/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门详情
     * @param GetOapiDepartmentRequest $request
     * @return GetOapiDepartmentResponse
     */
    public function getOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 获取部门详情
     * @param GetOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiDepartmentResponse
     */
    public function getOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiDepartmentResponse::fromMap($this->doRequestOApi("GET", "/department/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除部门
     * @param DeleteOapiDepartmentRequest $request
     * @return DeleteOapiDepartmentResponse
     */
    public function deleteOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 删除部门
     * @param DeleteOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiDepartmentResponse
     */
    public function deleteOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiDepartmentResponse::fromMap($this->doRequestOApi("GET", "/department/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建部门
     * @param CreateOapiDepartmentRequest $request
     * @return CreateOapiDepartmentResponse
     */
    public function createOapiDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiDepartmentEx($request, $runtime);
    }

    /**
     * Description: 创建部门
     * @param CreateOapiDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiDepartmentResponse
     */
    public function createOapiDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiDepartmentResponse::fromMap($this->doRequestOApi("POST", "/department/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业token
     * @param GettokenOapiRequest $request
     * @return GettokenOapiResponse
     */
    public function gettokenOapi($request){
        $runtime = new RuntimeOptions([]);
        return $this->gettokenOapiEx($request, $runtime);
    }

    /**
     * Description: 获取企业token
     * @param GettokenOapiRequest $request
     * @param RuntimeOptions $runtime
     * @return GettokenOapiResponse
     */
    public function gettokenOapiEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GettokenOapiResponse::fromMap($this->doRequestOApi("GET", "/gettoken", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除事件回调接口
     * @param Delete_call_backOapiCall_backRequest $request
     * @return Delete_call_backOapiCall_backResponse
     */
    public function delete_call_backOapiCall_back($request){
        $runtime = new RuntimeOptions([]);
        return $this->delete_call_backOapiCall_backEx($request, $runtime);
    }

    /**
     * Description: 删除事件回调接口
     * @param Delete_call_backOapiCall_backRequest $request
     * @param RuntimeOptions $runtime
     * @return Delete_call_backOapiCall_backResponse
     */
    public function delete_call_backOapiCall_backEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return Delete_call_backOapiCall_backResponse::fromMap($this->doRequestOApi("GET", "/call_back/delete_call_back", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新事件回调接口
     * @param Update_call_backOapiCall_backRequest $request
     * @return Update_call_backOapiCall_backResponse
     */
    public function update_call_backOapiCall_back($request){
        $runtime = new RuntimeOptions([]);
        return $this->update_call_backOapiCall_backEx($request, $runtime);
    }

    /**
     * Description: 更新事件回调接口
     * @param Update_call_backOapiCall_backRequest $request
     * @param RuntimeOptions $runtime
     * @return Update_call_backOapiCall_backResponse
     */
    public function update_call_backOapiCall_backEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Update_call_backOapiCall_backResponse::fromMap($this->doRequestOApi("POST", "/call_back/update_call_back", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询事件回调接口
     * @param Get_call_backOapiCall_backRequest $request
     * @return Get_call_backOapiCall_backResponse
     */
    public function get_call_backOapiCall_back($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_call_backOapiCall_backEx($request, $runtime);
    }

    /**
     * Description: 查询事件回调接口
     * @param Get_call_backOapiCall_backRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_call_backOapiCall_backResponse
     */
    public function get_call_backOapiCall_backEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return Get_call_backOapiCall_backResponse::fromMap($this->doRequestOApi("GET", "/call_back/get_call_back", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户授权的SNS_TOKEN
     * @param Get_sns_tokenOapiSnsRequest $request
     * @return Get_sns_tokenOapiSnsResponse
     */
    public function get_sns_tokenOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_sns_tokenOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 获取用户授权的SNS_TOKEN
     * @param Get_sns_tokenOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_sns_tokenOapiSnsResponse
     */
    public function get_sns_tokenOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_sns_tokenOapiSnsResponse::fromMap($this->doRequestOApi("POST", "/sns/get_sns_token", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取应用未激活的企业列表
     * @param Get_unactive_corpOapiServiceRequest $request
     * @return Get_unactive_corpOapiServiceResponse
     */
    public function get_unactive_corpOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_unactive_corpOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 获取应用未激活的企业列表
     * @param Get_unactive_corpOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_unactive_corpOapiServiceResponse
     */
    public function get_unactive_corpOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_unactive_corpOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/get_unactive_corp", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉第三方个人应用推送团餐订单信息
     * @param PushOapiCateringPersonalorderRequest $request
     * @return PushOapiCateringPersonalorderResponse
     */
    public function pushOapiCateringPersonalorder($request){
        $runtime = new RuntimeOptions([]);
        return $this->pushOapiCateringPersonalorderEx($request, $runtime);
    }

    /**
     * Description: 钉钉第三方个人应用推送团餐订单信息
     * @param PushOapiCateringPersonalorderRequest $request
     * @param RuntimeOptions $runtime
     * @return PushOapiCateringPersonalorderResponse
     */
    public function pushOapiCateringPersonalorderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PushOapiCateringPersonalorderResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/personalorder/push", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业的应用信息
     * @param Get_agentOapiServiceRequest $request
     * @return Get_agentOapiServiceResponse
     */
    public function get_agentOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_agentOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 获取企业的应用信息
     * @param Get_agentOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_agentOapiServiceResponse
     */
    public function get_agentOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_agentOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/get_agent", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业基本信息
     * @param Get_auth_infoOapiServiceRequest $request
     * @return Get_auth_infoOapiServiceResponse
     */
    public function get_auth_infoOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_auth_infoOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 获取企业基本信息
     * @param Get_auth_infoOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_auth_infoOapiServiceResponse
     */
    public function get_auth_infoOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_auth_infoOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/get_auth_info", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业授权的凭证
     * @param Get_corp_tokenOapiServiceRequest $request
     * @return Get_corp_tokenOapiServiceResponse
     */
    public function get_corp_tokenOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_corp_tokenOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 获取企业授权的凭证
     * @param Get_corp_tokenOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_corp_tokenOapiServiceResponse
     */
    public function get_corp_tokenOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_corp_tokenOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/get_corp_token", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 激活套件
     * @param Activate_suiteOapiServiceRequest $request
     * @return Activate_suiteOapiServiceResponse
     */
    public function activate_suiteOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->activate_suiteOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 激活套件
     * @param Activate_suiteOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Activate_suiteOapiServiceResponse
     */
    public function activate_suiteOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Activate_suiteOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/activate_suite", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业授权的永久授权码
     * @param Get_permanent_codeOapiServiceRequest $request
     * @return Get_permanent_codeOapiServiceResponse
     */
    public function get_permanent_codeOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_permanent_codeOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 获取企业授权的永久授权码
     * @param Get_permanent_codeOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_permanent_codeOapiServiceResponse
     */
    public function get_permanent_codeOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_permanent_codeOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/get_permanent_code", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取应用套件令牌Token
     * @param Get_suite_tokenOapiServiceRequest $request
     * @return Get_suite_tokenOapiServiceResponse
     */
    public function get_suite_tokenOapiService($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_suite_tokenOapiServiceEx($request, $runtime);
    }

    /**
     * Description: 获取应用套件令牌Token
     * @param Get_suite_tokenOapiServiceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_suite_tokenOapiServiceResponse
     */
    public function get_suite_tokenOapiServiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_suite_tokenOapiServiceResponse::fromMap($this->doRequestOApi("POST", "/service/get_suite_token", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给ISV提供为企业创建机器人的接口
     * @param CreateorgbotCorpChatbotRequest $request
     * @return CreateorgbotCorpChatbotResponse
     */
    public function createorgbotCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->createorgbotCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: 给ISV提供为企业创建机器人的接口
     * @param CreateorgbotCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateorgbotCorpChatbotResponse
     */
    public function createorgbotCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateorgbotCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.createorgbot", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取回调失败的结果
     * @param Get_call_back_failed_resultOapiCall_backRequest $request
     * @return Get_call_back_failed_resultOapiCall_backResponse
     */
    public function get_call_back_failed_resultOapiCall_back($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_call_back_failed_resultOapiCall_backEx($request, $runtime);
    }

    /**
     * Description: 获取回调失败的结果
     * @param Get_call_back_failed_resultOapiCall_backRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_call_back_failed_resultOapiCall_backResponse
     */
    public function get_call_back_failed_resultOapiCall_backEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return Get_call_back_failed_resultOapiCall_backResponse::fromMap($this->doRequestOApi("GET", "/call_back/get_call_back_failed_result", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 注册事件回调接口
     * @param Register_call_backOapiCall_backRequest $request
     * @return Register_call_backOapiCall_backResponse
     */
    public function register_call_backOapiCall_back($request){
        $runtime = new RuntimeOptions([]);
        return $this->register_call_backOapiCall_backEx($request, $runtime);
    }

    /**
     * Description: 注册事件回调接口
     * @param Register_call_backOapiCall_backRequest $request
     * @param RuntimeOptions $runtime
     * @return Register_call_backOapiCall_backResponse
     */
    public function register_call_backOapiCall_backEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Register_call_backOapiCall_backResponse::fromMap($this->doRequestOApi("POST", "/call_back/register_call_back", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置项目成员角色（强制覆盖已有角色，调用后原本从原本角色中移出，加入参数传入的角色)
     * @param UpdateOapiWorkspaceProjectMemberRoleRequest $request
     * @return UpdateOapiWorkspaceProjectMemberRoleResponse
     */
    public function updateOapiWorkspaceProjectMemberRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiWorkspaceProjectMemberRoleEx($request, $runtime);
    }

    /**
     * Description: 设置项目成员角色（强制覆盖已有角色，调用后原本从原本角色中移出，加入参数传入的角色)
     * @param UpdateOapiWorkspaceProjectMemberRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiWorkspaceProjectMemberRoleResponse
     */
    public function updateOapiWorkspaceProjectMemberRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiWorkspaceProjectMemberRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/member/role/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业员工人数
     * @param Get_org_user_countOapiUserRequest $request
     * @return Get_org_user_countOapiUserResponse
     */
    public function get_org_user_countOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_org_user_countOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取企业员工人数
     * @param Get_org_user_countOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_org_user_countOapiUserResponse
     */
    public function get_org_user_countOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_org_user_countOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/get_org_user_count", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询成员信息
     * @param QueryOapiWorkspaceProjectMemberRequest $request
     * @return QueryOapiWorkspaceProjectMemberResponse
     */
    public function queryOapiWorkspaceProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiWorkspaceProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 查询成员信息
     * @param QueryOapiWorkspaceProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiWorkspaceProjectMemberResponse
     */
    public function queryOapiWorkspaceProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiWorkspaceProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/member/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发送普通消息
     * @param Send_to_conversationOapiMessageRequest $request
     * @return Send_to_conversationOapiMessageResponse
     */
    public function send_to_conversationOapiMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->send_to_conversationOapiMessageEx($request, $runtime);
    }

    /**
     * Description: 发送普通消息
     * @param Send_to_conversationOapiMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return Send_to_conversationOapiMessageResponse
     */
    public function send_to_conversationOapiMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Send_to_conversationOapiMessageResponse::fromMap($this->doRequestOApi("POST", "/message/send_to_conversation", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 从一个组织中选一批人，加入项目/圈子。如果目的组织是项目，要去源组织是项目的归属组织。如果知道用户手机号码，直接走开放平台已有的通讯录用户相关接口即可
     * @param AddOapiWorkspaceProjectMemberRequest $request
     * @return AddOapiWorkspaceProjectMemberResponse
     */
    public function addOapiWorkspaceProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiWorkspaceProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 从一个组织中选一批人，加入项目/圈子。如果目的组织是项目，要去源组织是项目的归属组织。如果知道用户手机号码，直接走开放平台已有的通讯录用户相关接口即可
     * @param AddOapiWorkspaceProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiWorkspaceProjectMemberResponse
     */
    public function addOapiWorkspaceProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiWorkspaceProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/member/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户授权的个人信息
     * @param GetuserinfoOapiSnsRequest $request
     * @return GetuserinfoOapiSnsResponse
     */
    public function getuserinfoOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserinfoOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 获取用户授权的个人信息
     * @param GetuserinfoOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserinfoOapiSnsResponse
     */
    public function getuserinfoOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserinfoOapiSnsResponse::fromMap($this->doRequestOApi("GET", "/sns/getuserinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量添加角色，如果角色已经在项目内存在，不重复创建
     * @param CreateOapiWorkspaceProjectRoleRequest $request
     * @return CreateOapiWorkspaceProjectRoleResponse
     */
    public function createOapiWorkspaceProjectRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiWorkspaceProjectRoleEx($request, $runtime);
    }

    /**
     * Description: 批量添加角色，如果角色已经在项目内存在，不重复创建
     * @param CreateOapiWorkspaceProjectRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiWorkspaceProjectRoleResponse
     */
    public function createOapiWorkspaceProjectRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiWorkspaceProjectRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/role/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 同步淘宝的新商家和钉钉用户关系
     * @param SyncOapiRetailSellerRequest $request
     * @return SyncOapiRetailSellerResponse
     */
    public function syncOapiRetailSeller($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiRetailSellerEx($request, $runtime);
    }

    /**
     * Description: 同步淘宝的新商家和钉钉用户关系
     * @param SyncOapiRetailSellerRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiRetailSellerResponse
     */
    public function syncOapiRetailSellerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiRetailSellerResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/seller/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户授权的持久授权码
     * @param Get_persistent_codeOapiSnsRequest $request
     * @return Get_persistent_codeOapiSnsResponse
     */
    public function get_persistent_codeOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_persistent_codeOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 获取用户授权的持久授权码
     * @param Get_persistent_codeOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_persistent_codeOapiSnsResponse
     */
    public function get_persistent_codeOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_persistent_codeOapiSnsResponse::fromMap($this->doRequestOApi("POST", "/sns/get_persistent_code", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询项目/圈子信息
     * @param QueryOapiWorkspaceProjectRequest $request
     * @return QueryOapiWorkspaceProjectResponse
     */
    public function queryOapiWorkspaceProject($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiWorkspaceProjectEx($request, $runtime);
    }

    /**
     * Description: 查询项目/圈子信息
     * @param QueryOapiWorkspaceProjectRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiWorkspaceProjectResponse
     */
    public function queryOapiWorkspaceProjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return QueryOapiWorkspaceProjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业开发者通过接口创建微应用
     * @param CreateOapiMicroappRequest $request
     * @return CreateOapiMicroappResponse
     */
    public function createOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 企业开发者通过接口创建微应用
     * @param CreateOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiMicroappResponse
     */
    public function createOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/microapp/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建项目/圈子组织
     * @param CreateOapiWorkspaceProjectRequest $request
     * @return CreateOapiWorkspaceProjectResponse
     */
    public function createOapiWorkspaceProject($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiWorkspaceProjectEx($request, $runtime);
    }

    /**
     * Description: 创建项目/圈子组织
     * @param CreateOapiWorkspaceProjectRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiWorkspaceProjectResponse
     */
    public function createOapiWorkspaceProjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiWorkspaceProjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新微应用
     * @param UpdateOapiMicroappRequest $request
     * @return UpdateOapiMicroappResponse
     */
    public function updateOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 更新微应用
     * @param UpdateOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiMicroappResponse
     */
    public function updateOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/microapp/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 列出微应用
     * @param ListOapiMicroappRequest $request
     * @return ListOapiMicroappResponse
     */
    public function listOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 列出微应用
     * @param ListOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiMicroappResponse
     */
    public function listOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ListOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/microapp/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获得签到数据
     * @param RecordOapiCheckinRequest $request
     * @return RecordOapiCheckinResponse
     */
    public function recordOapiCheckin($request){
        $runtime = new RuntimeOptions([]);
        return $this->recordOapiCheckinEx($request, $runtime);
    }

    /**
     * Description: 获得签到数据
     * @param RecordOapiCheckinRequest $request
     * @param RuntimeOptions $runtime
     * @return RecordOapiCheckinResponse
     */
    public function recordOapiCheckinEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecordOapiCheckinResponse::fromMap($this->doRequestOApi("GET", "/checkin/record", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页查询企业下已添加且有效的快捷方式列表
     * @param ListbypagingOapiWorkbenchShortcutRequest $request
     * @return ListbypagingOapiWorkbenchShortcutResponse
     */
    public function listbypagingOapiWorkbenchShortcut($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbypagingOapiWorkbenchShortcutEx($request, $runtime);
    }

    /**
     * Description: 分页查询企业下已添加且有效的快捷方式列表
     * @param ListbypagingOapiWorkbenchShortcutRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbypagingOapiWorkbenchShortcutResponse
     */
    public function listbypagingOapiWorkbenchShortcutEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbypagingOapiWorkbenchShortcutResponse::fromMap($this->doRequestOApi("POST", "/topapi/workbench/shortcut/listbypaging", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除微应用
     * @param DeleteOapiMicroappRequest $request
     * @return DeleteOapiMicroappResponse
     */
    public function deleteOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 删除微应用
     * @param DeleteOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiMicroappResponse
     */
    public function deleteOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/microapp/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询排班概要信息
     * @param ListbydaysOapiAttendanceScheduleShiftRequest $request
     * @return ListbydaysOapiAttendanceScheduleShiftResponse
     */
    public function listbydaysOapiAttendanceScheduleShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbydaysOapiAttendanceScheduleShiftEx($request, $runtime);
    }

    /**
     * Description: 查询排班概要信息
     * @param ListbydaysOapiAttendanceScheduleShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbydaysOapiAttendanceScheduleShiftResponse
     */
    public function listbydaysOapiAttendanceScheduleShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbydaysOapiAttendanceScheduleShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/schedule/shift/listbydays", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 列出员工可见的微应用
     * @param List_by_useridOapiMicroappRequest $request
     * @return List_by_useridOapiMicroappResponse
     */
    public function list_by_useridOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->list_by_useridOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 列出员工可见的微应用
     * @param List_by_useridOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return List_by_useridOapiMicroappResponse
     */
    public function list_by_useridOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return List_by_useridOapiMicroappResponse::fromMap($this->doRequestOApi("GET", "/microapp/list_by_userid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 排班制考勤组排班能力
     * @param AsyncOapiAttendanceGroupScheduleRequest $request
     * @return AsyncOapiAttendanceGroupScheduleResponse
     */
    public function asyncOapiAttendanceGroupSchedule($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncOapiAttendanceGroupScheduleEx($request, $runtime);
    }

    /**
     * Description: 排班制考勤组排班能力
     * @param AsyncOapiAttendanceGroupScheduleRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncOapiAttendanceGroupScheduleResponse
     */
    public function asyncOapiAttendanceGroupScheduleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncOapiAttendanceGroupScheduleResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/schedule/async", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业设置的微应用可见范围
     * @param Visible_scopesOapiMicroappRequest $request
     * @return Visible_scopesOapiMicroappResponse
     */
    public function visible_scopesOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->visible_scopesOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 获取企业设置的微应用可见范围
     * @param Visible_scopesOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return Visible_scopesOapiMicroappResponse
     */
    public function visible_scopesOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Visible_scopesOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/microapp/visible_scopes", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置微应用的可见范围
     * @param Set_visible_scopesOapiMicroappRequest $request
     * @return Set_visible_scopesOapiMicroappResponse
     */
    public function set_visible_scopesOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->set_visible_scopesOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 设置微应用的可见范围
     * @param Set_visible_scopesOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return Set_visible_scopesOapiMicroappResponse
     */
    public function set_visible_scopesOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Set_visible_scopesOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/microapp/set_visible_scopes", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 微应用规则绑定服务
     * @param Get_rule_listOapiMicroappRuleRequest $request
     * @return Get_rule_listOapiMicroappRuleResponse
     */
    public function get_rule_listOapiMicroappRule($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_rule_listOapiMicroappRuleEx($request, $runtime);
    }

    /**
     * Description: 微应用规则绑定服务
     * @param Get_rule_listOapiMicroappRuleRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_rule_listOapiMicroappRuleResponse
     */
    public function get_rule_listOapiMicroappRuleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_rule_listOapiMicroappRuleResponse::fromMap($this->doRequestOApi("POST", "/microapp/rule/get_rule_list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取规则绑定的用户数
     * @param Get_user_totalOapiMicroappRuleRequest $request
     * @return Get_user_totalOapiMicroappRuleResponse
     */
    public function get_user_totalOapiMicroappRule($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_user_totalOapiMicroappRuleEx($request, $runtime);
    }

    /**
     * Description: 获取规则绑定的用户数
     * @param Get_user_totalOapiMicroappRuleRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_user_totalOapiMicroappRuleResponse
     */
    public function get_user_totalOapiMicroappRuleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_user_totalOapiMicroappRuleResponse::fromMap($this->doRequestOApi("POST", "/microapp/rule/get_user_total", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取微应用后台免登的SsoToken
     * @param GettokenOapiSsoRequest $request
     * @return GettokenOapiSsoResponse
     */
    public function gettokenOapiSso($request){
        $runtime = new RuntimeOptions([]);
        return $this->gettokenOapiSsoEx($request, $runtime);
    }

    /**
     * Description: 获取微应用后台免登的SsoToken
     * @param GettokenOapiSsoRequest $request
     * @param RuntimeOptions $runtime
     * @return GettokenOapiSsoResponse
     */
    public function gettokenOapiSsoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GettokenOapiSsoResponse::fromMap($this->doRequestOApi("GET", "/sso/gettoken", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取jsapi_ticket
     * @param Get_jsapi_ticketOapiRequest $request
     * @return Get_jsapi_ticketOapiResponse
     */
    public function get_jsapi_ticketOapi($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_jsapi_ticketOapiEx($request, $runtime);
    }

    /**
     * Description: 获取jsapi_ticket
     * @param Get_jsapi_ticketOapiRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_jsapi_ticketOapiResponse
     */
    public function get_jsapi_ticketOapiEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return Get_jsapi_ticketOapiResponse::fromMap($this->doRequestOApi("GET", "/get_jsapi_ticket", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除规则
     * @param DeleteOapiMicroappRuleRequest $request
     * @return DeleteOapiMicroappRuleResponse
     */
    public function deleteOapiMicroappRule($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiMicroappRuleEx($request, $runtime);
    }

    /**
     * Description: 删除规则
     * @param DeleteOapiMicroappRuleRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiMicroappRuleResponse
     */
    public function deleteOapiMicroappRuleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiMicroappRuleResponse::fromMap($this->doRequestOApi("POST", "/microapp/rule/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 实名认证中的人脸扫描结果查询开放
     * @param GetOapiFaceauthRequest $request
     * @return GetOapiFaceauthResponse
     */
    public function getOapiFaceauth($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiFaceauthEx($request, $runtime);
    }

    /**
     * Description: 实名认证中的人脸扫描结果查询开放
     * @param GetOapiFaceauthRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiFaceauthResponse
     */
    public function getOapiFaceauthEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiFaceauthResponse::fromMap($this->doRequestOApi("POST", "/topapi/faceauth/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取钉钉开放应用的ACCESS_TOKEN
     * @param GettokenOapiSnsRequest $request
     * @return GettokenOapiSnsResponse
     */
    public function gettokenOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->gettokenOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 获取钉钉开放应用的ACCESS_TOKEN
     * @param GettokenOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return GettokenOapiSnsResponse
     */
    public function gettokenOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GettokenOapiSnsResponse::fromMap($this->doRequestOApi("GET", "/sns/gettoken", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取CorpSecret授权范围
     * @param ScopesOapiAuthRequest $request
     * @return ScopesOapiAuthResponse
     */
    public function scopesOapiAuth($request){
        $runtime = new RuntimeOptions([]);
        return $this->scopesOapiAuthEx($request, $runtime);
    }

    /**
     * Description: 获取CorpSecret授权范围
     * @param ScopesOapiAuthRequest $request
     * @param RuntimeOptions $runtime
     * @return ScopesOapiAuthResponse
     */
    public function scopesOapiAuthEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ScopesOapiAuthResponse::fromMap($this->doRequestOApi("GET", "/auth/scopes", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户待审批数量
     * @param GettodonumOapiProcessRequest $request
     * @return GettodonumOapiProcessResponse
     */
    public function gettodonumOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->gettodonumOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 获取用户待审批数量
     * @param GettodonumOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return GettodonumOapiProcessResponse
     */
    public function gettodonumOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GettodonumOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/gettodonum", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业员工的日志未读数
     * @param GetunreadcountOapiReportRequest $request
     * @return GetunreadcountOapiReportResponse
     */
    public function getunreadcountOapiReport($request){
        $runtime = new RuntimeOptions([]);
        return $this->getunreadcountOapiReportEx($request, $runtime);
    }

    /**
     * Description: 查询企业员工的日志未读数
     * @param GetunreadcountOapiReportRequest $request
     * @param RuntimeOptions $runtime
     * @return GetunreadcountOapiReportResponse
     */
    public function getunreadcountOapiReportEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetunreadcountOapiReportResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/getunreadcount", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给isv将外部数据批量写入到钉钉的服务
     * @param SaveOapiSmartworkHrmMasterRequest $request
     * @return SaveOapiSmartworkHrmMasterResponse
     */
    public function saveOapiSmartworkHrmMaster($request){
        $runtime = new RuntimeOptions([]);
        return $this->saveOapiSmartworkHrmMasterEx($request, $runtime);
    }

    /**
     * Description: 提供给isv将外部数据批量写入到钉钉的服务
     * @param SaveOapiSmartworkHrmMasterRequest $request
     * @param RuntimeOptions $runtime
     * @return SaveOapiSmartworkHrmMasterResponse
     */
    public function saveOapiSmartworkHrmMasterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SaveOapiSmartworkHrmMasterResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/master/save", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除ISV套件对应的企业下的可以主动调用接口发起免费电话的员工
     * @param GetuserlistIsvCallRequest $request
     * @return GetuserlistIsvCallResponse
     */
    public function getuserlistIsvCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserlistIsvCallEx($request, $runtime);
    }

    /**
     * Description: 删除ISV套件对应的企业下的可以主动调用接口发起免费电话的员工
     * @param GetuserlistIsvCallRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserlistIsvCallResponse
     */
    public function getuserlistIsvCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserlistIsvCallResponse::fromMap($this->doRequest("dingtalk.isv.call.getuserlist", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 主叫方发起免费电话给授权企业下的授权范围内的人员
     * @param CalluserIsvCallRequest $request
     * @return CalluserIsvCallResponse
     */
    public function calluserIsvCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->calluserIsvCallEx($request, $runtime);
    }

    /**
     * Description: 主叫方发起免费电话给授权企业下的授权范围内的人员
     * @param CalluserIsvCallRequest $request
     * @param RuntimeOptions $runtime
     * @return CalluserIsvCallResponse
     */
    public function calluserIsvCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CalluserIsvCallResponse::fromMap($this->doRequest("dingtalk.isv.call.calluser", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置isv发起免费电话的主叫白名单
     * @param SetuserlistIsvCallRequest $request
     * @return SetuserlistIsvCallResponse
     */
    public function setuserlistIsvCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->setuserlistIsvCallEx($request, $runtime);
    }

    /**
     * Description: 设置isv发起免费电话的主叫白名单
     * @param SetuserlistIsvCallRequest $request
     * @param RuntimeOptions $runtime
     * @return SetuserlistIsvCallResponse
     */
    public function setuserlistIsvCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetuserlistIsvCallResponse::fromMap($this->doRequest("dingtalk.isv.call.setuserlist", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除isv免费电话员工名单
     * @param RemoveuserlistIsvCallRequest $request
     * @return RemoveuserlistIsvCallResponse
     */
    public function removeuserlistIsvCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeuserlistIsvCallEx($request, $runtime);
    }

    /**
     * Description: 删除isv免费电话员工名单
     * @param RemoveuserlistIsvCallRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveuserlistIsvCallResponse
     */
    public function removeuserlistIsvCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveuserlistIsvCallResponse::fromMap($this->doRequest("dingtalk.isv.call.removeuserlist", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 输入一段文本，得到翻译指定语言后的译文，支持多种语言的互译
     * @param TranslateOapiPlatformRequest $request
     * @return TranslateOapiPlatformResponse
     */
    public function translateOapiPlatform($request){
        $runtime = new RuntimeOptions([]);
        return $this->translateOapiPlatformEx($request, $runtime);
    }

    /**
     * Description: 输入一段文本，得到翻译指定语言后的译文，支持多种语言的互译
     * @param TranslateOapiPlatformRequest $request
     * @param RuntimeOptions $runtime
     * @return TranslateOapiPlatformResponse
     */
    public function translateOapiPlatformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TranslateOapiPlatformResponse::fromMap($this->doRequestOApi("POST", "/topapi/platform/translate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 将设备的成员userIds同步给钉钉
     * @param SyncOapiSmartdeviceDevicememberRequest $request
     * @return SyncOapiSmartdeviceDevicememberResponse
     */
    public function syncOapiSmartdeviceDevicemember($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiSmartdeviceDevicememberEx($request, $runtime);
    }

    /**
     * Description: 将设备的成员userIds同步给钉钉
     * @param SyncOapiSmartdeviceDevicememberRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiSmartdeviceDevicememberResponse
     */
    public function syncOapiSmartdeviceDevicememberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiSmartdeviceDevicememberResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/devicemember/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询通过 dingtalk.oapi.smartdevice.devicemember.sync 接口同步的成员列表
     * @param ListOapiSmartdeviceDevicememberRequest $request
     * @return ListOapiSmartdeviceDevicememberResponse
     */
    public function listOapiSmartdeviceDevicemember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiSmartdeviceDevicememberEx($request, $runtime);
    }

    /**
     * Description: 查询通过 dingtalk.oapi.smartdevice.devicemember.sync 接口同步的成员列表
     * @param ListOapiSmartdeviceDevicememberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiSmartdeviceDevicememberResponse
     */
    public function listOapiSmartdeviceDevicememberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiSmartdeviceDevicememberResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/devicemember/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 移除通过 dingtalk.oapi.smartdevice.devicemember.sync 接口同步的所有数据。
     * @param RemoveallOapiSmartdeviceDevicememberRequest $request
     * @return RemoveallOapiSmartdeviceDevicememberResponse
     */
    public function removeallOapiSmartdeviceDevicemember($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeallOapiSmartdeviceDevicememberEx($request, $runtime);
    }

    /**
     * Description: 移除通过 dingtalk.oapi.smartdevice.devicemember.sync 接口同步的所有数据。
     * @param RemoveallOapiSmartdeviceDevicememberRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveallOapiSmartdeviceDevicememberResponse
     */
    public function removeallOapiSmartdeviceDevicememberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveallOapiSmartdeviceDevicememberResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/devicemember/removeall", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV向钉钉智能硬件添加授权企业的访客邀约记录，以实现与智能识别设备的打通流程
     * @param AddvisitorOapiSmartdeviceVisitorRequest $request
     * @return AddvisitorOapiSmartdeviceVisitorResponse
     */
    public function addvisitorOapiSmartdeviceVisitor($request){
        $runtime = new RuntimeOptions([]);
        return $this->addvisitorOapiSmartdeviceVisitorEx($request, $runtime);
    }

    /**
     * Description: ISV向钉钉智能硬件添加授权企业的访客邀约记录，以实现与智能识别设备的打通流程
     * @param AddvisitorOapiSmartdeviceVisitorRequest $request
     * @param RuntimeOptions $runtime
     * @return AddvisitorOapiSmartdeviceVisitorResponse
     */
    public function addvisitorOapiSmartdeviceVisitorEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddvisitorOapiSmartdeviceVisitorResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/visitor/addvisitor", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV向钉钉智能硬件同步授权企业的访问预约记录
     * @param EditvisitorOapiSmartdeviceVisitorRequest $request
     * @return EditvisitorOapiSmartdeviceVisitorResponse
     */
    public function editvisitorOapiSmartdeviceVisitor($request){
        $runtime = new RuntimeOptions([]);
        return $this->editvisitorOapiSmartdeviceVisitorEx($request, $runtime);
    }

    /**
     * Description: ISV向钉钉智能硬件同步授权企业的访问预约记录
     * @param EditvisitorOapiSmartdeviceVisitorRequest $request
     * @param RuntimeOptions $runtime
     * @return EditvisitorOapiSmartdeviceVisitorResponse
     */
    public function editvisitorOapiSmartdeviceVisitorEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return EditvisitorOapiSmartdeviceVisitorResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/visitor/editvisitor", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口用于根据字段名和用户id获取钉钉智能考勤报表的假期数据，其中包含了一定时间段内报表假期列的所有数据，由于假期列是一个动态列，因此需要根据假期名称获取数据，可以供指定的ISV进行使用
     * @param GetleavetimebynamesOapiAttendanceRequest $request
     * @return GetleavetimebynamesOapiAttendanceResponse
     */
    public function getleavetimebynamesOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getleavetimebynamesOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 该接口用于根据字段名和用户id获取钉钉智能考勤报表的假期数据，其中包含了一定时间段内报表假期列的所有数据，由于假期列是一个动态列，因此需要根据假期名称获取数据，可以供指定的ISV进行使用
     * @param GetleavetimebynamesOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetleavetimebynamesOapiAttendanceResponse
     */
    public function getleavetimebynamesOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetleavetimebynamesOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getleavetimebynames", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取行业通讯录的企业信息
     * @param GetOapiIndustryOrganizationRequest $request
     * @return GetOapiIndustryOrganizationResponse
     */
    public function getOapiIndustryOrganization($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiIndustryOrganizationEx($request, $runtime);
    }

    /**
     * Description: 获取行业通讯录的企业信息
     * @param GetOapiIndustryOrganizationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiIndustryOrganizationResponse
     */
    public function getOapiIndustryOrganizationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiIndustryOrganizationResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/organization/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取群入群二维码邀请链接
     * @param GetOapiChatQrcodeRequest $request
     * @return GetOapiChatQrcodeResponse
     */
    public function getOapiChatQrcode($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiChatQrcodeEx($request, $runtime);
    }

    /**
     * Description: 获取群入群二维码邀请链接
     * @param GetOapiChatQrcodeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiChatQrcodeResponse
     */
    public function getOapiChatQrcodeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiChatQrcodeResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/qrcode/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给蚂蚁 DeepInsight 调用机器人 AT 人的专属接口，基于开放平台自定义群机器人接口二次封装，DeepInisght 传入蚂蚁 DI 账号信息使用@具体人的能力
     * @param GrouprobotOapiBipaasNotifyRequest $request
     * @return GrouprobotOapiBipaasNotifyResponse
     */
    public function grouprobotOapiBipaasNotify($request){
        $runtime = new RuntimeOptions([]);
        return $this->grouprobotOapiBipaasNotifyEx($request, $runtime);
    }

    /**
     * Description: 给蚂蚁 DeepInsight 调用机器人 AT 人的专属接口，基于开放平台自定义群机器人接口二次封装，DeepInisght 传入蚂蚁 DI 账号信息使用@具体人的能力
     * @param GrouprobotOapiBipaasNotifyRequest $request
     * @param RuntimeOptions $runtime
     * @return GrouprobotOapiBipaasNotifyResponse
     */
    public function grouprobotOapiBipaasNotifyEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GrouprobotOapiBipaasNotifyResponse::fromMap($this->doRequestOApi("POST", "/topapi/bipaas/notify/grouprobot", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 调用接口写入数据到企业下某办公应用表单
     * @param AddOapiSmartappFormInstanceRequest $request
     * @return AddOapiSmartappFormInstanceResponse
     */
    public function addOapiSmartappFormInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiSmartappFormInstanceEx($request, $runtime);
    }

    /**
     * Description: 调用接口写入数据到企业下某办公应用表单
     * @param AddOapiSmartappFormInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiSmartappFormInstanceResponse
     */
    public function addOapiSmartappFormInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiSmartappFormInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartapp/form/instance/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: isv需要审批单实例信息排查自定义打印业务的bug问题，审批方提供去敏的数据查询接口，isv每日对单个企业的单个模板每日限制调用次数。
     * @param GetOapiProcessPrinterInstanceRequest $request
     * @return GetOapiProcessPrinterInstanceResponse
     */
    public function getOapiProcessPrinterInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiProcessPrinterInstanceEx($request, $runtime);
    }

    /**
     * Description: isv需要审批单实例信息排查自定义打印业务的bug问题，审批方提供去敏的数据查询接口，isv每日对单个企业的单个模板每日限制调用次数。
     * @param GetOapiProcessPrinterInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiProcessPrinterInstanceResponse
     */
    public function getOapiProcessPrinterInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiProcessPrinterInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/printer/instance/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 完成衣服
     * @param FinishOapiRhinoMosExecClothesRequest $request
     * @return FinishOapiRhinoMosExecClothesResponse
     */
    public function finishOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->finishOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 完成衣服
     * @param FinishOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return FinishOapiRhinoMosExecClothesResponse
     */
    public function finishOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FinishOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/finish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 取消完成衣服
     * @param UnfinishOapiRhinoMosExecClothesRequest $request
     * @return UnfinishOapiRhinoMosExecClothesResponse
     */
    public function unfinishOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->unfinishOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 取消完成衣服
     * @param UnfinishOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return UnfinishOapiRhinoMosExecClothesResponse
     */
    public function unfinishOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnfinishOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/unfinish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 绑定追踪记录
     * @param BindOapiRhinoMosExecTrackRequest $request
     * @return BindOapiRhinoMosExecTrackResponse
     */
    public function bindOapiRhinoMosExecTrack($request){
        $runtime = new RuntimeOptions([]);
        return $this->bindOapiRhinoMosExecTrackEx($request, $runtime);
    }

    /**
     * Description: 绑定追踪记录
     * @param BindOapiRhinoMosExecTrackRequest $request
     * @param RuntimeOptions $runtime
     * @return BindOapiRhinoMosExecTrackResponse
     */
    public function bindOapiRhinoMosExecTrackEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BindOapiRhinoMosExecTrackResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/track/bind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取衣服各细码数量
     * @param CountOapiRhinoMosExecClothesSizeRequest $request
     * @return CountOapiRhinoMosExecClothesSizeResponse
     */
    public function countOapiRhinoMosExecClothesSize($request){
        $runtime = new RuntimeOptions([]);
        return $this->countOapiRhinoMosExecClothesSizeEx($request, $runtime);
    }

    /**
     * Description: 获取衣服各细码数量
     * @param CountOapiRhinoMosExecClothesSizeRequest $request
     * @param RuntimeOptions $runtime
     * @return CountOapiRhinoMosExecClothesSizeResponse
     */
    public function countOapiRhinoMosExecClothesSizeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CountOapiRhinoMosExecClothesSizeResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/size/count", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 小蜜isv修改机器人名字头像接口。(接口只给小蜜用，机器人应用会白名单处理)
     * @param UpdateorgbotCorpChatbotRequest $request
     * @return UpdateorgbotCorpChatbotResponse
     */
    public function updateorgbotCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateorgbotCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: 小蜜isv修改机器人名字头像接口。(接口只给小蜜用，机器人应用会白名单处理)
     * @param UpdateorgbotCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateorgbotCorpChatbotResponse
     */
    public function updateorgbotCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateorgbotCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.updateorgbot", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 自定义机器人发送消息
     * @param SendOapiRobotRequest $request
     * @return SendOapiRobotResponse
     */
    public function sendOapiRobot($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiRobotEx($request, $runtime);
    }

    /**
     * Description: 自定义机器人发送消息
     * @param SendOapiRobotRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiRobotResponse
     */
    public function sendOapiRobotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiRobotResponse::fromMap($this->doRequestOApi("POST", "/robot/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 小蜜isv查询给企业创建的机器人接口。(接口只给小蜜用，机器人应用会白名单处理)
     * @param ListorgbotCorpChatbotRequest $request
     * @return ListorgbotCorpChatbotResponse
     */
    public function listorgbotCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->listorgbotCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: 小蜜isv查询给企业创建的机器人接口。(接口只给小蜜用，机器人应用会白名单处理)
     * @param ListorgbotCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return ListorgbotCorpChatbotResponse
     */
    public function listorgbotCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListorgbotCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.listorgbot", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 行业通讯录获取部门信息接口
     * @param GetOapiIndustryDepartmentRequest $request
     * @return GetOapiIndustryDepartmentResponse
     */
    public function getOapiIndustryDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiIndustryDepartmentEx($request, $runtime);
    }

    /**
     * Description: 行业通讯录获取部门信息接口
     * @param GetOapiIndustryDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiIndustryDepartmentResponse
     */
    public function getOapiIndustryDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiIndustryDepartmentResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/department/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门下的人员列表信息
     * @param ListOapiIndustryUserRequest $request
     * @return ListOapiIndustryUserResponse
     */
    public function listOapiIndustryUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiIndustryUserEx($request, $runtime);
    }

    /**
     * Description: 获取部门下的人员列表信息
     * @param ListOapiIndustryUserRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiIndustryUserResponse
     */
    public function listOapiIndustryUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiIndustryUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/user/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取行业部门列表接口
     * @param ListOapiIndustryDepartmentRequest $request
     * @return ListOapiIndustryDepartmentResponse
     */
    public function listOapiIndustryDepartment($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiIndustryDepartmentEx($request, $runtime);
    }

    /**
     * Description: 获取行业部门列表接口
     * @param ListOapiIndustryDepartmentRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiIndustryDepartmentResponse
     */
    public function listOapiIndustryDepartmentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiIndustryDepartmentResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/department/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门用户详情
     * @param GetOapiIndustryUserRequest $request
     * @return GetOapiIndustryUserResponse
     */
    public function getOapiIndustryUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiIndustryUserEx($request, $runtime);
    }

    /**
     * Description: 获取部门用户详情
     * @param GetOapiIndustryUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiIndustryUserResponse
     */
    public function getOapiIndustryUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiIndustryUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/user/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ding任务创建。不过会有一些限制，只能发送文本任务，不能设置抄送人，只能有一个任务执行人。
     * @param CreateOapiDingTaskRequest $request
     * @return CreateOapiDingTaskResponse
     */
    public function createOapiDingTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiDingTaskEx($request, $runtime);
    }

    /**
     * Description: ding任务创建。不过会有一些限制，只能发送文本任务，不能设置抄送人，只能有一个任务执行人。
     * @param CreateOapiDingTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiDingTaskResponse
     */
    public function createOapiDingTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiDingTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/ding/task/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开始课程，一般由老师点击上课发起，进行课程交互创建并发起，例如直播上课场景会创建直播内容，返回相关信息供前端唤起直播端
     * @param StartOapiEduCourseRequest $request
     * @return StartOapiEduCourseResponse
     */
    public function startOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->startOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 开始课程，一般由老师点击上课发起，进行课程交互创建并发起，例如直播上课场景会创建直播内容，返回相关信息供前端唤起直播端
     * @param StartOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return StartOapiEduCourseResponse
     */
    public function startOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StartOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/start", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口可以把企业员工的待办事项导入到钉钉日历并在钉钉日历中展示, 支持任务, 会议,审批,普通日程等.
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param CreateOapiCalendarRequest $request
     * @return CreateOapiCalendarResponse
     */
    public function createOapiCalendar($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCalendarEx($request, $runtime);
    }

    /**
     * Description: 通过此接口可以把企业员工的待办事项导入到钉钉日历并在钉钉日历中展示, 支持任务, 会议,审批,普通日程等.
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param CreateOapiCalendarRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCalendarResponse
     */
    public function createOapiCalendarEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCalendarResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建课程
     * @param CreateOapiEduCourseRequest $request
     * @return CreateOapiEduCourseResponse
     */
    public function createOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 创建课程
     * @param CreateOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiEduCourseResponse
     */
    public function createOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口发DING通知给企业内部员工, 支持短信DING和应用内DING. 
     * 该接口正在灰度内测中, 暂不对外开放
     * @param CreateOapiDingRequest $request
     * @return CreateOapiDingResponse
     */
    public function createOapiDing($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiDingEx($request, $runtime);
    }

    /**
     * Description: 通过此接口发DING通知给企业内部员工, 支持短信DING和应用内DING. 
     * 该接口正在灰度内测中, 暂不对外开放
     * @param CreateOapiDingRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiDingResponse
     */
    public function createOapiDingEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiDingResponse::fromMap($this->doRequestOApi("POST", "/topapi/ding/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 移除课程参与方
     * @param RemoveOapiEduCourseParticipantRequest $request
     * @return RemoveOapiEduCourseParticipantResponse
     */
    public function removeOapiEduCourseParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiEduCourseParticipantEx($request, $runtime);
    }

    /**
     * Description: 移除课程参与方
     * @param RemoveOapiEduCourseParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiEduCourseParticipantResponse
     */
    public function removeOapiEduCourseParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiEduCourseParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/participant/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加课程参与方
     * @param AddOapiEduCourseParticipantRequest $request
     * @return AddOapiEduCourseParticipantResponse
     */
    public function addOapiEduCourseParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiEduCourseParticipantEx($request, $runtime);
    }

    /**
     * Description: 添加课程参与方
     * @param AddOapiEduCourseParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiEduCourseParticipantResponse
     */
    public function addOapiEduCourseParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiEduCourseParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/participant/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 增加这个api的目的是为了给外部企业提供实时的考勤数据变更，提升外部企业的考勤统计数据的准确度。外部企业只能通过入参获取数据，属于只读接口。
     * @param GetAttendUpdateDataOapiAttendanceRequest $request
     * @return GetAttendUpdateDataOapiAttendanceResponse
     */
    public function getAttendUpdateDataOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getAttendUpdateDataOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 增加这个api的目的是为了给外部企业提供实时的考勤数据变更，提升外部企业的考勤统计数据的准确度。外部企业只能通过入参获取数据，属于只读接口。
     * @param GetAttendUpdateDataOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetAttendUpdateDataOapiAttendanceResponse
     */
    public function getAttendUpdateDataOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetAttendUpdateDataOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getAttendUpdateData", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取课程详情
     * @param GetOapiEduCourseRequest $request
     * @return GetOapiEduCourseResponse
     */
    public function getOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 获取课程详情
     * @param GetOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduCourseResponse
     */
    public function getOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除课程
     * @param DeleteOapiEduCourseRequest $request
     * @return DeleteOapiEduCourseResponse
     */
    public function deleteOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 删除课程
     * @param DeleteOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiEduCourseResponse
     */
    public function deleteOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询以教育局粒度统计的数据
     * @param GetOapiEduMainDataRequest $request
     * @return GetOapiEduMainDataResponse
     */
    public function getOapiEduMainData($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduMainDataEx($request, $runtime);
    }

    /**
     * Description: 查询以教育局粒度统计的数据
     * @param GetOapiEduMainDataRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduMainDataResponse
     */
    public function getOapiEduMainDataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduMainDataResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/main/data/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 结束课程，本次课程完结接口，调用方需主动调用本接口进行课程完结动作
     * @param EndOapiEduCourseRequest $request
     * @return EndOapiEduCourseResponse
     */
    public function endOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->endOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 结束课程，本次课程完结接口，调用方需主动调用本接口进行课程完结动作
     * @param EndOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return EndOapiEduCourseResponse
     */
    public function endOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return EndOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/end", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询以学校粒度维度的统计数据
     * @param GetOapiEduSubDataRequest $request
     * @return GetOapiEduSubDataResponse
     */
    public function getOapiEduSubData($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduSubDataEx($request, $runtime);
    }

    /**
     * Description: 查询以学校粒度维度的统计数据
     * @param GetOapiEduSubDataRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduSubDataResponse
     */
    public function getOapiEduSubDataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduSubDataResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/sub/data/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 加入课程，一般由前端学生点击上课加入课堂，返回相应课堂交互信息，例如直播场景下返回加入url等信息
     * @param JoinOapiEduCourseRequest $request
     * @return JoinOapiEduCourseResponse
     */
    public function joinOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->joinOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 加入课程，一般由前端学生点击上课加入课堂，返回相应课堂交互信息，例如直播场景下返回加入url等信息
     * @param JoinOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return JoinOapiEduCourseResponse
     */
    public function joinOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return JoinOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/join", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 小蜜isv查询给企业创建的机器人接口。(接口只给小蜜用，机器人应用会白名单处理)
     * @param ListorgbotbytypeandbottypeCorpChatbotRequest $request
     * @return ListorgbotbytypeandbottypeCorpChatbotResponse
     */
    public function listorgbotbytypeandbottypeCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->listorgbotbytypeandbottypeCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: 小蜜isv查询给企业创建的机器人接口。(接口只给小蜜用，机器人应用会白名单处理)
     * @param ListorgbotbytypeandbottypeCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return ListorgbotbytypeandbottypeCorpChatbotResponse
     */
    public function listorgbotbytypeandbottypeCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListorgbotbytypeandbottypeCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.listorgbotbytypeandbottype", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询学校类型维度的统计数据
     * @param GetOapiEduTypeDataRequest $request
     * @return GetOapiEduTypeDataResponse
     */
    public function getOapiEduTypeData($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduTypeDataEx($request, $runtime);
    }

    /**
     * Description: 查询学校类型维度的统计数据
     * @param GetOapiEduTypeDataRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduTypeDataResponse
     */
    public function getOapiEduTypeDataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduTypeDataResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/type/data/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改课程
     * @param UpdateOapiEduCourseRequest $request
     * @return UpdateOapiEduCourseResponse
     */
    public function updateOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 修改课程
     * @param UpdateOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiEduCourseResponse
     */
    public function updateOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按天查询企业考勤排班全量信息，使用分页功能
     * @param ListscheduleSmartworkAttendsRequest $request
     * @return ListscheduleSmartworkAttendsResponse
     */
    public function listscheduleSmartworkAttends($request){
        $runtime = new RuntimeOptions([]);
        return $this->listscheduleSmartworkAttendsEx($request, $runtime);
    }

    /**
     * Description: 按天查询企业考勤排班全量信息，使用分页功能
     * @param ListscheduleSmartworkAttendsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListscheduleSmartworkAttendsResponse
     */
    public function listscheduleSmartworkAttendsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListscheduleSmartworkAttendsResponse::fromMap($this->doRequest("dingtalk.smartwork.attends.listschedule", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业安装微应用后，ISV可通过本接口给企业上架一个企业机器人。目前灰度几个ISV，机器人应用会白名单处理
     * @param InstallOapiChatbotRequest $request
     * @return InstallOapiChatbotResponse
     */
    public function installOapiChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->installOapiChatbotEx($request, $runtime);
    }

    /**
     * Description: 企业安装微应用后，ISV可通过本接口给企业上架一个企业机器人。目前灰度几个ISV，机器人应用会白名单处理
     * @param InstallOapiChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return InstallOapiChatbotResponse
     */
    public function installOapiChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InstallOapiChatbotResponse::fromMap($this->doRequestOApi("POST", "/topapi/chatbot/install", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取公司自身的考勤组列表详情信息
     * @param GetsimplegroupsSmartworkAttendsRequest $request
     * @return GetsimplegroupsSmartworkAttendsResponse
     */
    public function getsimplegroupsSmartworkAttends($request){
        $runtime = new RuntimeOptions([]);
        return $this->getsimplegroupsSmartworkAttendsEx($request, $runtime);
    }

    /**
     * Description: 获取公司自身的考勤组列表详情信息
     * @param GetsimplegroupsSmartworkAttendsRequest $request
     * @param RuntimeOptions $runtime
     * @return GetsimplegroupsSmartworkAttendsResponse
     */
    public function getsimplegroupsSmartworkAttendsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetsimplegroupsSmartworkAttendsResponse::fromMap($this->doRequest("dingtalk.smartwork.attends.getsimplegroups", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉教育生态主数据-学科实例的更新
     * @param UpdateOapiEduSubjectRequest $request
     * @return UpdateOapiEduSubjectResponse
     */
    public function updateOapiEduSubject($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiEduSubjectEx($request, $runtime);
    }

    /**
     * Description: 钉钉教育生态主数据-学科实例的更新
     * @param UpdateOapiEduSubjectRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiEduSubjectResponse
     */
    public function updateOapiEduSubjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiEduSubjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/subject/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉教育生态主数据-学科实例的创建
     * @param CreateOapiEduSubjectRequest $request
     * @return CreateOapiEduSubjectResponse
     */
    public function createOapiEduSubject($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiEduSubjectEx($request, $runtime);
    }

    /**
     * Description: 钉钉教育生态主数据-学科实例的创建
     * @param CreateOapiEduSubjectRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiEduSubjectResponse
     */
    public function createOapiEduSubjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiEduSubjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/subject/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉教育生态主数据-学科实例的删除
     * @param DeleteOapiEduSubjectRequest $request
     * @return DeleteOapiEduSubjectResponse
     */
    public function deleteOapiEduSubject($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiEduSubjectEx($request, $runtime);
    }

    /**
     * Description: 钉钉教育生态主数据-学科实例的删除
     * @param DeleteOapiEduSubjectRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiEduSubjectResponse
     */
    public function deleteOapiEduSubjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiEduSubjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/subject/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置群成员的群昵称
     * @param UpdategroupnickOapiChatRequest $request
     * @return UpdategroupnickOapiChatResponse
     */
    public function updategroupnickOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->updategroupnickOapiChatEx($request, $runtime);
    }

    /**
     * Description: 设置群成员的群昵称
     * @param UpdategroupnickOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdategroupnickOapiChatResponse
     */
    public function updategroupnickOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdategroupnickOapiChatResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/updategroupnick", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 输入一段文本，得到翻译指定语言后的译文，支持多种语言的互译
     * @param TranslateOapiAiMtRequest $request
     * @return TranslateOapiAiMtResponse
     */
    public function translateOapiAiMt($request){
        $runtime = new RuntimeOptions([]);
        return $this->translateOapiAiMtEx($request, $runtime);
    }

    /**
     * Description: 输入一段文本，得到翻译指定语言后的译文，支持多种语言的互译
     * @param TranslateOapiAiMtRequest $request
     * @param RuntimeOptions $runtime
     * @return TranslateOapiAiMtResponse
     */
    public function translateOapiAiMtEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TranslateOapiAiMtResponse::fromMap($this->doRequestOApi("POST", "/topapi/ai/mt/translate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业更新已经发送到用户的任务完成状态
     * @param UpdateOapiDingTaskStatusRequest $request
     * @return UpdateOapiDingTaskStatusResponse
     */
    public function updateOapiDingTaskStatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiDingTaskStatusEx($request, $runtime);
    }

    /**
     * Description: 企业更新已经发送到用户的任务完成状态
     * @param UpdateOapiDingTaskStatusRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiDingTaskStatusResponse
     */
    public function updateOapiDingTaskStatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiDingTaskStatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/ding/task/status/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据bizUK批量查询数据是否导入成功
     * @param CheckOapiSmartworkHrmMasterRequest $request
     * @return CheckOapiSmartworkHrmMasterResponse
     */
    public function checkOapiSmartworkHrmMaster($request){
        $runtime = new RuntimeOptions([]);
        return $this->checkOapiSmartworkHrmMasterEx($request, $runtime);
    }

    /**
     * Description: 根据bizUK批量查询数据是否导入成功
     * @param CheckOapiSmartworkHrmMasterRequest $request
     * @param RuntimeOptions $runtime
     * @return CheckOapiSmartworkHrmMasterResponse
     */
    public function checkOapiSmartworkHrmMasterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CheckOapiSmartworkHrmMasterResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/master/check", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事主数据服务,提供给ISV删除的接口
     * @param DeleteOapiSmartworkHrmMasterRequest $request
     * @return DeleteOapiSmartworkHrmMasterResponse
     */
    public function deleteOapiSmartworkHrmMaster($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiSmartworkHrmMasterEx($request, $runtime);
    }

    /**
     * Description: 智能人事主数据服务,提供给ISV删除的接口
     * @param DeleteOapiSmartworkHrmMasterRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiSmartworkHrmMasterResponse
     */
    public function deleteOapiSmartworkHrmMasterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiSmartworkHrmMasterResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/master/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 增加这个api的目的是为了给外部企业提供考勤数据变更，提升外部企业的考勤统计数据的准确度。外部企业只能通过入参获取数据，属于只读接口。
     * 接口的入参是 查询用户corpId，userid以及查询日期，这些参数是我们开放平台推送给用户的变更。
     * 返回的结果是三个list结果：分别是打卡流水记录 打卡结果 以及 审批列表 都是被查询用户在查询日期内的数据。
     * @param GetupdatedataOapiAttendanceRequest $request
     * @return GetupdatedataOapiAttendanceResponse
     */
    public function getupdatedataOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getupdatedataOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 增加这个api的目的是为了给外部企业提供考勤数据变更，提升外部企业的考勤统计数据的准确度。外部企业只能通过入参获取数据，属于只读接口。
     * 接口的入参是 查询用户corpId，userid以及查询日期，这些参数是我们开放平台推送给用户的变更。
     * 返回的结果是三个list结果：分别是打卡流水记录 打卡结果 以及 审批列表 都是被查询用户在查询日期内的数据。
     * @param GetupdatedataOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetupdatedataOapiAttendanceResponse
     */
    public function getupdatedataOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetupdatedataOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getupdatedata", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发送文件给指定用户
     * @param Add_to_single_chatOapiCspaceRequest $request
     * @return Add_to_single_chatOapiCspaceResponse
     */
    public function add_to_single_chatOapiCspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->add_to_single_chatOapiCspaceEx($request, $runtime);
    }

    /**
     * Description: 发送文件给指定用户
     * @param Add_to_single_chatOapiCspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return Add_to_single_chatOapiCspaceResponse
     */
    public function add_to_single_chatOapiCspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Add_to_single_chatOapiCspaceResponse::fromMap($this->doRequestOApi("POST", "/cspace/add_to_single_chat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询人脸实人认证的结果
     * @param GetOapiSmartdeviceFacelevelRequest $request
     * @return GetOapiSmartdeviceFacelevelResponse
     */
    public function getOapiSmartdeviceFacelevel($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiSmartdeviceFacelevelEx($request, $runtime);
    }

    /**
     * Description: 查询人脸实人认证的结果
     * @param GetOapiSmartdeviceFacelevelRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiSmartdeviceFacelevelResponse
     */
    public function getOapiSmartdeviceFacelevelEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiSmartdeviceFacelevelResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facelevel/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增文件到用户钉盘
     * @param AddOapiCspaceRequest $request
     * @return AddOapiCspaceResponse
     */
    public function addOapiCspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiCspaceEx($request, $runtime);
    }

    /**
     * Description: 新增文件到用户钉盘
     * @param AddOapiCspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiCspaceResponse
     */
    public function addOapiCspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiCspaceResponse::fromMap($this->doRequestOApi("GET", "/cspace/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业下的自定义空间
     * @param Get_custom_spaceOapiCspaceRequest $request
     * @return Get_custom_spaceOapiCspaceResponse
     */
    public function get_custom_spaceOapiCspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_custom_spaceOapiCspaceEx($request, $runtime);
    }

    /**
     * Description: 获取企业下的自定义空间
     * @param Get_custom_spaceOapiCspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_custom_spaceOapiCspaceResponse
     */
    public function get_custom_spaceOapiCspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_custom_spaceOapiCspaceResponse::fromMap($this->doRequestOApi("GET", "/cspace/get_custom_space", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 授权用户访问企业下的自定义空间
     * @param Grant_custom_spaceOapiCspaceRequest $request
     * @return Grant_custom_spaceOapiCspaceResponse
     */
    public function grant_custom_spaceOapiCspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->grant_custom_spaceOapiCspaceEx($request, $runtime);
    }

    /**
     * Description: 授权用户访问企业下的自定义空间
     * @param Grant_custom_spaceOapiCspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return Grant_custom_spaceOapiCspaceResponse
     */
    public function grant_custom_spaceOapiCspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Grant_custom_spaceOapiCspaceResponse::fromMap($this->doRequestOApi("GET", "/cspace/grant_custom_space", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建关联组织的功能，必须确保来源是灵活用工的微应用，为了确保这个来源是符合要求，提供灵活用工的微应用一个单独的开放接口来申请token，为下一个创建关联组织校验使用
     * @param ApplytokenOapiSmartworkHrmFlexibleRequest $request
     * @return ApplytokenOapiSmartworkHrmFlexibleResponse
     */
    public function applytokenOapiSmartworkHrmFlexible($request){
        $runtime = new RuntimeOptions([]);
        return $this->applytokenOapiSmartworkHrmFlexibleEx($request, $runtime);
    }

    /**
     * Description: 创建关联组织的功能，必须确保来源是灵活用工的微应用，为了确保这个来源是符合要求，提供灵活用工的微应用一个单独的开放接口来申请token，为下一个创建关联组织校验使用
     * @param ApplytokenOapiSmartworkHrmFlexibleRequest $request
     * @param RuntimeOptions $runtime
     * @return ApplytokenOapiSmartworkHrmFlexibleResponse
     */
    public function applytokenOapiSmartworkHrmFlexibleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ApplytokenOapiSmartworkHrmFlexibleResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/flexible/applytoken", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开启文件上传事务
     * @param TransactionOapiFileUploadRequest $request
     * @return TransactionOapiFileUploadResponse
     */
    public function transactionOapiFileUpload($request){
        $runtime = new RuntimeOptions([]);
        return $this->transactionOapiFileUploadEx($request, $runtime);
    }

    /**
     * Description: 开启文件上传事务
     * @param TransactionOapiFileUploadRequest $request
     * @param RuntimeOptions $runtime
     * @return TransactionOapiFileUploadResponse
     */
    public function transactionOapiFileUploadEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TransactionOapiFileUploadResponse::fromMap($this->doRequestOApi("GET", "/file/upload/transaction", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新考勤组成员，新增/删除人员，部门，或无需考勤人员
     * @param UpdateOapiAttendanceGroupMemberRequest $request
     * @return UpdateOapiAttendanceGroupMemberResponse
     */
    public function updateOapiAttendanceGroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiAttendanceGroupMemberEx($request, $runtime);
    }

    /**
     * Description: 更新考勤组成员，新增/删除人员，部门，或无需考勤人员
     * @param UpdateOapiAttendanceGroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiAttendanceGroupMemberResponse
     */
    public function updateOapiAttendanceGroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiAttendanceGroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/member/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据任务来源source和sourceId获取任务详情
     * @param GetbysourceidOapiTdpTaskBasicRequest $request
     * @return GetbysourceidOapiTdpTaskBasicResponse
     */
    public function getbysourceidOapiTdpTaskBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbysourceidOapiTdpTaskBasicEx($request, $runtime);
    }

    /**
     * Description: 根据任务来源source和sourceId获取任务详情
     * @param GetbysourceidOapiTdpTaskBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbysourceidOapiTdpTaskBasicResponse
     */
    public function getbysourceidOapiTdpTaskBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetbysourceidOapiTdpTaskBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/task/basic/getbysourceid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询一批人一段时间的排班
     * @param ListbyusersOapiAttendanceScheduleRequest $request
     * @return ListbyusersOapiAttendanceScheduleResponse
     */
    public function listbyusersOapiAttendanceSchedule($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyusersOapiAttendanceScheduleEx($request, $runtime);
    }

    /**
     * Description: 查询一批人一段时间的排班
     * @param ListbyusersOapiAttendanceScheduleRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyusersOapiAttendanceScheduleResponse
     */
    public function listbyusersOapiAttendanceScheduleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyusersOapiAttendanceScheduleResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/schedule/listbyusers", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 传入id，获取在考勤组中的人
     * @param ListbyidsOapiAttendanceGroupMemberRequest $request
     * @return ListbyidsOapiAttendanceGroupMemberResponse
     */
    public function listbyidsOapiAttendanceGroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyidsOapiAttendanceGroupMemberEx($request, $runtime);
    }

    /**
     * Description: 传入id，获取在考勤组中的人
     * @param ListbyidsOapiAttendanceGroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyidsOapiAttendanceGroupMemberResponse
     */
    public function listbyidsOapiAttendanceGroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyidsOapiAttendanceGroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/member/listbyids", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分批次获取考勤组成员信息
     * @param ListOapiAttendanceGroupMemberRequest $request
     * @return ListOapiAttendanceGroupMemberResponse
     */
    public function listOapiAttendanceGroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiAttendanceGroupMemberEx($request, $runtime);
    }

    /**
     * Description: 分批次获取考勤组成员信息
     * @param ListOapiAttendanceGroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiAttendanceGroupMemberResponse
     */
    public function listOapiAttendanceGroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiAttendanceGroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/member/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按id查询考勤组
     * @param QueryOapiAttendanceGroupRequest $request
     * @return QueryOapiAttendanceGroupResponse
     */
    public function queryOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 按id查询考勤组
     * @param QueryOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceGroupResponse
     */
    public function queryOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据任务来源source和sourceId获取任务详情
     * @param GetbysourceidOapiWorkspaceTaskRequest $request
     * @return GetbysourceidOapiWorkspaceTaskResponse
     */
    public function getbysourceidOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbysourceidOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 根据任务来源source和sourceId获取任务详情
     * @param GetbysourceidOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbysourceidOapiWorkspaceTaskResponse
     */
    public function getbysourceidOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetbysourceidOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/getbysourceid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改卡点的设置信息
     * @param UpdatepunchesOapiAttendanceShiftRequest $request
     * @return UpdatepunchesOapiAttendanceShiftResponse
     */
    public function updatepunchesOapiAttendanceShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->updatepunchesOapiAttendanceShiftEx($request, $runtime);
    }

    /**
     * Description: 修改卡点的设置信息
     * @param UpdatepunchesOapiAttendanceShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdatepunchesOapiAttendanceShiftResponse
     */
    public function updatepunchesOapiAttendanceShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdatepunchesOapiAttendanceShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/updatepunches", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过chatId和orgId获取对应的会话Idcid
     * @param CidOapiChatGetRequest $request
     * @return CidOapiChatGetResponse
     */
    public function cidOapiChatGet($request){
        $runtime = new RuntimeOptions([]);
        return $this->cidOapiChatGetEx($request, $runtime);
    }

    /**
     * Description: 通过chatId和orgId获取对应的会话Idcid
     * @param CidOapiChatGetRequest $request
     * @param RuntimeOptions $runtime
     * @return CidOapiChatGetResponse
     */
    public function cidOapiChatGetEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CidOapiChatGetResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/get/cid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给蚂蚁DeepInsight的Agent二次封装，支持对内部数据源的命令下发
     * @param AgentOapiBipaasDiRequest $request
     * @return AgentOapiBipaasDiResponse
     */
    public function agentOapiBipaasDi($request){
        $runtime = new RuntimeOptions([]);
        return $this->agentOapiBipaasDiEx($request, $runtime);
    }

    /**
     * Description: 给蚂蚁DeepInsight的Agent二次封装，支持对内部数据源的命令下发
     * @param AgentOapiBipaasDiRequest $request
     * @param RuntimeOptions $runtime
     * @return AgentOapiBipaasDiResponse
     */
    public function agentOapiBipaasDiEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AgentOapiBipaasDiResponse::fromMap($this->doRequestOApi("POST", "/topapi/bipaas/di/agent", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可使用该接口来设置工作台首页地址，效果类似于在oa管理后台手动设置工作台地址
     * @param SetoaurlOapiOrgRequest $request
     * @return SetoaurlOapiOrgResponse
     */
    public function setoaurlOapiOrg($request){
        $runtime = new RuntimeOptions([]);
        return $this->setoaurlOapiOrgEx($request, $runtime);
    }

    /**
     * Description: 企业可使用该接口来设置工作台首页地址，效果类似于在oa管理后台手动设置工作台地址
     * @param SetoaurlOapiOrgRequest $request
     * @param RuntimeOptions $runtime
     * @return SetoaurlOapiOrgResponse
     */
    public function setoaurlOapiOrgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetoaurlOapiOrgResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/setoaurl", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给蚂蚁 DeepInsight 查询对应租户在智能参谋的菜单数据
     * @param List_treeOapiBipaasMenuRequest $request
     * @return List_treeOapiBipaasMenuResponse
     */
    public function list_treeOapiBipaasMenu($request){
        $runtime = new RuntimeOptions([]);
        return $this->list_treeOapiBipaasMenuEx($request, $runtime);
    }

    /**
     * Description: 提供给蚂蚁 DeepInsight 查询对应租户在智能参谋的菜单数据
     * @param List_treeOapiBipaasMenuRequest $request
     * @param RuntimeOptions $runtime
     * @return List_treeOapiBipaasMenuResponse
     */
    public function list_treeOapiBipaasMenuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return List_treeOapiBipaasMenuResponse::fromMap($this->doRequestOApi("POST", "/topapi/bipaas/menu/list_tree", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询大客户各类群组创建情况统计数据
     * @param GetOapiKacDatavGroupRequest $request
     * @return GetOapiKacDatavGroupResponse
     */
    public function getOapiKacDatavGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacDatavGroupEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询大客户各类群组创建情况统计数据
     * @param GetOapiKacDatavGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacDatavGroupResponse
     */
    public function getOapiKacDatavGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacDatavGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/group/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除isv免费电话员工名单
     * @param RemoveuserlistOapiCallRequest $request
     * @return RemoveuserlistOapiCallResponse
     */
    public function removeuserlistOapiCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeuserlistOapiCallEx($request, $runtime);
    }

    /**
     * Description: 删除isv免费电话员工名单
     * @param RemoveuserlistOapiCallRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveuserlistOapiCallResponse
     */
    public function removeuserlistOapiCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveuserlistOapiCallResponse::fromMap($this->doRequestOApi("POST", "/topapi/call/removeuserlist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事业务，提供企业/ISV分页查询公司离职员工id列表
     * @param QuerydimissionOapiSmartworkHrmEmployeeRequest $request
     * @return QuerydimissionOapiSmartworkHrmEmployeeResponse
     */
    public function querydimissionOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->querydimissionOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事业务，提供企业/ISV分页查询公司离职员工id列表
     * @param QuerydimissionOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerydimissionOapiSmartworkHrmEmployeeResponse
     */
    public function querydimissionOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QuerydimissionOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/querydimission", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置isv发起免费电话的主叫白名单
     * @param SetuserlistOapiCallRequest $request
     * @return SetuserlistOapiCallResponse
     */
    public function setuserlistOapiCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->setuserlistOapiCallEx($request, $runtime);
    }

    /**
     * Description: 设置isv发起免费电话的主叫白名单
     * @param SetuserlistOapiCallRequest $request
     * @param RuntimeOptions $runtime
     * @return SetuserlistOapiCallResponse
     */
    public function setuserlistOapiCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetuserlistOapiCallResponse::fromMap($this->doRequestOApi("POST", "/topapi/call/setuserlist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据传入的staffId列表，批量查询员工的离职信息
     * @param ListdimissionOapiSmartworkHrmEmployeeRequest $request
     * @return ListdimissionOapiSmartworkHrmEmployeeResponse
     */
    public function listdimissionOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->listdimissionOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 根据传入的staffId列表，批量查询员工的离职信息
     * @param ListdimissionOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListdimissionOapiSmartworkHrmEmployeeResponse
     */
    public function listdimissionOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListdimissionOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/listdimission", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 主叫方发起免费电话给授权企业下的授权范围内的人员
     * @param CalluserOapiCallRequest $request
     * @return CalluserOapiCallResponse
     */
    public function calluserOapiCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->calluserOapiCallEx($request, $runtime);
    }

    /**
     * Description: 主叫方发起免费电话给授权企业下的授权范围内的人员
     * @param CalluserOapiCallRequest $request
     * @param RuntimeOptions $runtime
     * @return CalluserOapiCallResponse
     */
    public function calluserOapiCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CalluserOapiCallResponse::fromMap($this->doRequestOApi("POST", "/topapi/call/calluser", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除ISV套件对应的企业下的可以主动调用接口发起免费电话的员工
     * @param GetuserlistOapiCallRequest $request
     * @return GetuserlistOapiCallResponse
     */
    public function getuserlistOapiCall($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserlistOapiCallEx($request, $runtime);
    }

    /**
     * Description: 删除ISV套件对应的企业下的可以主动调用接口发起免费电话的员工
     * @param GetuserlistOapiCallRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserlistOapiCallResponse
     */
    public function getuserlistOapiCallEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserlistOapiCallResponse::fromMap($this->doRequestOApi("POST", "/topapi/call/getuserlist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给天地会调用发短信，提醒用户激活钉钉
     * @param SendsmsOapiNewretailRequest $request
     * @return SendsmsOapiNewretailResponse
     */
    public function sendsmsOapiNewretail($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendsmsOapiNewretailEx($request, $runtime);
    }

    /**
     * Description: 提供给天地会调用发短信，提醒用户激活钉钉
     * @param SendsmsOapiNewretailRequest $request
     * @param RuntimeOptions $runtime
     * @return SendsmsOapiNewretailResponse
     */
    public function sendsmsOapiNewretailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendsmsOapiNewretailResponse::fromMap($this->doRequestOApi("POST", "/topapi/newretail/sendsms", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过企业的系统账号给企业员工发送消息
     * @param SendnotifyOapiCcoserviceEntranceRequest $request
     * @return SendnotifyOapiCcoserviceEntranceResponse
     */
    public function sendnotifyOapiCcoserviceEntrance($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendnotifyOapiCcoserviceEntranceEx($request, $runtime);
    }

    /**
     * Description: 通过企业的系统账号给企业员工发送消息
     * @param SendnotifyOapiCcoserviceEntranceRequest $request
     * @param RuntimeOptions $runtime
     * @return SendnotifyOapiCcoserviceEntranceResponse
     */
    public function sendnotifyOapiCcoserviceEntranceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendnotifyOapiCcoserviceEntranceResponse::fromMap($this->doRequestOApi("POST", "/topapi/ccoservice/entrance/sendnotify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取课程参与方列表
     * @param ListOapiEduCourseParticipantRequest $request
     * @return ListOapiEduCourseParticipantResponse
     */
    public function listOapiEduCourseParticipant($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduCourseParticipantEx($request, $runtime);
    }

    /**
     * Description: 获取课程参与方列表
     * @param ListOapiEduCourseParticipantRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduCourseParticipantResponse
     */
    public function listOapiEduCourseParticipantEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduCourseParticipantResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/participant/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取课程列表
     * @param ListOapiEduCourseRequest $request
     * @return ListOapiEduCourseResponse
     */
    public function listOapiEduCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduCourseEx($request, $runtime);
    }

    /**
     * Description: 获取课程列表
     * @param ListOapiEduCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduCourseResponse
     */
    public function listOapiEduCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/course/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改profile信息，开放 nick， extension， avatarMediaId
     * @param ModprofileOapiImpaasUserRequest $request
     * @return ModprofileOapiImpaasUserResponse
     */
    public function modprofileOapiImpaasUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->modprofileOapiImpaasUserEx($request, $runtime);
    }

    /**
     * Description: 修改profile信息，开放 nick， extension， avatarMediaId
     * @param ModprofileOapiImpaasUserRequest $request
     * @param RuntimeOptions $runtime
     * @return ModprofileOapiImpaasUserResponse
     */
    public function modprofileOapiImpaasUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModprofileOapiImpaasUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/user/modprofile", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事业务，企业/ISV根据员工id批量访问员工花名册信息
     * @param ListOapiSmartworkHrmEmployeeRequest $request
     * @return ListOapiSmartworkHrmEmployeeResponse
     */
    public function listOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事业务，企业/ISV根据员工id批量访问员工花名册信息
     * @param ListOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiSmartworkHrmEmployeeResponse
     */
    public function listOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉教育生态主数据-查询学科实例列表
     * @param ListOapiEduSubjectRequest $request
     * @return ListOapiEduSubjectResponse
     */
    public function listOapiEduSubject($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduSubjectEx($request, $runtime);
    }

    /**
     * Description: 钉钉教育生态主数据-查询学科实例列表
     * @param ListOapiEduSubjectRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduSubjectResponse
     */
    public function listOapiEduSubjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduSubjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/subject/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉教育生态主数据-查询学科实例（单个）
     * @param GetOapiEduSubjectRequest $request
     * @return GetOapiEduSubjectResponse
     */
    public function getOapiEduSubject($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduSubjectEx($request, $runtime);
    }

    /**
     * Description: 钉钉教育生态主数据-查询学科实例（单个）
     * @param GetOapiEduSubjectRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduSubjectResponse
     */
    public function getOapiEduSubjectEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduSubjectResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/subject/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业中角色下的员工列表
     * @param SimplelistCorpRoleRequest $request
     * @return SimplelistCorpRoleResponse
     */
    public function simplelistCorpRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->simplelistCorpRoleEx($request, $runtime);
    }

    /**
     * Description: 获取企业中角色下的员工列表
     * @param SimplelistCorpRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return SimplelistCorpRoleResponse
     */
    public function simplelistCorpRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SimplelistCorpRoleResponse::fromMap($this->doRequest("dingtalk.corp.role.simplelist", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取月对账结算数据下载地址
     * @param GetOapiAlitripBtripMonthbillUrlRequest $request
     * @return GetOapiAlitripBtripMonthbillUrlResponse
     */
    public function getOapiAlitripBtripMonthbillUrl($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAlitripBtripMonthbillUrlEx($request, $runtime);
    }

    /**
     * Description: 获取月对账结算数据下载地址
     * @param GetOapiAlitripBtripMonthbillUrlRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAlitripBtripMonthbillUrlResponse
     */
    public function getOapiAlitripBtripMonthbillUrlEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAlitripBtripMonthbillUrlResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/monthbill/url/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业角色列表
     * @param ListCorpRoleRequest $request
     * @return ListCorpRoleResponse
     */
    public function listCorpRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpRoleEx($request, $runtime);
    }

    /**
     * Description: 获取企业角色列表
     * @param ListCorpRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpRoleResponse
     */
    public function listCorpRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListCorpRoleResponse::fromMap($this->doRequest("dingtalk.corp.role.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取评论详情，包括评论人userid、评论内容、评论时间
     * @param ListOapiReportCommentRequest $request
     * @return ListOapiReportCommentResponse
     */
    public function listOapiReportComment($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiReportCommentEx($request, $runtime);
    }

    /**
     * Description: 分页获取评论详情，包括评论人userid、评论内容、评论时间
     * @param ListOapiReportCommentRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiReportCommentResponse
     */
    public function listOapiReportCommentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiReportCommentResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/comment/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取日志的分享人员列表
     * @param ListOapiReportReceiverRequest $request
     * @return ListOapiReportReceiverResponse
     */
    public function listOapiReportReceiver($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiReportReceiverEx($request, $runtime);
    }

    /**
     * Description: 获取日志的分享人员列表
     * @param ListOapiReportReceiverRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiReportReceiverResponse
     */
    public function listOapiReportReceiverEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiReportReceiverResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/receiver/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取日志相关人员列表，包括已读人员列表、评论人员列表、点赞人员列表
     * @param ListbytypeOapiReportStatisticsRequest $request
     * @return ListbytypeOapiReportStatisticsResponse
     */
    public function listbytypeOapiReportStatistics($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbytypeOapiReportStatisticsEx($request, $runtime);
    }

    /**
     * Description: 分页获取日志相关人员列表，包括已读人员列表、评论人员列表、点赞人员列表
     * @param ListbytypeOapiReportStatisticsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbytypeOapiReportStatisticsResponse
     */
    public function listbytypeOapiReportStatisticsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbytypeOapiReportStatisticsResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/statistics/listbytype", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 群中消息的撤回功能
     * @param RecallOapiChatMessageRequest $request
     * @return RecallOapiChatMessageResponse
     */
    public function recallOapiChatMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->recallOapiChatMessageEx($request, $runtime);
    }

    /**
     * Description: 群中消息的撤回功能
     * @param RecallOapiChatMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return RecallOapiChatMessageResponse
     */
    public function recallOapiChatMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecallOapiChatMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/message/recall", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 将智能参谋中正在编辑中的菜单进行发布
     * @param PublishOapiBipaasMenuRequest $request
     * @return PublishOapiBipaasMenuResponse
     */
    public function publishOapiBipaasMenu($request){
        $runtime = new RuntimeOptions([]);
        return $this->publishOapiBipaasMenuEx($request, $runtime);
    }

    /**
     * Description: 将智能参谋中正在编辑中的菜单进行发布
     * @param PublishOapiBipaasMenuRequest $request
     * @param RuntimeOptions $runtime
     * @return PublishOapiBipaasMenuResponse
     */
    public function publishOapiBipaasMenuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PublishOapiBipaasMenuResponse::fromMap($this->doRequestOApi("POST", "/topapi/bipaas/menu/publish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给DeepInsight的专用接口，用于将DeepInsight产生的报表关联到对应租户在智能参谋的菜单上
     * @param Add_reportOapiBipaasMenuRequest $request
     * @return Add_reportOapiBipaasMenuResponse
     */
    public function add_reportOapiBipaasMenu($request){
        $runtime = new RuntimeOptions([]);
        return $this->add_reportOapiBipaasMenuEx($request, $runtime);
    }

    /**
     * Description: 提供给DeepInsight的专用接口，用于将DeepInsight产生的报表关联到对应租户在智能参谋的菜单上
     * @param Add_reportOapiBipaasMenuRequest $request
     * @param RuntimeOptions $runtime
     * @return Add_reportOapiBipaasMenuResponse
     */
    public function add_reportOapiBipaasMenuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Add_reportOapiBipaasMenuResponse::fromMap($this->doRequestOApi("POST", "/topapi/bipaas/menu/add_report", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 上传考勤打卡流水
     * @param UploadOapiAttendanceRecordRequest $request
     * @return UploadOapiAttendanceRecordResponse
     */
    public function uploadOapiAttendanceRecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->uploadOapiAttendanceRecordEx($request, $runtime);
    }

    /**
     * Description: 上传考勤打卡流水
     * @param UploadOapiAttendanceRecordRequest $request
     * @param RuntimeOptions $runtime
     * @return UploadOapiAttendanceRecordResponse
     */
    public function uploadOapiAttendanceRecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UploadOapiAttendanceRecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/record/upload", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业设置开机闪屏动画信息
     * @param SetscreenOapiOrgRequest $request
     * @return SetscreenOapiOrgResponse
     */
    public function setscreenOapiOrg($request){
        $runtime = new RuntimeOptions([]);
        return $this->setscreenOapiOrgEx($request, $runtime);
    }

    /**
     * Description: 企业设置开机闪屏动画信息
     * @param SetscreenOapiOrgRequest $request
     * @param RuntimeOptions $runtime
     * @return SetscreenOapiOrgResponse
     */
    public function setscreenOapiOrgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetscreenOapiOrgResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/setscreen", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可以根据审批流的唯一标识，分页获取该审批流对应的审批实例id。只能取到权限范围内的相关部门的审批实例
     * @param ListidsOapiProcessinstanceRequest $request
     * @return ListidsOapiProcessinstanceResponse
     */
    public function listidsOapiProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listidsOapiProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 企业可以根据审批流的唯一标识，分页获取该审批流对应的审批实例id。只能取到权限范围内的相关部门的审批实例
     * @param ListidsOapiProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListidsOapiProcessinstanceResponse
     */
    public function listidsOapiProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListidsOapiProcessinstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/listids", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 空间资源根据设备id列表查询站位
     * @param ListbydeviceOapiRhinoMosSpaceDeviceCheckInRequest $request
     * @return ListbydeviceOapiRhinoMosSpaceDeviceCheckInResponse
     */
    public function listbydeviceOapiRhinoMosSpaceDeviceCheckIn($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbydeviceOapiRhinoMosSpaceDeviceCheckInEx($request, $runtime);
    }

    /**
     * Description: 空间资源根据设备id列表查询站位
     * @param ListbydeviceOapiRhinoMosSpaceDeviceCheckInRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbydeviceOapiRhinoMosSpaceDeviceCheckInResponse
     */
    public function listbydeviceOapiRhinoMosSpaceDeviceCheckInEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbydeviceOapiRhinoMosSpaceDeviceCheckInResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/device/check/in/listbydevice", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过追踪ID查询追踪记录
     * @param ListOapiRhinoMosExecTrackTrackconditionRequest $request
     * @return ListOapiRhinoMosExecTrackTrackconditionResponse
     */
    public function listOapiRhinoMosExecTrackTrackcondition($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosExecTrackTrackconditionEx($request, $runtime);
    }

    /**
     * Description: 通过追踪ID查询追踪记录
     * @param ListOapiRhinoMosExecTrackTrackconditionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosExecTrackTrackconditionResponse
     */
    public function listOapiRhinoMosExecTrackTrackconditionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosExecTrackTrackconditionResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/track/trackcondition/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 过滤出未执行过指定工序的实体
     * @param FilterOapiRhinoMosExecClothesUnperformedRequest $request
     * @return FilterOapiRhinoMosExecClothesUnperformedResponse
     */
    public function filterOapiRhinoMosExecClothesUnperformed($request){
        $runtime = new RuntimeOptions([]);
        return $this->filterOapiRhinoMosExecClothesUnperformedEx($request, $runtime);
    }

    /**
     * Description: 过滤出未执行过指定工序的实体
     * @param FilterOapiRhinoMosExecClothesUnperformedRequest $request
     * @param RuntimeOptions $runtime
     * @return FilterOapiRhinoMosExecClothesUnperformedResponse
     */
    public function filterOapiRhinoMosExecClothesUnperformedEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FilterOapiRhinoMosExecClothesUnperformedResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/unperformed/filter", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过实体查询追踪记录
     * @param ListOapiRhinoMosExecTrackEntityconditionRequest $request
     * @return ListOapiRhinoMosExecTrackEntityconditionResponse
     */
    public function listOapiRhinoMosExecTrackEntitycondition($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosExecTrackEntityconditionEx($request, $runtime);
    }

    /**
     * Description: 通过实体查询追踪记录
     * @param ListOapiRhinoMosExecTrackEntityconditionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosExecTrackEntityconditionResponse
     */
    public function listOapiRhinoMosExecTrackEntityconditionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosExecTrackEntityconditionResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/track/entitycondition/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给isv，发送全员群的小钉卡片接口。其中发送模版msgkey是我们这边配置，有管控，发送方isv，代码中也进行了管控
     * @param SendOapiCardIntelligentEmpgroupRequest $request
     * @return SendOapiCardIntelligentEmpgroupResponse
     */
    public function sendOapiCardIntelligentEmpgroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiCardIntelligentEmpgroupEx($request, $runtime);
    }

    /**
     * Description: 提供给isv，发送全员群的小钉卡片接口。其中发送模版msgkey是我们这边配置，有管控，发送方isv，代码中也进行了管控
     * @param SendOapiCardIntelligentEmpgroupRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiCardIntelligentEmpgroupResponse
     */
    public function sendOapiCardIntelligentEmpgroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiCardIntelligentEmpgroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/card/intelligent/empgroup/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 解除追踪记录的绑定关系
     * @param UnbindOapiRhinoMosExecTrackRequest $request
     * @return UnbindOapiRhinoMosExecTrackResponse
     */
    public function unbindOapiRhinoMosExecTrack($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindOapiRhinoMosExecTrackEx($request, $runtime);
    }

    /**
     * Description: 解除追踪记录的绑定关系
     * @param UnbindOapiRhinoMosExecTrackRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindOapiRhinoMosExecTrackResponse
     */
    public function unbindOapiRhinoMosExecTrackEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnbindOapiRhinoMosExecTrackResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/track/unbind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除企业中员工的人脸识别照片
     * @param RemovefaceOapiSmartdeviceRequest $request
     * @return RemovefaceOapiSmartdeviceResponse
     */
    public function removefaceOapiSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->removefaceOapiSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 删除企业中员工的人脸识别照片
     * @param RemovefaceOapiSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return RemovefaceOapiSmartdeviceResponse
     */
    public function removefaceOapiSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemovefaceOapiSmartdeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/removeface", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开始执行某工序
     * @param StartOapiRhinoMosExecPerformRequest $request
     * @return StartOapiRhinoMosExecPerformResponse
     */
    public function startOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->startOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 开始执行某工序
     * @param StartOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return StartOapiRhinoMosExecPerformResponse
     */
    public function startOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StartOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/start", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事第三方业务数据企业配置写入
     * @param UpdateOapiSmartworkHrmMasterCorpconfigRequest $request
     * @return UpdateOapiSmartworkHrmMasterCorpconfigResponse
     */
    public function updateOapiSmartworkHrmMasterCorpconfig($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartworkHrmMasterCorpconfigEx($request, $runtime);
    }

    /**
     * Description: 智能人事第三方业务数据企业配置写入
     * @param UpdateOapiSmartworkHrmMasterCorpconfigRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartworkHrmMasterCorpconfigResponse
     */
    public function updateOapiSmartworkHrmMasterCorpconfigEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartworkHrmMasterCorpconfigResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/master/corpconfig/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 重做工序，从某个工序开始重新执行
     * @param ReworkOapiRhinoMosExecPerformRequest $request
     * @return ReworkOapiRhinoMosExecPerformResponse
     */
    public function reworkOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->reworkOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 重做工序，从某个工序开始重新执行
     * @param ReworkOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return ReworkOapiRhinoMosExecPerformResponse
     */
    public function reworkOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ReworkOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/rework", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 解绑追踪者
     * @param UnbindOapiRhinoMosExecTrackTrackersRequest $request
     * @return UnbindOapiRhinoMosExecTrackTrackersResponse
     */
    public function unbindOapiRhinoMosExecTrackTrackers($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindOapiRhinoMosExecTrackTrackersEx($request, $runtime);
    }

    /**
     * Description: 解绑追踪者
     * @param UnbindOapiRhinoMosExecTrackTrackersRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindOapiRhinoMosExecTrackTrackersResponse
     */
    public function unbindOapiRhinoMosExecTrackTrackersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnbindOapiRhinoMosExecTrackTrackersResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/track/trackers/unbind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过实体和工序失效工序执行记录
     * @param InvalidbyentopOapiRhinoMosExecPerformRequest $request
     * @return InvalidbyentopOapiRhinoMosExecPerformResponse
     */
    public function invalidbyentopOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->invalidbyentopOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 通过实体和工序失效工序执行记录
     * @param InvalidbyentopOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return InvalidbyentopOapiRhinoMosExecPerformResponse
     */
    public function invalidbyentopOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InvalidbyentopOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/invalidbyentop", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取组织信息，前期先开放组织的名称及ext
     * @param GetOapiOrgpaasOrgInfoRequest $request
     * @return GetOapiOrgpaasOrgInfoResponse
     */
    public function getOapiOrgpaasOrgInfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiOrgpaasOrgInfoEx($request, $runtime);
    }

    /**
     * Description: 获取组织信息，前期先开放组织的名称及ext
     * @param GetOapiOrgpaasOrgInfoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiOrgpaasOrgInfoResponse
     */
    public function getOapiOrgpaasOrgInfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiOrgpaasOrgInfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/orgpaas/org/info/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询2C订单信息
     * @param QueryOapiRhinoSalesOrderCustomInfoRequest $request
     * @return QueryOapiRhinoSalesOrderCustomInfoResponse
     */
    public function queryOapiRhinoSalesOrderCustomInfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoSalesOrderCustomInfoEx($request, $runtime);
    }

    /**
     * Description: 查询2C订单信息
     * @param QueryOapiRhinoSalesOrderCustomInfoRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoSalesOrderCustomInfoResponse
     */
    public function queryOapiRhinoSalesOrderCustomInfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoSalesOrderCustomInfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/sales/order/custom/info/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 部分新零售场景需要支持二级会话，也就是把部分同类会话聚合在一起
     * 本接口给二方提供了创建二级单聊会话的能力
     * @param CreateOapiImpaasOtoconversationRequest $request
     * @return CreateOapiImpaasOtoconversationResponse
     */
    public function createOapiImpaasOtoconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiImpaasOtoconversationEx($request, $runtime);
    }

    /**
     * Description: 部分新零售场景需要支持二级会话，也就是把部分同类会话聚合在一起
     * 本接口给二方提供了创建二级单聊会话的能力
     * @param CreateOapiImpaasOtoconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiImpaasOtoconversationResponse
     */
    public function createOapiImpaasOtoconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiImpaasOtoconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/otoconversation/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据订单id批量查询生产订单
     * @param GetOapiRhinoOrderBatchRequest $request
     * @return GetOapiRhinoOrderBatchResponse
     */
    public function getOapiRhinoOrderBatch($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoOrderBatchEx($request, $runtime);
    }

    /**
     * Description: 根据订单id批量查询生产订单
     * @param GetOapiRhinoOrderBatchRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoOrderBatchResponse
     */
    public function getOapiRhinoOrderBatchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoOrderBatchResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/order/batch/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新制造订单搜索接口
     * @param QueryOapiRhinoOrderRequest $request
     * @return QueryOapiRhinoOrderResponse
     */
    public function queryOapiRhinoOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoOrderEx($request, $runtime);
    }

    /**
     * Description: 新制造订单搜索接口
     * @param QueryOapiRhinoOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoOrderResponse
     */
    public function queryOapiRhinoOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/order/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询生产订单细码
     * @param GetOapiRhinoOrderDetailRequest $request
     * @return GetOapiRhinoOrderDetailResponse
     */
    public function getOapiRhinoOrderDetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoOrderDetailEx($request, $runtime);
    }

    /**
     * Description: 查询生产订单细码
     * @param GetOapiRhinoOrderDetailRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoOrderDetailResponse
     */
    public function getOapiRhinoOrderDetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoOrderDetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/order/detail/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 确认离职并指定交接人，会从通讯录删除
     * @param DelandhandoverOapiHrmEmployeeRequest $request
     * @return DelandhandoverOapiHrmEmployeeResponse
     */
    public function delandhandoverOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->delandhandoverOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 确认离职并指定交接人，会从通讯录删除
     * @param DelandhandoverOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return DelandhandoverOapiHrmEmployeeResponse
     */
    public function delandhandoverOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DelandhandoverOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/delandhandover", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询生产订单的tag
     * @param GetOapiRhinoOrderTagRequest $request
     * @return GetOapiRhinoOrderTagResponse
     */
    public function getOapiRhinoOrderTag($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoOrderTagEx($request, $runtime);
    }

    /**
     * Description: 查询生产订单的tag
     * @param GetOapiRhinoOrderTagRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoOrderTagResponse
     */
    public function getOapiRhinoOrderTagEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoOrderTagResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/order/tag/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能人事开放接口-更新员工工作信息
     * @param ModjobinfoOapiHrmEmployeeRequest $request
     * @return ModjobinfoOapiHrmEmployeeResponse
     */
    public function modjobinfoOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->modjobinfoOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能人事开放接口-更新员工工作信息
     * @param ModjobinfoOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return ModjobinfoOapiHrmEmployeeResponse
     */
    public function modjobinfoOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModjobinfoOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/modjobinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事添加待入职员工信息
     * @param AddpreentryOapiSmartworkHrmEmployeeRequest $request
     * @return AddpreentryOapiSmartworkHrmEmployeeResponse
     */
    public function addpreentryOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->addpreentryOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事添加待入职员工信息
     * @param AddpreentryOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return AddpreentryOapiSmartworkHrmEmployeeResponse
     */
    public function addpreentryOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddpreentryOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/addpreentry", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事业务，企业/ISV分页查询公司待入职员工id列表
     * @param QuerypreentryOapiSmartworkHrmEmployeeRequest $request
     * @return QuerypreentryOapiSmartworkHrmEmployeeResponse
     */
    public function querypreentryOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->querypreentryOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事业务，企业/ISV分页查询公司待入职员工id列表
     * @param QuerypreentryOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerypreentryOapiSmartworkHrmEmployeeResponse
     */
    public function querypreentryOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QuerypreentryOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/querypreentry", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事业务，提供企业/ISV按在职状态分页查询公司在职员工id列表
     * @param QueryonjobOapiSmartworkHrmEmployeeRequest $request
     * @return QueryonjobOapiSmartworkHrmEmployeeResponse
     */
    public function queryonjobOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryonjobOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事业务，提供企业/ISV按在职状态分页查询公司在职员工id列表
     * @param QueryonjobOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryonjobOapiSmartworkHrmEmployeeResponse
     */
    public function queryonjobOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryonjobOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/queryonjob", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取指定用户的孩子当天待打卡的任务列表
     * @param ListOapiEduCardTaskTodayRequest $request
     * @return ListOapiEduCardTaskTodayResponse
     */
    public function listOapiEduCardTaskToday($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduCardTaskTodayEx($request, $runtime);
    }

    /**
     * Description: 获取指定用户的孩子当天待打卡的任务列表
     * @param ListOapiEduCardTaskTodayRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduCardTaskTodayResponse
     */
    public function listOapiEduCardTaskTodayEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduCardTaskTodayResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/card/task/today/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 帮用户提交打卡
     * @param SubmitOapiEduCardTaskRequest $request
     * @return SubmitOapiEduCardTaskResponse
     */
    public function submitOapiEduCardTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->submitOapiEduCardTaskEx($request, $runtime);
    }

    /**
     * Description: 帮用户提交打卡
     * @param SubmitOapiEduCardTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return SubmitOapiEduCardTaskResponse
     */
    public function submitOapiEduCardTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SubmitOapiEduCardTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/card/task/submit", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供向被访者或访客接待人员发送通知信息的功能
     * @param SendnotifyOapiSmartdeviceVisitorRequest $request
     * @return SendnotifyOapiSmartdeviceVisitorResponse
     */
    public function sendnotifyOapiSmartdeviceVisitor($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendnotifyOapiSmartdeviceVisitorEx($request, $runtime);
    }

    /**
     * Description: 提供向被访者或访客接待人员发送通知信息的功能
     * @param SendnotifyOapiSmartdeviceVisitorRequest $request
     * @param RuntimeOptions $runtime
     * @return SendnotifyOapiSmartdeviceVisitorResponse
     */
    public function sendnotifyOapiSmartdeviceVisitorEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendnotifyOapiSmartdeviceVisitorResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/visitor/sendnotify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取消息的内容
     * @param GetmessageOapiImpaasMessageRequest $request
     * @return GetmessageOapiImpaasMessageResponse
     */
    public function getmessageOapiImpaasMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->getmessageOapiImpaasMessageEx($request, $runtime);
    }

    /**
     * Description: 获取消息的内容
     * @param GetmessageOapiImpaasMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return GetmessageOapiImpaasMessageResponse
     */
    public function getmessageOapiImpaasMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetmessageOapiImpaasMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/message/getmessage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加企业外部联系人
     * @param CreateCorpExtcontactRequest $request
     * @return CreateCorpExtcontactResponse
     */
    public function createCorpExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->createCorpExtcontactEx($request, $runtime);
    }

    /**
     * Description: 添加企业外部联系人
     * @param CreateCorpExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateCorpExtcontactResponse
     */
    public function createCorpExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateCorpExtcontactResponse::fromMap($this->doRequest("dingtalk.corp.extcontact.create", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开通人脸识别的企业中，会存在部分用户录入照片，此接口用于批量查看员工是否已录入照片
     * @param HasfaceCorpSmartdeviceRequest $request
     * @return HasfaceCorpSmartdeviceResponse
     */
    public function hasfaceCorpSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->hasfaceCorpSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 开通人脸识别的企业中，会存在部分用户录入照片，此接口用于批量查看员工是否已录入照片
     * @param HasfaceCorpSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return HasfaceCorpSmartdeviceResponse
     */
    public function hasfaceCorpSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HasfaceCorpSmartdeviceResponse::fromMap($this->doRequest("dingtalk.corp.smartdevice.hasface", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业外部联系人列表
     * @param ListCorpExtcontactRequest $request
     * @return ListCorpExtcontactResponse
     */
    public function listCorpExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpExtcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业外部联系人列表
     * @param ListCorpExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpExtcontactResponse
     */
    public function listCorpExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListCorpExtcontactResponse::fromMap($this->doRequest("dingtalk.corp.extcontact.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户的导航栏
     * @param GetOapiHireNavigationRequest $request
     * @return GetOapiHireNavigationResponse
     */
    public function getOapiHireNavigation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiHireNavigationEx($request, $runtime);
    }

    /**
     * Description: 获取用户的导航栏
     * @param GetOapiHireNavigationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiHireNavigationResponse
     */
    public function getOapiHireNavigationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiHireNavigationResponse::fromMap($this->doRequestOApi("POST", "/topapi/hire/navigation/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新企业外部联系人
     * @param UpdateCorpExtcontactRequest $request
     * @return UpdateCorpExtcontactResponse
     */
    public function updateCorpExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateCorpExtcontactEx($request, $runtime);
    }

    /**
     * Description: 更新企业外部联系人
     * @param UpdateCorpExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateCorpExtcontactResponse
     */
    public function updateCorpExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateCorpExtcontactResponse::fromMap($this->doRequest("dingtalk.corp.extcontact.update", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口提供通过审批修改打卡结果的能力，如外出，请假，审批等，指定时间内的打卡结果会被修改为正常
     * @param CancelOapiAttendanceApproveRequest $request
     * @return CancelOapiAttendanceApproveResponse
     */
    public function cancelOapiAttendanceApprove($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiAttendanceApproveEx($request, $runtime);
    }

    /**
     * Description: 该接口提供通过审批修改打卡结果的能力，如外出，请假，审批等，指定时间内的打卡结果会被修改为正常
     * @param CancelOapiAttendanceApproveRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiAttendanceApproveResponse
     */
    public function cancelOapiAttendanceApproveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiAttendanceApproveResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/approve/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业外部联系人详情
     * @param GetCorpExtcontactRequest $request
     * @return GetCorpExtcontactResponse
     */
    public function getCorpExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCorpExtcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业外部联系人详情
     * @param GetCorpExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCorpExtcontactResponse
     */
    public function getCorpExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetCorpExtcontactResponse::fromMap($this->doRequest("dingtalk.corp.extcontact.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口提供通过审批修改打卡结果的能力，如外出，请假，审批等，指定时间内的打卡结果会被修改为正常
     * @param FinishOapiAttendanceApproveRequest $request
     * @return FinishOapiAttendanceApproveResponse
     */
    public function finishOapiAttendanceApprove($request){
        $runtime = new RuntimeOptions([]);
        return $this->finishOapiAttendanceApproveEx($request, $runtime);
    }

    /**
     * Description: 该接口提供通过审批修改打卡结果的能力，如外出，请假，审批等，指定时间内的打卡结果会被修改为正常
     * @param FinishOapiAttendanceApproveRequest $request
     * @param RuntimeOptions $runtime
     * @return FinishOapiAttendanceApproveResponse
     */
    public function finishOapiAttendanceApproveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FinishOapiAttendanceApproveResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/approve/finish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除企业外部联系人
     * @param DeleteCorpExtcontactRequest $request
     * @return DeleteCorpExtcontactResponse
     */
    public function deleteCorpExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteCorpExtcontactEx($request, $runtime);
    }

    /**
     * Description: 删除企业外部联系人
     * @param DeleteCorpExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteCorpExtcontactResponse
     */
    public function deleteCorpExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteCorpExtcontactResponse::fromMap($this->doRequest("dingtalk.corp.extcontact.delete", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据考勤系统的排班情况预计算员工加班，出差，请假的时长信息
     * @param CalculateOapiAttendanceApproveDurationRequest $request
     * @return CalculateOapiAttendanceApproveDurationResponse
     */
    public function calculateOapiAttendanceApproveDuration($request){
        $runtime = new RuntimeOptions([]);
        return $this->calculateOapiAttendanceApproveDurationEx($request, $runtime);
    }

    /**
     * Description: 根据考勤系统的排班情况预计算员工加班，出差，请假的时长信息
     * @param CalculateOapiAttendanceApproveDurationRequest $request
     * @param RuntimeOptions $runtime
     * @return CalculateOapiAttendanceApproveDurationResponse
     */
    public function calculateOapiAttendanceApproveDurationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CalculateOapiAttendanceApproveDurationResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/approve/duration/calculate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业外部联系人标签列表
     * @param ListlabelgroupsCorpExtcontactRequest $request
     * @return ListlabelgroupsCorpExtcontactResponse
     */
    public function listlabelgroupsCorpExtcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->listlabelgroupsCorpExtcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业外部联系人标签列表
     * @param ListlabelgroupsCorpExtcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return ListlabelgroupsCorpExtcontactResponse
     */
    public function listlabelgroupsCorpExtcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListlabelgroupsCorpExtcontactResponse::fromMap($this->doRequest("dingtalk.corp.extcontact.listlabelgroups", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 允许开发者查询企业是否绑定了某个类型的钉钉智能硬件设备
     * @param HasbinddeviceCorpDeviceManageRequest $request
     * @return HasbinddeviceCorpDeviceManageResponse
     */
    public function hasbinddeviceCorpDeviceManage($request){
        $runtime = new RuntimeOptions([]);
        return $this->hasbinddeviceCorpDeviceManageEx($request, $runtime);
    }

    /**
     * Description: 允许开发者查询企业是否绑定了某个类型的钉钉智能硬件设备
     * @param HasbinddeviceCorpDeviceManageRequest $request
     * @param RuntimeOptions $runtime
     * @return HasbinddeviceCorpDeviceManageResponse
     */
    public function hasbinddeviceCorpDeviceManageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HasbinddeviceCorpDeviceManageResponse::fromMap($this->doRequest("dingtalk.corp.device.manage.hasbinddevice", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 为用户添加识别照片，以及指定在终端上识别的有效期，指定用户类型对应识别提示语
     * @param AddfaceCorpSmartdeviceRequest $request
     * @return AddfaceCorpSmartdeviceResponse
     */
    public function addfaceCorpSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->addfaceCorpSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 为用户添加识别照片，以及指定在终端上识别的有效期，指定用户类型对应识别提示语
     * @param AddfaceCorpSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return AddfaceCorpSmartdeviceResponse
     */
    public function addfaceCorpSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddfaceCorpSmartdeviceResponse::fromMap($this->doRequest("dingtalk.corp.smartdevice.addface", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询用户待办事项
     * @param QueryOapiProcessWorkrecordTaskRequest $request
     * @return QueryOapiProcessWorkrecordTaskResponse
     */
    public function queryOapiProcessWorkrecordTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiProcessWorkrecordTaskEx($request, $runtime);
    }

    /**
     * Description: 查询用户待办事项
     * @param QueryOapiProcessWorkrecordTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiProcessWorkrecordTaskResponse
     */
    public function queryOapiProcessWorkrecordTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiProcessWorkrecordTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/task/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 当M2成功识别指定用户后，如需向指定用户发消息通知，使用些接口
     * @param AddrecognizenotifyCorpSmartdeviceRequest $request
     * @return AddrecognizenotifyCorpSmartdeviceResponse
     */
    public function addrecognizenotifyCorpSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->addrecognizenotifyCorpSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 当M2成功识别指定用户后，如需向指定用户发消息通知，使用些接口
     * @param AddrecognizenotifyCorpSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return AddrecognizenotifyCorpSmartdeviceResponse
     */
    public function addrecognizenotifyCorpSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddrecognizenotifyCorpSmartdeviceResponse::fromMap($this->doRequest("dingtalk.corp.smartdevice.addrecognizenotify", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能前台开放部分功能区块，区块内的显示信息由isv基于企业不同推送展示消息
     * @param PushinfoCorpSmartdeviceReceptionistRequest $request
     * @return PushinfoCorpSmartdeviceReceptionistResponse
     */
    public function pushinfoCorpSmartdeviceReceptionist($request){
        $runtime = new RuntimeOptions([]);
        return $this->pushinfoCorpSmartdeviceReceptionistEx($request, $runtime);
    }

    /**
     * Description: 智能前台开放部分功能区块，区块内的显示信息由isv基于企业不同推送展示消息
     * @param PushinfoCorpSmartdeviceReceptionistRequest $request
     * @param RuntimeOptions $runtime
     * @return PushinfoCorpSmartdeviceReceptionistResponse
     */
    public function pushinfoCorpSmartdeviceReceptionistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PushinfoCorpSmartdeviceReceptionistResponse::fromMap($this->doRequest("dingtalk.corp.smartdevice.receptionist.pushinfo", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据sns临时授权码获取用户信息
     * @param Getuserinfo_bycodeOapiSnsRequest $request
     * @return Getuserinfo_bycodeOapiSnsResponse
     */
    public function getuserinfo_bycodeOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserinfo_bycodeOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 根据sns临时授权码获取用户信息
     * @param Getuserinfo_bycodeOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return Getuserinfo_bycodeOapiSnsResponse
     */
    public function getuserinfo_bycodeOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Getuserinfo_bycodeOapiSnsResponse::fromMap($this->doRequestOApi("POST", "/sns/getuserinfo_bycode", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可以根据员工userid或者日志模板名称，分页获取员工一段时间范围内在【日志】微应用发送的日志概要信息
     * @param SimplelistOapiReportRequest $request
     * @return SimplelistOapiReportResponse
     */
    public function simplelistOapiReport($request){
        $runtime = new RuntimeOptions([]);
        return $this->simplelistOapiReportEx($request, $runtime);
    }

    /**
     * Description: 企业可以根据员工userid或者日志模板名称，分页获取员工一段时间范围内在【日志】微应用发送的日志概要信息
     * @param SimplelistOapiReportRequest $request
     * @param RuntimeOptions $runtime
     * @return SimplelistOapiReportResponse
     */
    public function simplelistOapiReportEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SimplelistOapiReportResponse::fromMap($this->doRequestOApi("POST", "/topapi/report/simplelist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开通人脸识别的企业中，会存在部分用户录入照片，此接口用于批量查看员工是否已录入照片
     * @param HasfaceOapiSmartdeviceRequest $request
     * @return HasfaceOapiSmartdeviceResponse
     */
    public function hasfaceOapiSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->hasfaceOapiSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 开通人脸识别的企业中，会存在部分用户录入照片，此接口用于批量查看员工是否已录入照片
     * @param HasfaceOapiSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return HasfaceOapiSmartdeviceResponse
     */
    public function hasfaceOapiSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HasfaceOapiSmartdeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/hasface", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，创建业务实例，根据业务实例可以配置打卡组（位置、人群、规则）
     * @param CreateOapiPbpInstanceRequest $request
     * @return CreateOapiPbpInstanceResponse
     */
    public function createOapiPbpInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiPbpInstanceEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，创建业务实例，根据业务实例可以配置打卡组（位置、人群、规则）
     * @param CreateOapiPbpInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiPbpInstanceResponse
     */
    public function createOapiPbpInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiPbpInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，获取打卡组绑定的成员
     * @param ListOapiPbpInstanceGroupMemberRequest $request
     * @return ListOapiPbpInstanceGroupMemberResponse
     */
    public function listOapiPbpInstanceGroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiPbpInstanceGroupMemberEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，获取打卡组绑定的成员
     * @param ListOapiPbpInstanceGroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiPbpInstanceGroupMemberResponse
     */
    public function listOapiPbpInstanceGroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiPbpInstanceGroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/group/member/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，创建业务实例对应的打卡组
     * @param CreateOapiPbpInstanceGroupRequest $request
     * @return CreateOapiPbpInstanceGroupResponse
     */
    public function createOapiPbpInstanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiPbpInstanceGroupEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，创建业务实例对应的打卡组
     * @param CreateOapiPbpInstanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiPbpInstanceGroupResponse
     */
    public function createOapiPbpInstanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiPbpInstanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/group/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事开放接口-查询离职人员列表
     * @param GetdismissionlistOapiHrmEmployeeRequest $request
     * @return GetdismissionlistOapiHrmEmployeeResponse
     */
    public function getdismissionlistOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->getdismissionlistOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事开放接口-查询离职人员列表
     * @param GetdismissionlistOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetdismissionlistOapiHrmEmployeeResponse
     */
    public function getdismissionlistOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetdismissionlistOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/getdismissionlist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，获取打卡组绑定的位置
     * 位置包括 硬件设备、GPS、Wifi等位置描述类型
     * @param ListOapiPbpInstanceGroupPositionRequest $request
     * @return ListOapiPbpInstanceGroupPositionResponse
     */
    public function listOapiPbpInstanceGroupPosition($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiPbpInstanceGroupPositionEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，获取打卡组绑定的位置
     * 位置包括 硬件设备、GPS、Wifi等位置描述类型
     * @param ListOapiPbpInstanceGroupPositionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiPbpInstanceGroupPositionResponse
     */
    public function listOapiPbpInstanceGroupPositionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiPbpInstanceGroupPositionResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/group/position/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取智能人事指定员工花名册详细数据
     * @param GetOapiHrmEmployeeRequest $request
     * @return GetOapiHrmEmployeeResponse
     */
    public function getOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 获取智能人事指定员工花名册详细数据
     * @param GetOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiHrmEmployeeResponse
     */
    public function getOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，更新打卡组绑定的位置
     * 位置包括 硬件设备、GPS、Wifi等位置描述类型
     * @param UpdateOapiPbpInstanceGroupPositionRequest $request
     * @return UpdateOapiPbpInstanceGroupPositionResponse
     */
    public function updateOapiPbpInstanceGroupPosition($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiPbpInstanceGroupPositionEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，更新打卡组绑定的位置
     * 位置包括 硬件设备、GPS、Wifi等位置描述类型
     * @param UpdateOapiPbpInstanceGroupPositionRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiPbpInstanceGroupPositionResponse
     */
    public function updateOapiPbpInstanceGroupPositionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiPbpInstanceGroupPositionResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/group/position/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，获取业务所有可用位置
     * 位置包括 硬件设备、GPS、Wifi等位置描述类型
     * @param ListOapiPbpInstancePositionRequest $request
     * @return ListOapiPbpInstancePositionResponse
     */
    public function listOapiPbpInstancePosition($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiPbpInstancePositionEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，获取业务所有可用位置
     * 位置包括 硬件设备、GPS、Wifi等位置描述类型
     * @param ListOapiPbpInstancePositionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiPbpInstancePositionResponse
     */
    public function listOapiPbpInstancePositionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiPbpInstancePositionResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/position/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 打卡业务平台，更新打卡组绑定的成员
     * @param UpdateOapiPbpInstanceGroupMemberRequest $request
     * @return UpdateOapiPbpInstanceGroupMemberResponse
     */
    public function updateOapiPbpInstanceGroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiPbpInstanceGroupMemberEx($request, $runtime);
    }

    /**
     * Description: 打卡业务平台，更新打卡组绑定的成员
     * @param UpdateOapiPbpInstanceGroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiPbpInstanceGroupMemberResponse
     */
    public function updateOapiPbpInstanceGroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiPbpInstanceGroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/group/member/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 个人E应用消息推送
     * @param Send_msgOapiSnsRequest $request
     * @return Send_msgOapiSnsResponse
     */
    public function send_msgOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->send_msgOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 个人E应用消息推送
     * @param Send_msgOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return Send_msgOapiSnsResponse
     */
    public function send_msgOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Send_msgOapiSnsResponse::fromMap($this->doRequestOApi("POST", "/sns/send_msg", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取智能人事指定员工花名册详细数据
     * @param GetCorpHrmEmployeeRequest $request
     * @return GetCorpHrmEmployeeResponse
     */
    public function getCorpHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCorpHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 获取智能人事指定员工花名册详细数据
     * @param GetCorpHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCorpHrmEmployeeResponse
     */
    public function getCorpHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetCorpHrmEmployeeResponse::fromMap($this->doRequest("dingtalk.corp.hrm.employee.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据发送工作通知消息的taskId进行消息撤回操作
     * @param RecallOapiMessageCorpconversationRequest $request
     * @return RecallOapiMessageCorpconversationResponse
     */
    public function recallOapiMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->recallOapiMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 根据发送工作通知消息的taskId进行消息撤回操作
     * @param RecallOapiMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return RecallOapiMessageCorpconversationResponse
     */
    public function recallOapiMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecallOapiMessageCorpconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/corpconversation/recall", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除渠道账号绑定关系
     * @param DeleteOapiAtsChannelAccountRequest $request
     * @return DeleteOapiAtsChannelAccountResponse
     */
    public function deleteOapiAtsChannelAccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiAtsChannelAccountEx($request, $runtime);
    }

    /**
     * Description: 删除渠道账号绑定关系
     * @param DeleteOapiAtsChannelAccountRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiAtsChannelAccountResponse
     */
    public function deleteOapiAtsChannelAccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiAtsChannelAccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/channel/account/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据创建者获取职位数据
     * @param ListbyownerOapiAtsJobRequest $request
     * @return ListbyownerOapiAtsJobResponse
     */
    public function listbyownerOapiAtsJob($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyownerOapiAtsJobEx($request, $runtime);
    }

    /**
     * Description: 根据创建者获取职位数据
     * @param ListbyownerOapiAtsJobRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyownerOapiAtsJobResponse
     */
    public function listbyownerOapiAtsJobEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyownerOapiAtsJobResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/job/listbyowner", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加渠道的账号信息
     * @param AddOapiAtsChannelAccountRequest $request
     * @return AddOapiAtsChannelAccountResponse
     */
    public function addOapiAtsChannelAccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAtsChannelAccountEx($request, $runtime);
    }

    /**
     * Description: 添加渠道的账号信息
     * @param AddOapiAtsChannelAccountRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAtsChannelAccountResponse
     */
    public function addOapiAtsChannelAccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAtsChannelAccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/channel/account/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 列出用户当前有权限看到的10条公告，可用于在企业自定义工作首页进行公告轮播展示
     * @param ListtoptenSmartworkBlackboardRequest $request
     * @return ListtoptenSmartworkBlackboardResponse
     */
    public function listtoptenSmartworkBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->listtoptenSmartworkBlackboardEx($request, $runtime);
    }

    /**
     * Description: 列出用户当前有权限看到的10条公告，可用于在企业自定义工作首页进行公告轮播展示
     * @param ListtoptenSmartworkBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return ListtoptenSmartworkBlackboardResponse
     */
    public function listtoptenSmartworkBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListtoptenSmartworkBlackboardResponse::fromMap($this->doRequest("dingtalk.smartwork.blackboard.listtopten", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 迁移任务信息接口，用于ISV迁移历史数据
     * @param MigrateOapiWorkspaceTaskRequest $request
     * @return MigrateOapiWorkspaceTaskResponse
     */
    public function migrateOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->migrateOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 迁移任务信息接口，用于ISV迁移历史数据
     * @param MigrateOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return MigrateOapiWorkspaceTaskResponse
     */
    public function migrateOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return MigrateOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/migrate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业员工的成长记录
     * @param AddresumerecordOapiHrmEmployeeRequest $request
     * @return AddresumerecordOapiHrmEmployeeResponse
     */
    public function addresumerecordOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->addresumerecordOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 企业员工的成长记录
     * @param AddresumerecordOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return AddresumerecordOapiHrmEmployeeResponse
     */
    public function addresumerecordOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddresumerecordOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/addresumerecord", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 停用业务实例。业务实例停用后，对应的打卡组内的成员将无法自动打卡，企业或ISV也不会再收到自动打卡的回调通知
     * @param DisableOapiPbpInstanceRequest $request
     * @return DisableOapiPbpInstanceResponse
     */
    public function disableOapiPbpInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->disableOapiPbpInstanceEx($request, $runtime);
    }

    /**
     * Description: 停用业务实例。业务实例停用后，对应的打卡组内的成员将无法自动打卡，企业或ISV也不会再收到自动打卡的回调通知
     * @param DisableOapiPbpInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return DisableOapiPbpInstanceResponse
     */
    public function disableOapiPbpInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DisableOapiPbpInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/disable", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发送群消息
     * @param SendmessageOapiImpaasConversationRequest $request
     * @return SendmessageOapiImpaasConversationResponse
     */
    public function sendmessageOapiImpaasConversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendmessageOapiImpaasConversationEx($request, $runtime);
    }

    /**
     * Description: 发送群消息
     * @param SendmessageOapiImpaasConversationRequest $request
     * @param RuntimeOptions $runtime
     * @return SendmessageOapiImpaasConversationResponse
     */
    public function sendmessageOapiImpaasConversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendmessageOapiImpaasConversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/conversation/sendmessage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: impaas创建群接口
     * @param CreateOapiImpaasConversationRequest $request
     * @return CreateOapiImpaasConversationResponse
     */
    public function createOapiImpaasConversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiImpaasConversationEx($request, $runtime);
    }

    /**
     * Description: impaas创建群接口
     * @param CreateOapiImpaasConversationRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiImpaasConversationResponse
     */
    public function createOapiImpaasConversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiImpaasConversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/conversation/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: IMPAAS修改群成员接口
     * @param ModifymemberOapiImpaasConversationRequest $request
     * @return ModifymemberOapiImpaasConversationResponse
     */
    public function modifymemberOapiImpaasConversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifymemberOapiImpaasConversationEx($request, $runtime);
    }

    /**
     * Description: IMPAAS修改群成员接口
     * @param ModifymemberOapiImpaasConversationRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifymemberOapiImpaasConversationResponse
     */
    public function modifymemberOapiImpaasConversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifymemberOapiImpaasConversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/conversation/modifymember", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新成长记录
     * @param UpdateresumerecordOapiHrmEmployeeRequest $request
     * @return UpdateresumerecordOapiHrmEmployeeResponse
     */
    public function updateresumerecordOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateresumerecordOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 更新成长记录
     * @param UpdateresumerecordOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateresumerecordOapiHrmEmployeeResponse
     */
    public function updateresumerecordOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateresumerecordOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/updateresumerecord", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 支持开放删除成长记录
     * @param DelresumerecordOapiHrmEmployeeRequest $request
     * @return DelresumerecordOapiHrmEmployeeResponse
     */
    public function delresumerecordOapiHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->delresumerecordOapiHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 支持开放删除成长记录
     * @param DelresumerecordOapiHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return DelresumerecordOapiHrmEmployeeResponse
     */
    public function delresumerecordOapiHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DelresumerecordOapiHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/hrm/employee/delresumerecord", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询班级下学生列表
     * @param ListOapiEduClassStudentRequest $request
     * @return ListOapiEduClassStudentResponse
     */
    public function listOapiEduClassStudent($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduClassStudentEx($request, $runtime);
    }

    /**
     * Description: 查询班级下学生列表
     * @param ListOapiEduClassStudentRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduClassStudentResponse
     */
    public function listOapiEduClassStudentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduClassStudentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/class/student/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据班级Id和学生Id获取学生信息
     * @param GetOapiEduClassStudentRequest $request
     * @return GetOapiEduClassStudentResponse
     */
    public function getOapiEduClassStudent($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduClassStudentEx($request, $runtime);
    }

    /**
     * Description: 根据班级Id和学生Id获取学生信息
     * @param GetOapiEduClassStudentRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduClassStudentResponse
     */
    public function getOapiEduClassStudentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduClassStudentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/class/student/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询老师班级列表
     * @param ListbyteacherOapiEduClassRequest $request
     * @return ListbyteacherOapiEduClassResponse
     */
    public function listbyteacherOapiEduClass($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyteacherOapiEduClassEx($request, $runtime);
    }

    /**
     * Description: 查询老师班级列表
     * @param ListbyteacherOapiEduClassRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyteacherOapiEduClassResponse
     */
    public function listbyteacherOapiEduClassEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyteacherOapiEduClassResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/class/listbyteacher", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提交学生作业学情分析
     * @param SubmitOapiEduHomeworkStudentReportRequest $request
     * @return SubmitOapiEduHomeworkStudentReportResponse
     */
    public function submitOapiEduHomeworkStudentReport($request){
        $runtime = new RuntimeOptions([]);
        return $this->submitOapiEduHomeworkStudentReportEx($request, $runtime);
    }

    /**
     * Description: 提交学生作业学情分析
     * @param SubmitOapiEduHomeworkStudentReportRequest $request
     * @param RuntimeOptions $runtime
     * @return SubmitOapiEduHomeworkStudentReportResponse
     */
    public function submitOapiEduHomeworkStudentReportEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SubmitOapiEduHomeworkStudentReportResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/report/submit", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 作业评论列表
     * @param ListOapiEduHomeworkStudentCommentRequest $request
     * @return ListOapiEduHomeworkStudentCommentResponse
     */
    public function listOapiEduHomeworkStudentComment($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduHomeworkStudentCommentEx($request, $runtime);
    }

    /**
     * Description: 作业评论列表
     * @param ListOapiEduHomeworkStudentCommentRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduHomeworkStudentCommentResponse
     */
    public function listOapiEduHomeworkStudentCommentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduHomeworkStudentCommentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/comment/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询用户角色
     * @param QueryOapiEduHomeworkUserRoleRequest $request
     * @return QueryOapiEduHomeworkUserRoleResponse
     */
    public function queryOapiEduHomeworkUserRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiEduHomeworkUserRoleEx($request, $runtime);
    }

    /**
     * Description: 查询用户角色
     * @param QueryOapiEduHomeworkUserRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiEduHomeworkUserRoleResponse
     */
    public function queryOapiEduHomeworkUserRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiEduHomeworkUserRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/user/role/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询老师作业科目列表
     * @param QueryOapiEduHomeworkUserCourseRequest $request
     * @return QueryOapiEduHomeworkUserCourseResponse
     */
    public function queryOapiEduHomeworkUserCourse($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiEduHomeworkUserCourseEx($request, $runtime);
    }

    /**
     * Description: 查询老师作业科目列表
     * @param QueryOapiEduHomeworkUserCourseRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiEduHomeworkUserCourseResponse
     */
    public function queryOapiEduHomeworkUserCourseEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiEduHomeworkUserCourseResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/user/course/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家校本提交作业
     * @param SubmitOapiEduHomeworkStudentRequest $request
     * @return SubmitOapiEduHomeworkStudentResponse
     */
    public function submitOapiEduHomeworkStudent($request){
        $runtime = new RuntimeOptions([]);
        return $this->submitOapiEduHomeworkStudentEx($request, $runtime);
    }

    /**
     * Description: 家校本提交作业
     * @param SubmitOapiEduHomeworkStudentRequest $request
     * @param RuntimeOptions $runtime
     * @return SubmitOapiEduHomeworkStudentResponse
     */
    public function submitOapiEduHomeworkStudentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SubmitOapiEduHomeworkStudentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/submit", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询组织是否存在师生群
     * @param GetOapiEduHomeworkGroupRoleRequest $request
     * @return GetOapiEduHomeworkGroupRoleResponse
     */
    public function getOapiEduHomeworkGroupRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduHomeworkGroupRoleEx($request, $runtime);
    }

    /**
     * Description: 查询组织是否存在师生群
     * @param GetOapiEduHomeworkGroupRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduHomeworkGroupRoleResponse
     */
    public function getOapiEduHomeworkGroupRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduHomeworkGroupRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/group/role/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家校本发送作业
     * @param CreateOapiEduHomeworkRequest $request
     * @return CreateOapiEduHomeworkResponse
     */
    public function createOapiEduHomework($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiEduHomeworkEx($request, $runtime);
    }

    /**
     * Description: 家校本发送作业
     * @param CreateOapiEduHomeworkRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiEduHomeworkResponse
     */
    public function createOapiEduHomeworkEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiEduHomeworkResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 学生答题记录同步
     * @param RecordOapiEduHomeworkStudentTopicRequest $request
     * @return RecordOapiEduHomeworkStudentTopicResponse
     */
    public function recordOapiEduHomeworkStudentTopic($request){
        $runtime = new RuntimeOptions([]);
        return $this->recordOapiEduHomeworkStudentTopicEx($request, $runtime);
    }

    /**
     * Description: 学生答题记录同步
     * @param RecordOapiEduHomeworkStudentTopicRequest $request
     * @param RuntimeOptions $runtime
     * @return RecordOapiEduHomeworkStudentTopicResponse
     */
    public function recordOapiEduHomeworkStudentTopicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecordOapiEduHomeworkStudentTopicResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/topic/record", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量添加职位
     * @param BatchaddOapiAtsJobRequest $request
     * @return BatchaddOapiAtsJobResponse
     */
    public function batchaddOapiAtsJob($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchaddOapiAtsJobEx($request, $runtime);
    }

    /**
     * Description: 批量添加职位
     * @param BatchaddOapiAtsJobRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchaddOapiAtsJobResponse
     */
    public function batchaddOapiAtsJobEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchaddOapiAtsJobResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/job/batchadd", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 老师评论学生作业
     * @param CreateOapiEduHomeworkStudentCommentRequest $request
     * @return CreateOapiEduHomeworkStudentCommentResponse
     */
    public function createOapiEduHomeworkStudentComment($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiEduHomeworkStudentCommentEx($request, $runtime);
    }

    /**
     * Description: 老师评论学生作业
     * @param CreateOapiEduHomeworkStudentCommentRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiEduHomeworkStudentCommentResponse
     */
    public function createOapiEduHomeworkStudentCommentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiEduHomeworkStudentCommentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/comment/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家校本发送作业成功
     * @param UpdateOapiEduHomeworkRequest $request
     * @return UpdateOapiEduHomeworkResponse
     */
    public function updateOapiEduHomework($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiEduHomeworkEx($request, $runtime);
    }

    /**
     * Description: 家校本发送作业成功
     * @param UpdateOapiEduHomeworkRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiEduHomeworkResponse
     */
    public function updateOapiEduHomeworkEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiEduHomeworkResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建一个信管群
     * @param CreateOapiImChatControlgroupRequest $request
     * @return CreateOapiImChatControlgroupResponse
     */
    public function createOapiImChatControlgroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiImChatControlgroupEx($request, $runtime);
    }

    /**
     * Description: 创建一个信管群
     * @param CreateOapiImChatControlgroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiImChatControlgroupResponse
     */
    public function createOapiImChatControlgroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiImChatControlgroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/controlgroup/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家校本中题库同步
     * @param CreateOapiEduHomeworkTopicRequest $request
     * @return CreateOapiEduHomeworkTopicResponse
     */
    public function createOapiEduHomeworkTopic($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiEduHomeworkTopicEx($request, $runtime);
    }

    /**
     * Description: 家校本中题库同步
     * @param CreateOapiEduHomeworkTopicRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiEduHomeworkTopicResponse
     */
    public function createOapiEduHomeworkTopicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiEduHomeworkTopicResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/topic/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询作业详情
     * @param QueryOapiEduHomeworkRequest $request
     * @return QueryOapiEduHomeworkResponse
     */
    public function queryOapiEduHomework($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiEduHomeworkEx($request, $runtime);
    }

    /**
     * Description: 查询作业详情
     * @param QueryOapiEduHomeworkRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiEduHomeworkResponse
     */
    public function queryOapiEduHomeworkEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiEduHomeworkResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业用户或部门每天的钉钉运动步数，最多可以查询31天的数据
     * @param ListCorpHealthStepinfoRequest $request
     * @return ListCorpHealthStepinfoResponse
     */
    public function listCorpHealthStepinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpHealthStepinfoEx($request, $runtime);
    }

    /**
     * Description: 查询企业用户或部门每天的钉钉运动步数，最多可以查询31天的数据
     * @param ListCorpHealthStepinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpHealthStepinfoResponse
     */
    public function listCorpHealthStepinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListCorpHealthStepinfoResponse::fromMap($this->doRequest("dingtalk.corp.health.stepinfo.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询管理员通讯录权限范围
     * @param Get_admin_scopeOapiUserRequest $request
     * @return Get_admin_scopeOapiUserResponse
     */
    public function get_admin_scopeOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_admin_scopeOapiUserEx($request, $runtime);
    }

    /**
     * Description: 查询管理员通讯录权限范围
     * @param Get_admin_scopeOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_admin_scopeOapiUserResponse
     */
    public function get_admin_scopeOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_admin_scopeOapiUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/user/get_admin_scope", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给蚂蚁开放智能参谋接口，打通DeepInsight和钉钉智能参谋
     * @param GenericOapiBipaasRequest $request
     * @return GenericOapiBipaasResponse
     */
    public function genericOapiBipaas($request){
        $runtime = new RuntimeOptions([]);
        return $this->genericOapiBipaasEx($request, $runtime);
    }

    /**
     * Description: 给蚂蚁开放智能参谋接口，打通DeepInsight和钉钉智能参谋
     * @param GenericOapiBipaasRequest $request
     * @param RuntimeOptions $runtime
     * @return GenericOapiBipaasResponse
     */
    public function genericOapiBipaasEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GenericOapiBipaasResponse::fromMap($this->doRequestOApi("POST", "/topapi/bipaas/generic", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新评论学生作业
     * @param UpdateOapiEduHomeworkStudentCommentRequest $request
     * @return UpdateOapiEduHomeworkStudentCommentResponse
     */
    public function updateOapiEduHomeworkStudentComment($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiEduHomeworkStudentCommentEx($request, $runtime);
    }

    /**
     * Description: 更新评论学生作业
     * @param UpdateOapiEduHomeworkStudentCommentRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiEduHomeworkStudentCommentResponse
     */
    public function updateOapiEduHomeworkStudentCommentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiEduHomeworkStudentCommentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/comment/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除作业评论
     * @param DeleteOapiEduHomeworkStudentCommentRequest $request
     * @return DeleteOapiEduHomeworkStudentCommentResponse
     */
    public function deleteOapiEduHomeworkStudentComment($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiEduHomeworkStudentCommentEx($request, $runtime);
    }

    /**
     * Description: 删除作业评论
     * @param DeleteOapiEduHomeworkStudentCommentRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiEduHomeworkStudentCommentResponse
     */
    public function deleteOapiEduHomeworkStudentCommentEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiEduHomeworkStudentCommentResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/homework/student/comment/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过学校id查询校友会id
     * @param GetOapiEduAlumniRequest $request
     * @return GetOapiEduAlumniResponse
     */
    public function getOapiEduAlumni($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduAlumniEx($request, $runtime);
    }

    /**
     * Description: 通过学校id查询校友会id
     * @param GetOapiEduAlumniRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduAlumniResponse
     */
    public function getOapiEduAlumniEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiEduAlumniResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/alumni/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 可以通过API修改审批表单的值，通用接口，暂时只开放给E签宝，暂时只支持附件组件，只能添加属性，不能修改现有属性
     * @param UpdateOapiProcessinstanceVariableRequest $request
     * @return UpdateOapiProcessinstanceVariableResponse
     */
    public function updateOapiProcessinstanceVariable($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiProcessinstanceVariableEx($request, $runtime);
    }

    /**
     * Description: 可以通过API修改审批表单的值，通用接口，暂时只开放给E签宝，暂时只支持附件组件，只能添加属性，不能修改现有属性
     * @param UpdateOapiProcessinstanceVariableRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiProcessinstanceVariableResponse
     */
    public function updateOapiProcessinstanceVariableEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiProcessinstanceVariableResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/variable/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取审批单文件上传授权
     * @param UploadOapiProcessinstanceFileRequest $request
     * @return UploadOapiProcessinstanceFileResponse
     */
    public function uploadOapiProcessinstanceFile($request){
        $runtime = new RuntimeOptions([]);
        return $this->uploadOapiProcessinstanceFileEx($request, $runtime);
    }

    /**
     * Description: 获取审批单文件上传授权
     * @param UploadOapiProcessinstanceFileRequest $request
     * @param RuntimeOptions $runtime
     * @return UploadOapiProcessinstanceFileResponse
     */
    public function uploadOapiProcessinstanceFileEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UploadOapiProcessinstanceFileResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/file/upload", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据时间范围查询群直播信息
     * @param ListbytimeOapiLiveGroupliveRequest $request
     * @return ListbytimeOapiLiveGroupliveResponse
     */
    public function listbytimeOapiLiveGrouplive($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbytimeOapiLiveGroupliveEx($request, $runtime);
    }

    /**
     * Description: 根据时间范围查询群直播信息
     * @param ListbytimeOapiLiveGroupliveRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbytimeOapiLiveGroupliveResponse
     */
    public function listbytimeOapiLiveGroupliveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbytimeOapiLiveGroupliveResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/grouplive/listbytime", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取审批单文件下载授权
     * @param DownloadOapiProcessinstanceFileRequest $request
     * @return DownloadOapiProcessinstanceFileResponse
     */
    public function downloadOapiProcessinstanceFile($request){
        $runtime = new RuntimeOptions([]);
        return $this->downloadOapiProcessinstanceFileEx($request, $runtime);
    }

    /**
     * Description: 获取审批单文件下载授权
     * @param DownloadOapiProcessinstanceFileRequest $request
     * @param RuntimeOptions $runtime
     * @return DownloadOapiProcessinstanceFileResponse
     */
    public function downloadOapiProcessinstanceFileEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DownloadOapiProcessinstanceFileResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/file/download", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询审批钉盘空间信息
     * @param InfoOapiProcessinstanceCspaceRequest $request
     * @return InfoOapiProcessinstanceCspaceResponse
     */
    public function infoOapiProcessinstanceCspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->infoOapiProcessinstanceCspaceEx($request, $runtime);
    }

    /**
     * Description: 查询审批钉盘空间信息
     * @param InfoOapiProcessinstanceCspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return InfoOapiProcessinstanceCspaceResponse
     */
    public function infoOapiProcessinstanceCspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InfoOapiProcessinstanceCspaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/cspace/info", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新人脸识别组的人员，如新增人员、移除人员
     * @param UpdateOapiSmartdeviceFacegroupMemberRequest $request
     * @return UpdateOapiSmartdeviceFacegroupMemberResponse
     */
    public function updateOapiSmartdeviceFacegroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartdeviceFacegroupMemberEx($request, $runtime);
    }

    /**
     * Description: 更新人脸识别组的人员，如新增人员、移除人员
     * @param UpdateOapiSmartdeviceFacegroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartdeviceFacegroupMemberResponse
     */
    public function updateOapiSmartdeviceFacegroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartdeviceFacegroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/member/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询已在识别组的人员列表
     * @param ListOapiSmartdeviceFacegroupMemberRequest $request
     * @return ListOapiSmartdeviceFacegroupMemberResponse
     */
    public function listOapiSmartdeviceFacegroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiSmartdeviceFacegroupMemberEx($request, $runtime);
    }

    /**
     * Description: 查询已在识别组的人员列表
     * @param ListOapiSmartdeviceFacegroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiSmartdeviceFacegroupMemberResponse
     */
    public function listOapiSmartdeviceFacegroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiSmartdeviceFacegroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/member/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新人脸识别组绑定是设备，如新增、移除关联的设备
     * @param UpdateOapiSmartdeviceFacegroupDeviceRequest $request
     * @return UpdateOapiSmartdeviceFacegroupDeviceResponse
     */
    public function updateOapiSmartdeviceFacegroupDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartdeviceFacegroupDeviceEx($request, $runtime);
    }

    /**
     * Description: 更新人脸识别组绑定是设备，如新增、移除关联的设备
     * @param UpdateOapiSmartdeviceFacegroupDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartdeviceFacegroupDeviceResponse
     */
    public function updateOapiSmartdeviceFacegroupDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartdeviceFacegroupDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/device/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询直播详情信息
     * @param GetOapiLiveGroupliveDetailRequest $request
     * @return GetOapiLiveGroupliveDetailResponse
     */
    public function getOapiLiveGroupliveDetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiLiveGroupliveDetailEx($request, $runtime);
    }

    /**
     * Description: 查询直播详情信息
     * @param GetOapiLiveGroupliveDetailRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiLiveGroupliveDetailResponse
     */
    public function getOapiLiveGroupliveDetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiLiveGroupliveDetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/grouplive/detail/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询人脸设备列表，可选择查询已关联设备列表、或企业已有设备的列表
     * @param ListOapiSmartdeviceFacegroupDeviceRequest $request
     * @return ListOapiSmartdeviceFacegroupDeviceResponse
     */
    public function listOapiSmartdeviceFacegroupDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiSmartdeviceFacegroupDeviceEx($request, $runtime);
    }

    /**
     * Description: 查询人脸设备列表，可选择查询已关联设备列表、或企业已有设备的列表
     * @param ListOapiSmartdeviceFacegroupDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiSmartdeviceFacegroupDeviceResponse
     */
    public function listOapiSmartdeviceFacegroupDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiSmartdeviceFacegroupDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/device/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过业务id查询识别组基础信息
     * @param GetOapiSmartdeviceFacegroupRequest $request
     * @return GetOapiSmartdeviceFacegroupResponse
     */
    public function getOapiSmartdeviceFacegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiSmartdeviceFacegroupEx($request, $runtime);
    }

    /**
     * Description: 通过业务id查询识别组基础信息
     * @param GetOapiSmartdeviceFacegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiSmartdeviceFacegroupResponse
     */
    public function getOapiSmartdeviceFacegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiSmartdeviceFacegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建人脸识别组基础信息
     * @param CreateOapiSmartdeviceFacegroupRequest $request
     * @return CreateOapiSmartdeviceFacegroupResponse
     */
    public function createOapiSmartdeviceFacegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiSmartdeviceFacegroupEx($request, $runtime);
    }

    /**
     * Description: 创建人脸识别组基础信息
     * @param CreateOapiSmartdeviceFacegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiSmartdeviceFacegroupResponse
     */
    public function createOapiSmartdeviceFacegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiSmartdeviceFacegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新人脸识别组基础信息
     * @param UpdateOapiSmartdeviceFacegroupRequest $request
     * @return UpdateOapiSmartdeviceFacegroupResponse
     */
    public function updateOapiSmartdeviceFacegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartdeviceFacegroupEx($request, $runtime);
    }

    /**
     * Description: 更新人脸识别组基础信息
     * @param UpdateOapiSmartdeviceFacegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartdeviceFacegroupResponse
     */
    public function updateOapiSmartdeviceFacegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartdeviceFacegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 启用/禁用当前识别组的人脸识别功能
     * @param EnableOapiSmartdeviceFacegroupRequest $request
     * @return EnableOapiSmartdeviceFacegroupResponse
     */
    public function enableOapiSmartdeviceFacegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->enableOapiSmartdeviceFacegroupEx($request, $runtime);
    }

    /**
     * Description: 启用/禁用当前识别组的人脸识别功能
     * @param EnableOapiSmartdeviceFacegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return EnableOapiSmartdeviceFacegroupResponse
     */
    public function enableOapiSmartdeviceFacegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return EnableOapiSmartdeviceFacegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/enable", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除人脸识别组，并解绑关联数据（人员、M2绑定关系等）
     * @param RemoveallOapiSmartdeviceFacegroupRequest $request
     * @return RemoveallOapiSmartdeviceFacegroupResponse
     */
    public function removeallOapiSmartdeviceFacegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeallOapiSmartdeviceFacegroupEx($request, $runtime);
    }

    /**
     * Description: 删除人脸识别组，并解绑关联数据（人员、M2绑定关系等）
     * @param RemoveallOapiSmartdeviceFacegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveallOapiSmartdeviceFacegroupResponse
     */
    public function removeallOapiSmartdeviceFacegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveallOapiSmartdeviceFacegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/facegroup/removeall", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业或isv调用该api，来发起一个审批实例
     * @param CreateSmartworkBpmsProcessinstanceRequest $request
     * @return CreateSmartworkBpmsProcessinstanceResponse
     */
    public function createSmartworkBpmsProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->createSmartworkBpmsProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 企业或isv调用该api，来发起一个审批实例
     * @param CreateSmartworkBpmsProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateSmartworkBpmsProcessinstanceResponse
     */
    public function createSmartworkBpmsProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateSmartworkBpmsProcessinstanceResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstance.create", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取角色详情
     * @param GetroleOapiRoleRequest $request
     * @return GetroleOapiRoleResponse
     */
    public function getroleOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->getroleOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 获取角色详情
     * @param GetroleOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return GetroleOapiRoleResponse
     */
    public function getroleOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetroleOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/getrole", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业会话消息异步发送接口
     * @param Asyncsend_v2OapiMessageCorpconversationRequest $request
     * @return Asyncsend_v2OapiMessageCorpconversationResponse
     */
    public function asyncsend_v2OapiMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsend_v2OapiMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 企业会话消息异步发送接口
     * @param Asyncsend_v2OapiMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return Asyncsend_v2OapiMessageCorpconversationResponse
     */
    public function asyncsend_v2OapiMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Asyncsend_v2OapiMessageCorpconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/corpconversation/asyncsend_v2", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用于更新加密盒子状态，1表示盒子掉线，2表示盒子上线，3表示企业之前有盒子，现在变成了无盒子的状态
     * @param UpdateOapiOpenencryptEncryptboxStatusRequest $request
     * @return UpdateOapiOpenencryptEncryptboxStatusResponse
     */
    public function updateOapiOpenencryptEncryptboxStatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiOpenencryptEncryptboxStatusEx($request, $runtime);
    }

    /**
     * Description: 用于更新加密盒子状态，1表示盒子掉线，2表示盒子上线，3表示企业之前有盒子，现在变成了无盒子的状态
     * @param UpdateOapiOpenencryptEncryptboxStatusRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiOpenencryptEncryptboxStatusResponse
     */
    public function updateOapiOpenencryptEncryptboxStatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiOpenencryptEncryptboxStatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/openencrypt/encryptbox/status/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 取消任务隐藏限制，将某企业下用户新参与的任务加入用户任务列表（推荐使用场景：用户重新加入企业时调用）
     * @param CancelOapiWorkspaceTasklistHiddenRequest $request
     * @return CancelOapiWorkspaceTasklistHiddenResponse
     */
    public function cancelOapiWorkspaceTasklistHidden($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiWorkspaceTasklistHiddenEx($request, $runtime);
    }

    /**
     * Description: 取消任务隐藏限制，将某企业下用户新参与的任务加入用户任务列表（推荐使用场景：用户重新加入企业时调用）
     * @param CancelOapiWorkspaceTasklistHiddenRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiWorkspaceTasklistHiddenResponse
     */
    public function cancelOapiWorkspaceTasklistHiddenEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiWorkspaceTasklistHiddenResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/tasklist/hidden/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 取消任务隐藏限制，将某企业下用户新参与的任务加入用户任务列表（推荐使用场景：用户重新加入企业时调用）
     * @param CancelOapiTdpTasklistHiddenRequest $request
     * @return CancelOapiTdpTasklistHiddenResponse
     */
    public function cancelOapiTdpTasklistHidden($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiTdpTasklistHiddenEx($request, $runtime);
    }

    /**
     * Description: 取消任务隐藏限制，将某企业下用户新参与的任务加入用户任务列表（推荐使用场景：用户重新加入企业时调用）
     * @param CancelOapiTdpTasklistHiddenRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiTdpTasklistHiddenResponse
     */
    public function cancelOapiTdpTasklistHiddenEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiTdpTasklistHiddenResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/tasklist/hidden/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 取消工序执行
     * @param CancelOapiRhinoMosExecPerformRequest $request
     * @return CancelOapiRhinoMosExecPerformResponse
     */
    public function cancelOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 取消工序执行
     * @param CancelOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiRhinoMosExecPerformResponse
     */
    public function cancelOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，由客户主动关闭会话等场景
     * @param CloseOapiCustomerserviceSessionRequest $request
     * @return CloseOapiCustomerserviceSessionResponse
     */
    public function closeOapiCustomerserviceSession($request){
        $runtime = new RuntimeOptions([]);
        return $this->closeOapiCustomerserviceSessionEx($request, $runtime);
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，由客户主动关闭会话等场景
     * @param CloseOapiCustomerserviceSessionRequest $request
     * @param RuntimeOptions $runtime
     * @return CloseOapiCustomerserviceSessionResponse
     */
    public function closeOapiCustomerserviceSessionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CloseOapiCustomerserviceSessionResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/session/close", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉智能人事开放接口-更新员工绩效信息
     * @param SetuserworkdataCorpHrmEmployeeRequest $request
     * @return SetuserworkdataCorpHrmEmployeeResponse
     */
    public function setuserworkdataCorpHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->setuserworkdataCorpHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 钉钉智能人事开放接口-更新员工绩效信息
     * @param SetuserworkdataCorpHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return SetuserworkdataCorpHrmEmployeeResponse
     */
    public function setuserworkdataCorpHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetuserworkdataCorpHrmEmployeeResponse::fromMap($this->doRequest("dingtalk.corp.hrm.employee.setuserworkdata", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，由客户向客服发送钉钉消息
     * @param SendOapiCustomerserviceMessageRequest $request
     * @return SendOapiCustomerserviceMessageResponse
     */
    public function sendOapiCustomerserviceMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiCustomerserviceMessageEx($request, $runtime);
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，由客户向客服发送钉钉消息
     * @param SendOapiCustomerserviceMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiCustomerserviceMessageResponse
     */
    public function sendOapiCustomerserviceMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiCustomerserviceMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/message/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加执行上下文
     * @param AddOapiRhinoMosExecPerformContextRequest $request
     * @return AddOapiRhinoMosExecPerformContextResponse
     */
    public function addOapiRhinoMosExecPerformContext($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiRhinoMosExecPerformContextEx($request, $runtime);
    }

    /**
     * Description: 添加执行上下文
     * @param AddOapiRhinoMosExecPerformContextRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiRhinoMosExecPerformContextResponse
     */
    public function addOapiRhinoMosExecPerformContextEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiRhinoMosExecPerformContextResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/context/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，由客户向客服发起会话请求
     * @param CreateOapiCustomerserviceSessionRequest $request
     * @return CreateOapiCustomerserviceSessionResponse
     */
    public function createOapiCustomerserviceSession($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCustomerserviceSessionEx($request, $runtime);
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，由客户向客服发起会话请求
     * @param CreateOapiCustomerserviceSessionRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCustomerserviceSessionResponse
     */
    public function createOapiCustomerserviceSessionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCustomerserviceSessionResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/session/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 验证个人手机号
     * @param Verify_mobileOapiSnsRequest $request
     * @return Verify_mobileOapiSnsResponse
     */
    public function verify_mobileOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->verify_mobileOapiSnsEx($request, $runtime);
    }

    /**
     * Description: 验证个人手机号
     * @param Verify_mobileOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return Verify_mobileOapiSnsResponse
     */
    public function verify_mobileOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Verify_mobileOapiSnsResponse::fromMap($this->doRequestOApi("POST", "/topapi/sns/verify_mobile", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页查询衣服ID
     * @param ListbypageOapiRhinoMosExecClothesIdRequest $request
     * @return ListbypageOapiRhinoMosExecClothesIdResponse
     */
    public function listbypageOapiRhinoMosExecClothesId($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbypageOapiRhinoMosExecClothesIdEx($request, $runtime);
    }

    /**
     * Description: 分页查询衣服ID
     * @param ListbypageOapiRhinoMosExecClothesIdRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbypageOapiRhinoMosExecClothesIdResponse
     */
    public function listbypageOapiRhinoMosExecClothesIdEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbypageOapiRhinoMosExecClothesIdResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/id/listbypage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开放式组织机构专属分享二维码链接
     * @param GetOapiProjectInviteShareurlRequest $request
     * @return GetOapiProjectInviteShareurlResponse
     */
    public function getOapiProjectInviteShareurl($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiProjectInviteShareurlEx($request, $runtime);
    }

    /**
     * Description: 开放式组织机构专属分享二维码链接
     * @param GetOapiProjectInviteShareurlRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiProjectInviteShareurlResponse
     */
    public function getOapiProjectInviteShareurlEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiProjectInviteShareurlResponse::fromMap($this->doRequestOApi("POST", "/topapi/project/invite/shareurl/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开放式组织机构成员邀请关系查询
     * @param QueryOapiProjectInviteDataRequest $request
     * @return QueryOapiProjectInviteDataResponse
     */
    public function queryOapiProjectInviteData($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiProjectInviteDataEx($request, $runtime);
    }

    /**
     * Description: 开放式组织机构成员邀请关系查询
     * @param QueryOapiProjectInviteDataRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiProjectInviteDataResponse
     */
    public function queryOapiProjectInviteDataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiProjectInviteDataResponse::fromMap($this->doRequestOApi("POST", "/topapi/project/invite/data/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业解除授权后，isv按企业清理历史任务数据
     * @param CleanOapiWorkspaceTaskRequest $request
     * @return CleanOapiWorkspaceTaskResponse
     */
    public function cleanOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->cleanOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 企业解除授权后，isv按企业清理历史任务数据
     * @param CleanOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return CleanOapiWorkspaceTaskResponse
     */
    public function cleanOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CleanOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/clean", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询多个用户一段时间范围内的签到记录，只给企业调用，ISV无法调用。
     * 接口里面的经纬度等敏感数据如需使用，请到开放平台首页通过支持中心提工单
     * @param GetSmartworkCheckinRecordRequest $request
     * @return GetSmartworkCheckinRecordResponse
     */
    public function getSmartworkCheckinRecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->getSmartworkCheckinRecordEx($request, $runtime);
    }

    /**
     * Description: 查询多个用户一段时间范围内的签到记录，只给企业调用，ISV无法调用。
     * 接口里面的经纬度等敏感数据如需使用，请到开放平台首页通过支持中心提工单
     * @param GetSmartworkCheckinRecordRequest $request
     * @param RuntimeOptions $runtime
     * @return GetSmartworkCheckinRecordResponse
     */
    public function getSmartworkCheckinRecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetSmartworkCheckinRecordResponse::fromMap($this->doRequest("dingtalk.smartwork.checkin.record.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 结构化图片识别能力接口
     * @param RecognizeOapiOcrStructuredRequest $request
     * @return RecognizeOapiOcrStructuredResponse
     */
    public function recognizeOapiOcrStructured($request){
        $runtime = new RuntimeOptions([]);
        return $this->recognizeOapiOcrStructuredEx($request, $runtime);
    }

    /**
     * Description: 结构化图片识别能力接口
     * @param RecognizeOapiOcrStructuredRequest $request
     * @param RuntimeOptions $runtime
     * @return RecognizeOapiOcrStructuredResponse
     */
    public function recognizeOapiOcrStructuredEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecognizeOapiOcrStructuredResponse::fromMap($this->doRequestOApi("POST", "/topapi/ocr/structured/recognize", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 保存审批模板
     * @param SaveOapiProcessRequest $request
     * @return SaveOapiProcessResponse
     */
    public function saveOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->saveOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 保存审批模板
     * @param SaveOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return SaveOapiProcessResponse
     */
    public function saveOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SaveOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/save", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询已设置为条件的表单组件
     * @param ListOapiProcessFormConditionRequest $request
     * @return ListOapiProcessFormConditionResponse
     */
    public function listOapiProcessFormCondition($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiProcessFormConditionEx($request, $runtime);
    }

    /**
     * Description: 查询已设置为条件的表单组件
     * @param ListOapiProcessFormConditionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiProcessFormConditionResponse
     */
    public function listOapiProcessFormConditionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiProcessFormConditionResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/form/condition/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口提供了重新为某个卡点进行打卡的能力。在某个卡点缺卡，早退，迟到等异常情况下企业内部或者isv审批单通过后，调用该接口，可以重新用审批单里指定的时间进行一次打卡
     * @param CheckOapiAttendanceApproveRequest $request
     * @return CheckOapiAttendanceApproveResponse
     */
    public function checkOapiAttendanceApprove($request){
        $runtime = new RuntimeOptions([]);
        return $this->checkOapiAttendanceApproveEx($request, $runtime);
    }

    /**
     * Description: 该接口提供了重新为某个卡点进行打卡的能力。在某个卡点缺卡，早退，迟到等异常情况下企业内部或者isv审批单通过后，调用该接口，可以重新用审批单里指定的时间进行一次打卡
     * @param CheckOapiAttendanceApproveRequest $request
     * @param RuntimeOptions $runtime
     * @return CheckOapiAttendanceApproveResponse
     */
    public function checkOapiAttendanceApproveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CheckOapiAttendanceApproveResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/approve/check", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据日期查询企业下未活跃用户列表数据
     * @param GetOapiInactiveUserRequest $request
     * @return GetOapiInactiveUserResponse
     */
    public function getOapiInactiveUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiInactiveUserEx($request, $runtime);
    }

    /**
     * Description: 根据日期查询企业下未活跃用户列表数据
     * @param GetOapiInactiveUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiInactiveUserResponse
     */
    public function getOapiInactiveUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiInactiveUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/inactive/user/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用户画像,包括用户性别，工作行业属性等
     * @param GetCorpUserPersonainfoRequest $request
     * @return GetCorpUserPersonainfoResponse
     */
    public function getCorpUserPersonainfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCorpUserPersonainfoEx($request, $runtime);
    }

    /**
     * Description: 用户画像,包括用户性别，工作行业属性等
     * @param GetCorpUserPersonainfoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCorpUserPersonainfoResponse
     */
    public function getCorpUserPersonainfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetCorpUserPersonainfoResponse::fromMap($this->doRequest("dingtalk.corp.user.personainfo.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建MCS视频会议并获取会议码以用于钉钉入会
     * @param CreateOapiMcsConferenceRequest $request
     * @return CreateOapiMcsConferenceResponse
     */
    public function createOapiMcsConference($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiMcsConferenceEx($request, $runtime);
    }

    /**
     * Description: 创建MCS视频会议并获取会议码以用于钉钉入会
     * @param CreateOapiMcsConferenceRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiMcsConferenceResponse
     */
    public function createOapiMcsConferenceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiMcsConferenceResponse::fromMap($this->doRequestOApi("POST", "/topapi/mcs/conference/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 读取钉钉CRM跟进记录对象的元数据描述
     * @param DescribeOapiCrmObjectmetaFollowrecordRequest $request
     * @return DescribeOapiCrmObjectmetaFollowrecordResponse
     */
    public function describeOapiCrmObjectmetaFollowrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->describeOapiCrmObjectmetaFollowrecordEx($request, $runtime);
    }

    /**
     * Description: 读取钉钉CRM跟进记录对象的元数据描述
     * @param DescribeOapiCrmObjectmetaFollowrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return DescribeOapiCrmObjectmetaFollowrecordResponse
     */
    public function describeOapiCrmObjectmetaFollowrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return DescribeOapiCrmObjectmetaFollowrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectmeta/followrecord/describe", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 读取钉钉CRM联系人对象的元数据描述
     * @param DescribeOapiCrmObjectmetaContactRequest $request
     * @return DescribeOapiCrmObjectmetaContactResponse
     */
    public function describeOapiCrmObjectmetaContact($request){
        $runtime = new RuntimeOptions([]);
        return $this->describeOapiCrmObjectmetaContactEx($request, $runtime);
    }

    /**
     * Description: 读取钉钉CRM联系人对象的元数据描述
     * @param DescribeOapiCrmObjectmetaContactRequest $request
     * @param RuntimeOptions $runtime
     * @return DescribeOapiCrmObjectmetaContactResponse
     */
    public function describeOapiCrmObjectmetaContactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return DescribeOapiCrmObjectmetaContactResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectmeta/contact/describe", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 读取钉钉CRM客户对象的元数据描述
     * @param DescribeOapiCrmObjectmetaCustomerRequest $request
     * @return DescribeOapiCrmObjectmetaCustomerResponse
     */
    public function describeOapiCrmObjectmetaCustomer($request){
        $runtime = new RuntimeOptions([]);
        return $this->describeOapiCrmObjectmetaCustomerEx($request, $runtime);
    }

    /**
     * Description: 读取钉钉CRM客户对象的元数据描述
     * @param DescribeOapiCrmObjectmetaCustomerRequest $request
     * @param RuntimeOptions $runtime
     * @return DescribeOapiCrmObjectmetaCustomerResponse
     */
    public function describeOapiCrmObjectmetaCustomerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return DescribeOapiCrmObjectmetaCustomerResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectmeta/customer/describe", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV基于此API可获取授权企业员工在指定算法模型下的人脸特征(非照片)，供设备进行人脸识别比对
     * @param FeatureOapiSmartdeviceFaceRequest $request
     * @return FeatureOapiSmartdeviceFaceResponse
     */
    public function featureOapiSmartdeviceFace($request){
        $runtime = new RuntimeOptions([]);
        return $this->featureOapiSmartdeviceFaceEx($request, $runtime);
    }

    /**
     * Description: ISV基于此API可获取授权企业员工在指定算法模型下的人脸特征(非照片)，供设备进行人脸识别比对
     * @param FeatureOapiSmartdeviceFaceRequest $request
     * @param RuntimeOptions $runtime
     * @return FeatureOapiSmartdeviceFaceResponse
     */
    public function featureOapiSmartdeviceFaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FeatureOapiSmartdeviceFaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/face/feature", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV调用该心跳接口，表明自己存活状态
     * @param HeartbeatOapiOpenencryptRequest $request
     * @return HeartbeatOapiOpenencryptResponse
     */
    public function heartbeatOapiOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->heartbeatOapiOpenencryptEx($request, $runtime);
    }

    /**
     * Description: ISV调用该心跳接口，表明自己存活状态
     * @param HeartbeatOapiOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return HeartbeatOapiOpenencryptResponse
     */
    public function heartbeatOapiOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HeartbeatOapiOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/openencrypt/heartbeat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取权限组成员接口
     * @param ListOapiCrmAuthGroupMemberRequest $request
     * @return ListOapiCrmAuthGroupMemberResponse
     */
    public function listOapiCrmAuthGroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmAuthGroupMemberEx($request, $runtime);
    }

    /**
     * Description: 获取权限组成员接口
     * @param ListOapiCrmAuthGroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmAuthGroupMemberResponse
     */
    public function listOapiCrmAuthGroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCrmAuthGroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/auth/group/member/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新审批实例的表单值
     * @param UpdatevariablesSmartworkBpmsProcessinstanceRequest $request
     * @return UpdatevariablesSmartworkBpmsProcessinstanceResponse
     */
    public function updatevariablesSmartworkBpmsProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->updatevariablesSmartworkBpmsProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 更新审批实例的表单值
     * @param UpdatevariablesSmartworkBpmsProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdatevariablesSmartworkBpmsProcessinstanceResponse
     */
    public function updatevariablesSmartworkBpmsProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdatevariablesSmartworkBpmsProcessinstanceResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstance.updatevariables", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据权限组id获取具体权限内容
     * @param ListOapiCrmAuthGroupPermissionRequest $request
     * @return ListOapiCrmAuthGroupPermissionResponse
     */
    public function listOapiCrmAuthGroupPermission($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmAuthGroupPermissionEx($request, $runtime);
    }

    /**
     * Description: 根据权限组id获取具体权限内容
     * @param ListOapiCrmAuthGroupPermissionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmAuthGroupPermissionResponse
     */
    public function listOapiCrmAuthGroupPermissionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCrmAuthGroupPermissionResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/auth/group/permission/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取审批实例的详情和表单信息
     * @param GetwithformSmartworkBpmsProcessinstanceRequest $request
     * @return GetwithformSmartworkBpmsProcessinstanceResponse
     */
    public function getwithformSmartworkBpmsProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getwithformSmartworkBpmsProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 获取审批实例的详情和表单信息
     * @param GetwithformSmartworkBpmsProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetwithformSmartworkBpmsProcessinstanceResponse
     */
    public function getwithformSmartworkBpmsProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetwithformSmartworkBpmsProcessinstanceResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstance.getwithform", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在开通高级版之后，通过该接口获取一个企业的crm权限组id列表。不涉及业务数据和权限组详情
     * @param ListOapiCrmAuthGroupRequest $request
     * @return ListOapiCrmAuthGroupResponse
     */
    public function listOapiCrmAuthGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmAuthGroupEx($request, $runtime);
    }

    /**
     * Description: 在开通高级版之后，通过该接口获取一个企业的crm权限组id列表。不涉及业务数据和权限组详情
     * @param ListOapiCrmAuthGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmAuthGroupResponse
     */
    public function listOapiCrmAuthGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ListOapiCrmAuthGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/auth/group/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ding任务创建。不过会有一些限制，只能发送文本任务，不能设置抄送人，只能有一个任务执行人。
     * @param CreateCorpDingTaskRequest $request
     * @return CreateCorpDingTaskResponse
     */
    public function createCorpDingTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->createCorpDingTaskEx($request, $runtime);
    }

    /**
     * Description: ding任务创建。不过会有一些限制，只能发送文本任务，不能设置抄送人，只能有一个任务执行人。
     * @param CreateCorpDingTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateCorpDingTaskResponse
     */
    public function createCorpDingTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateCorpDingTaskResponse::fromMap($this->doRequest("dingtalk.corp.ding.task.create", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建CRM客户群，并将企业员工以及客户联系人拉到客户群。
     * @param CreateOapiCrmGroupRequest $request
     * @return CreateOapiCrmGroupResponse
     */
    public function createOapiCrmGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCrmGroupEx($request, $runtime);
    }

    /**
     * Description: 创建CRM客户群，并将企业员工以及客户联系人拉到客户群。
     * @param CreateOapiCrmGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCrmGroupResponse
     */
    public function createOapiCrmGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCrmGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/group/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 指定模板、实例、节点id和审批人，对某个审批节点进行审批。 模板是企业在审批后台编辑好的，审批实例通过开放平台回调获取到，并可通过开放接口读取到审批节点id和审批人
     * @param ExecuteOapiProcessinstanceRequest $request
     * @return ExecuteOapiProcessinstanceResponse
     */
    public function executeOapiProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->executeOapiProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 指定模板、实例、节点id和审批人，对某个审批节点进行审批。 模板是企业在审批后台编辑好的，审批实例通过开放平台回调获取到，并可通过开放接口读取到审批节点id和审批人
     * @param ExecuteOapiProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ExecuteOapiProcessinstanceResponse
     */
    public function executeOapiProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ExecuteOapiProcessinstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/execute", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据联系人实例id列表批量获取联系人数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataContactRequest $request
     * @return ListOapiCrmObjectdataContactResponse
     */
    public function listOapiCrmObjectdataContact($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmObjectdataContactEx($request, $runtime);
    }

    /**
     * Description: 根据联系人实例id列表批量获取联系人数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataContactRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmObjectdataContactResponse
     */
    public function listOapiCrmObjectdataContactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCrmObjectdataContactResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/contact/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据指定查询条件批量获取跟进记录数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataFollowrecordRequest $request
     * @return QueryOapiCrmObjectdataFollowrecordResponse
     */
    public function queryOapiCrmObjectdataFollowrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCrmObjectdataFollowrecordEx($request, $runtime);
    }

    /**
     * Description: 根据指定查询条件批量获取跟进记录数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataFollowrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCrmObjectdataFollowrecordResponse
     */
    public function queryOapiCrmObjectdataFollowrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCrmObjectdataFollowrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/followrecord/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据实例ID列表批量获取客户记录数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataCustomerRequest $request
     * @return ListOapiCrmObjectdataCustomerResponse
     */
    public function listOapiCrmObjectdataCustomer($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmObjectdataCustomerEx($request, $runtime);
    }

    /**
     * Description: 根据实例ID列表批量获取客户记录数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataCustomerRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmObjectdataCustomerResponse
     */
    public function listOapiCrmObjectdataCustomerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCrmObjectdataCustomerResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/customer/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据指定查询条件批量获取客户数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataCustomerRequest $request
     * @return QueryOapiCrmObjectdataCustomerResponse
     */
    public function queryOapiCrmObjectdataCustomer($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCrmObjectdataCustomerEx($request, $runtime);
    }

    /**
     * Description: 根据指定查询条件批量获取客户数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataCustomerRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCrmObjectdataCustomerResponse
     */
    public function queryOapiCrmObjectdataCustomerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCrmObjectdataCustomerResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/customer/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据指定查询条件批量获取联系人数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataContanctRequest $request
     * @return QueryOapiCrmObjectdataContanctResponse
     */
    public function queryOapiCrmObjectdataContanct($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCrmObjectdataContanctEx($request, $runtime);
    }

    /**
     * Description: 根据指定查询条件批量获取联系人数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataContanctRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCrmObjectdataContanctResponse
     */
    public function queryOapiCrmObjectdataContanctEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCrmObjectdataContanctResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/contanct/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据实例ID列表批量获取跟进记录数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataFollowrecordRequest $request
     * @return ListOapiCrmObjectdataFollowrecordResponse
     */
    public function listOapiCrmObjectdataFollowrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmObjectdataFollowrecordEx($request, $runtime);
    }

    /**
     * Description: 根据实例ID列表批量获取跟进记录数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataFollowrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmObjectdataFollowrecordResponse
     */
    public function listOapiCrmObjectdataFollowrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCrmObjectdataFollowrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/followrecord/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据指定查询条件批量获取联系人数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataContactRequest $request
     * @return QueryOapiCrmObjectdataContactResponse
     */
    public function queryOapiCrmObjectdataContact($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCrmObjectdataContactEx($request, $runtime);
    }

    /**
     * Description: 根据指定查询条件批量获取联系人数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataContactRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCrmObjectdataContactResponse
     */
    public function queryOapiCrmObjectdataContactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCrmObjectdataContactResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/contact/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事更新员工档案员工信息
     * @param UpdateOapiSmartworkHrmEmployeeRequest $request
     * @return UpdateOapiSmartworkHrmEmployeeResponse
     */
    public function updateOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事更新员工档案员工信息
     * @param UpdateOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartworkHrmEmployeeResponse
     */
    public function updateOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据开放的conversationId和机器人示例userId，删除会话内机器人实例
     * @param DeleteOapiImChatbotRequest $request
     * @return DeleteOapiImChatbotResponse
     */
    public function deleteOapiImChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiImChatbotEx($request, $runtime);
    }

    /**
     * Description: 根据开放的conversationId和机器人示例userId，删除会话内机器人实例
     * @param DeleteOapiImChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiImChatbotResponse
     */
    public function deleteOapiImChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiImChatbotResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chatbot/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据开放的conversationId，获取该会话内机器人实例列表
     * @param GetOapiImChatbotRequest $request
     * @return GetOapiImChatbotResponse
     */
    public function getOapiImChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiImChatbotEx($request, $runtime);
    }

    /**
     * Description: 根据开放的conversationId，获取该会话内机器人实例列表
     * @param GetOapiImChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiImChatbotResponse
     */
    public function getOapiImChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiImChatbotResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chatbot/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据会话chatId，查询其对应的conversationId
     * @param ConvertOapiImChatCidRequest $request
     * @return ConvertOapiImChatCidResponse
     */
    public function convertOapiImChatCid($request){
        $runtime = new RuntimeOptions([]);
        return $this->convertOapiImChatCidEx($request, $runtime);
    }

    /**
     * Description: 根据会话chatId，查询其对应的conversationId
     * @param ConvertOapiImChatCidRequest $request
     * @param RuntimeOptions $runtime
     * @return ConvertOapiImChatCidResponse
     */
    public function convertOapiImChatCidEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ConvertOapiImChatCidResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/cid/convert", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据审批套件标识获取审批模板
     * @param GetbybiztypeSmartworkBpmsProcessRequest $request
     * @return GetbybiztypeSmartworkBpmsProcessResponse
     */
    public function getbybiztypeSmartworkBpmsProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbybiztypeSmartworkBpmsProcessEx($request, $runtime);
    }

    /**
     * Description: 根据审批套件标识获取审批模板
     * @param GetbybiztypeSmartworkBpmsProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbybiztypeSmartworkBpmsProcessResponse
     */
    public function getbybiztypeSmartworkBpmsProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetbybiztypeSmartworkBpmsProcessResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.process.getbybiztype", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 检测用户是否有审批模板的可用权限
     * @param GetvisibleSmartworkBpmsProcessRequest $request
     * @return GetvisibleSmartworkBpmsProcessResponse
     */
    public function getvisibleSmartworkBpmsProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->getvisibleSmartworkBpmsProcessEx($request, $runtime);
    }

    /**
     * Description: 检测用户是否有审批模板的可用权限
     * @param GetvisibleSmartworkBpmsProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return GetvisibleSmartworkBpmsProcessResponse
     */
    public function getvisibleSmartworkBpmsProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetvisibleSmartworkBpmsProcessResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.process.getvisible", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉巡店应用，巡店任务查询接口，按照部门分页查询一定时间范围的巡店任务详情。
     * @param ListOapiInspectTaskRequest $request
     * @return ListOapiInspectTaskResponse
     */
    public function listOapiInspectTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiInspectTaskEx($request, $runtime);
    }

    /**
     * Description: 钉钉巡店应用，巡店任务查询接口，按照部门分页查询一定时间范围的巡店任务详情。
     * @param ListOapiInspectTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiInspectTaskResponse
     */
    public function listOapiInspectTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiInspectTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/inspect/task/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业的会员查询其提交的工单列表
     * @param QueryOapiCustomerserviceTicketRequest $request
     * @return QueryOapiCustomerserviceTicketResponse
     */
    public function queryOapiCustomerserviceTicket($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCustomerserviceTicketEx($request, $runtime);
    }

    /**
     * Description: 企业的会员查询其提交的工单列表
     * @param QueryOapiCustomerserviceTicketRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCustomerserviceTicketResponse
     */
    public function queryOapiCustomerserviceTicketEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCustomerserviceTicketResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/ticket/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 会员查询客服和自己的对话
     * @param QueryOapiCustomerserviceActionRequest $request
     * @return QueryOapiCustomerserviceActionResponse
     */
    public function queryOapiCustomerserviceAction($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCustomerserviceActionEx($request, $runtime);
    }

    /**
     * Description: 会员查询客服和自己的对话
     * @param QueryOapiCustomerserviceActionRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCustomerserviceActionResponse
     */
    public function queryOapiCustomerserviceActionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCustomerserviceActionResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/action/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 会员执行工单上的活动，如回复、评论
     * @param ExecuteOapiCustomerserviceActivityRequest $request
     * @return ExecuteOapiCustomerserviceActivityResponse
     */
    public function executeOapiCustomerserviceActivity($request){
        $runtime = new RuntimeOptions([]);
        return $this->executeOapiCustomerserviceActivityEx($request, $runtime);
    }

    /**
     * Description: 会员执行工单上的活动，如回复、评论
     * @param ExecuteOapiCustomerserviceActivityRequest $request
     * @param RuntimeOptions $runtime
     * @return ExecuteOapiCustomerserviceActivityResponse
     */
    public function executeOapiCustomerserviceActivityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ExecuteOapiCustomerserviceActivityResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/activity/execute", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用于第三方企业的用户给其客服新建工单使用
     * @param CreateOapiCustomerserviceTicketRequest $request
     * @return CreateOapiCustomerserviceTicketResponse
     */
    public function createOapiCustomerserviceTicket($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCustomerserviceTicketEx($request, $runtime);
    }

    /**
     * Description: 用于第三方企业的用户给其客服新建工单使用
     * @param CreateOapiCustomerserviceTicketRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCustomerserviceTicketResponse
     */
    public function createOapiCustomerserviceTicketEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCustomerserviceTicketResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/ticket/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新角色成员管理范围，指定企业成员在角色下管理部门的范围
     * @param UpdateOapiRoleScopeRequest $request
     * @return UpdateOapiRoleScopeResponse
     */
    public function updateOapiRoleScope($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiRoleScopeEx($request, $runtime);
    }

    /**
     * Description: 更新角色成员管理范围，指定企业成员在角色下管理部门的范围
     * @param UpdateOapiRoleScopeRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiRoleScopeResponse
     */
    public function updateOapiRoleScopeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiRoleScopeResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/scope/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 颁发给isv机器人消息批量推送id
     * @param GetpushidOapiRobotMessageRequest $request
     * @return GetpushidOapiRobotMessageResponse
     */
    public function getpushidOapiRobotMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->getpushidOapiRobotMessageEx($request, $runtime);
    }

    /**
     * Description: 颁发给isv机器人消息批量推送id
     * @param GetpushidOapiRobotMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return GetpushidOapiRobotMessageResponse
     */
    public function getpushidOapiRobotMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetpushidOapiRobotMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/getpushid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询家校用户角色班级对应关系
     * @param GetOapiEduRolesRequest $request
     * @return GetOapiEduRolesResponse
     */
    public function getOapiEduRoles($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduRolesEx($request, $runtime);
    }

    /**
     * Description: 查询家校用户角色班级对应关系
     * @param GetOapiEduRolesRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduRolesResponse
     */
    public function getOapiEduRolesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduRolesResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/roles/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业下文件操作日志列表
     * @param ListOapiCspaceAuditlogRequest $request
     * @return ListOapiCspaceAuditlogResponse
     */
    public function listOapiCspaceAuditlog($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCspaceAuditlogEx($request, $runtime);
    }

    /**
     * Description: 获取企业下文件操作日志列表
     * @param ListOapiCspaceAuditlogRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCspaceAuditlogResponse
     */
    public function listOapiCspaceAuditlogEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCspaceAuditlogResponse::fromMap($this->doRequestOApi("POST", "/topapi/cspace/auditlog/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取审批实例ID列表
     * @param ListSmartworkBpmsProcessinstanceidRequest $request
     * @return ListSmartworkBpmsProcessinstanceidResponse
     */
    public function listSmartworkBpmsProcessinstanceid($request){
        $runtime = new RuntimeOptions([]);
        return $this->listSmartworkBpmsProcessinstanceidEx($request, $runtime);
    }

    /**
     * Description: 获取审批实例ID列表
     * @param ListSmartworkBpmsProcessinstanceidRequest $request
     * @param RuntimeOptions $runtime
     * @return ListSmartworkBpmsProcessinstanceidResponse
     */
    public function listSmartworkBpmsProcessinstanceidEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListSmartworkBpmsProcessinstanceidResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstanceid.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV批量获取离职员工的通讯录花名册字段信息
     * @param ListcontactOapiSmartworkHrmEmployeeRequest $request
     * @return ListcontactOapiSmartworkHrmEmployeeResponse
     */
    public function listcontactOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->listcontactOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: ISV批量获取离职员工的通讯录花名册字段信息
     * @param ListcontactOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListcontactOapiSmartworkHrmEmployeeResponse
     */
    public function listcontactOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListcontactOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/listcontact", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业查询自己企业内服务群的信息，会把服务群的群主信息，dingtalkid，nick，真实姓名和群名称返回。
     * @param GetOapiCcoserviceServicegroupRequest $request
     * @return GetOapiCcoserviceServicegroupResponse
     */
    public function getOapiCcoserviceServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCcoserviceServicegroupEx($request, $runtime);
    }

    /**
     * Description: 企业查询自己企业内服务群的信息，会把服务群的群主信息，dingtalkid，nick，真实姓名和群名称返回。
     * @param GetOapiCcoserviceServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCcoserviceServicegroupResponse
     */
    public function getOapiCcoserviceServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCcoserviceServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/ccoservice/servicegroup/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV通过该接口可以获取pushid维度的机器人消息批量推送统计数据
     * @param ListbypushidOapiRobotMessageStatisticsRequest $request
     * @return ListbypushidOapiRobotMessageStatisticsResponse
     */
    public function listbypushidOapiRobotMessageStatistics($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbypushidOapiRobotMessageStatisticsEx($request, $runtime);
    }

    /**
     * Description: ISV通过该接口可以获取pushid维度的机器人消息批量推送统计数据
     * @param ListbypushidOapiRobotMessageStatisticsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbypushidOapiRobotMessageStatisticsResponse
     */
    public function listbypushidOapiRobotMessageStatisticsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbypushidOapiRobotMessageStatisticsResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/statistics/listbypushid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV通过该接口可以获取机器人消息批量推送统计数据
     * @param ListOapiRobotMessageStatisticsRequest $request
     * @return ListOapiRobotMessageStatisticsResponse
     */
    public function listOapiRobotMessageStatistics($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRobotMessageStatisticsEx($request, $runtime);
    }

    /**
     * Description: ISV通过该接口可以获取机器人消息批量推送统计数据
     * @param ListOapiRobotMessageStatisticsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRobotMessageStatisticsResponse
     */
    public function listOapiRobotMessageStatisticsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRobotMessageStatisticsResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/statistics/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 指定模板、实例、节点id和审批人，对某个审批节点进行审批。 模板是企业在审批后台编辑好的，审批实例通过开放平台回调获取到，并可通过开放接口读取到审批节点id和审批人
     * @param ExecuteSmartworkBpmsProcessinstanceRequest $request
     * @return ExecuteSmartworkBpmsProcessinstanceResponse
     */
    public function executeSmartworkBpmsProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->executeSmartworkBpmsProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 指定模板、实例、节点id和审批人，对某个审批节点进行审批。 模板是企业在审批后台编辑好的，审批实例通过开放平台回调获取到，并可通过开放接口读取到审批节点id和审批人
     * @param ExecuteSmartworkBpmsProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ExecuteSmartworkBpmsProcessinstanceResponse
     */
    public function executeSmartworkBpmsProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ExecuteSmartworkBpmsProcessinstanceResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstance.execute", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建一个服务群
     * @param CreateOapiImChatServicegroupRequest $request
     * @return CreateOapiImChatServicegroupResponse
     */
    public function createOapiImChatServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiImChatServicegroupEx($request, $runtime);
    }

    /**
     * Description: 创建一个服务群
     * @param CreateOapiImChatServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiImChatServicegroupResponse
     */
    public function createOapiImChatServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiImChatServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 解散一个服务群
     * @param DisbandOapiImChatServicegroupRequest $request
     * @return DisbandOapiImChatServicegroupResponse
     */
    public function disbandOapiImChatServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->disbandOapiImChatServicegroupEx($request, $runtime);
    }

    /**
     * Description: 解散一个服务群
     * @param DisbandOapiImChatServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return DisbandOapiImChatServicegroupResponse
     */
    public function disbandOapiImChatServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DisbandOapiImChatServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/disband", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取服务群成员列表
     * @param QueryOapiImChatServicegroupMemberRequest $request
     * @return QueryOapiImChatServicegroupMemberResponse
     */
    public function queryOapiImChatServicegroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiImChatServicegroupMemberEx($request, $runtime);
    }

    /**
     * Description: 获取服务群成员列表
     * @param QueryOapiImChatServicegroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiImChatServicegroupMemberResponse
     */
    public function queryOapiImChatServicegroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiImChatServicegroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/member/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取服务群基本信息
     * @param QueryOapiImChatServicegroupRequest $request
     * @return QueryOapiImChatServicegroupResponse
     */
    public function queryOapiImChatServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiImChatServicegroupEx($request, $runtime);
    }

    /**
     * Description: 获取服务群基本信息
     * @param QueryOapiImChatServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiImChatServicegroupResponse
     */
    public function queryOapiImChatServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiImChatServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV通过该接口可以获取conversationid维度的机器人消息批量推送统计数据
     * @param ListbyconversationidOapiRobotMessageStatisticsRequest $request
     * @return ListbyconversationidOapiRobotMessageStatisticsResponse
     */
    public function listbyconversationidOapiRobotMessageStatistics($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyconversationidOapiRobotMessageStatisticsEx($request, $runtime);
    }

    /**
     * Description: ISV通过该接口可以获取conversationid维度的机器人消息批量推送统计数据
     * @param ListbyconversationidOapiRobotMessageStatisticsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyconversationidOapiRobotMessageStatisticsResponse
     */
    public function listbyconversationidOapiRobotMessageStatisticsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyconversationidOapiRobotMessageStatisticsResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/statistics/listbyconversationid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新群成员（移除、设为管理员）
     * @param UpdateOapiImChatServicegroupMemberRequest $request
     * @return UpdateOapiImChatServicegroupMemberResponse
     */
    public function updateOapiImChatServicegroupMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiImChatServicegroupMemberEx($request, $runtime);
    }

    /**
     * Description: 更新群成员（移除、设为管理员）
     * @param UpdateOapiImChatServicegroupMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiImChatServicegroupMemberResponse
     */
    public function updateOapiImChatServicegroupMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiImChatServicegroupMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/member/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询考勤机设备列表，可选择查询部门已关联的考勤机设备列表
     * @param Get_by_deptidOapiSmartdeviceAtmachineRequest $request
     * @return Get_by_deptidOapiSmartdeviceAtmachineResponse
     */
    public function get_by_deptidOapiSmartdeviceAtmachine($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_by_deptidOapiSmartdeviceAtmachineEx($request, $runtime);
    }

    /**
     * Description: 查询考勤机设备列表，可选择查询部门已关联的考勤机设备列表
     * @param Get_by_deptidOapiSmartdeviceAtmachineRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_by_deptidOapiSmartdeviceAtmachineResponse
     */
    public function get_by_deptidOapiSmartdeviceAtmachineEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_by_deptidOapiSmartdeviceAtmachineResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/atmachine/get_by_deptid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 允许isv查询员工智能考勤机列表
     * @param Get_by_useridOapiSmartdeviceAtmachineRequest $request
     * @return Get_by_useridOapiSmartdeviceAtmachineResponse
     */
    public function get_by_useridOapiSmartdeviceAtmachine($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_by_useridOapiSmartdeviceAtmachineEx($request, $runtime);
    }

    /**
     * Description: 允许isv查询员工智能考勤机列表
     * @param Get_by_useridOapiSmartdeviceAtmachineRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_by_useridOapiSmartdeviceAtmachineResponse
     */
    public function get_by_useridOapiSmartdeviceAtmachineEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_by_useridOapiSmartdeviceAtmachineResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/atmachine/get_by_userid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据日期查询企业下未活跃用户或活跃用户列表数据
     * @param GetOapiInactiveUserV2Request $request
     * @return GetOapiInactiveUserV2Response
     */
    public function getOapiInactiveUserV2($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiInactiveUserV2Ex($request, $runtime);
    }

    /**
     * Description: 根据日期查询企业下未活跃用户或活跃用户列表数据
     * @param GetOapiInactiveUserV2Request $request
     * @param RuntimeOptions $runtime
     * @return GetOapiInactiveUserV2Response
     */
    public function getOapiInactiveUserV2Ex($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiInactiveUserV2Response::fromMap($this->doRequestOApi("POST", "/topapi/inactive/user/v2/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供变更智能考勤机员工功能
     * @param UpdateOapiSmartdeviceAtmachineUserRequest $request
     * @return UpdateOapiSmartdeviceAtmachineUserResponse
     */
    public function updateOapiSmartdeviceAtmachineUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartdeviceAtmachineUserEx($request, $runtime);
    }

    /**
     * Description: 提供变更智能考勤机员工功能
     * @param UpdateOapiSmartdeviceAtmachineUserRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartdeviceAtmachineUserResponse
     */
    public function updateOapiSmartdeviceAtmachineUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartdeviceAtmachineUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/atmachine/user/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV调用该接口，可以更新对应授权企业的审批单
     * @param SyncSmartworkBpmsProcessRequest $request
     * @return SyncSmartworkBpmsProcessResponse
     */
    public function syncSmartworkBpmsProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncSmartworkBpmsProcessEx($request, $runtime);
    }

    /**
     * Description: ISV调用该接口，可以更新对应授权企业的审批单
     * @param SyncSmartworkBpmsProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncSmartworkBpmsProcessResponse
     */
    public function syncSmartworkBpmsProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncSmartworkBpmsProcessResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.process.sync", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发送圈子通知
     * @param SendOapiWorkspaceProjectNoticeRequest $request
     * @return SendOapiWorkspaceProjectNoticeResponse
     */
    public function sendOapiWorkspaceProjectNotice($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiWorkspaceProjectNoticeEx($request, $runtime);
    }

    /**
     * Description: 发送圈子通知
     * @param SendOapiWorkspaceProjectNoticeRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiWorkspaceProjectNoticeResponse
     */
    public function sendOapiWorkspaceProjectNoticeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiWorkspaceProjectNoticeResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/project/notice/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询当前企业每天的聊天汇总数据
     * @param ListOapiKacDatavMicroappDetailRequest $request
     * @return ListOapiKacDatavMicroappDetailResponse
     */
    public function listOapiKacDatavMicroappDetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavMicroappDetailEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询当前企业每天的聊天汇总数据
     * @param ListOapiKacDatavMicroappDetailRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavMicroappDetailResponse
     */
    public function listOapiKacDatavMicroappDetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavMicroappDetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/microapp/detail/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询大客户部门维度的电话会议统计数据
     * @param GetOapiKacDatavTelconfRequest $request
     * @return GetOapiKacDatavTelconfResponse
     */
    public function getOapiKacDatavTelconf($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacDatavTelconfEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询大客户部门维度的电话会议统计数据
     * @param GetOapiKacDatavTelconfRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacDatavTelconfResponse
     */
    public function getOapiKacDatavTelconfEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacDatavTelconfResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/telconf/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 从部门成员同步到部门群
     * @param SyncuserCorpDeptgroupRequest $request
     * @return SyncuserCorpDeptgroupResponse
     */
    public function syncuserCorpDeptgroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncuserCorpDeptgroupEx($request, $runtime);
    }

    /**
     * Description: 从部门成员同步到部门群
     * @param SyncuserCorpDeptgroupRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncuserCorpDeptgroupResponse
     */
    public function syncuserCorpDeptgroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncuserCorpDeptgroupResponse::fromMap($this->doRequest("dingtalk.corp.deptgroup.syncuser", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业下的智能硬件设备详情
     * @param QuerybyidOapiSmartdeviceDeviceRequest $request
     * @return QuerybyidOapiSmartdeviceDeviceResponse
     */
    public function querybyidOapiSmartdeviceDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->querybyidOapiSmartdeviceDeviceEx($request, $runtime);
    }

    /**
     * Description: 查询企业下的智能硬件设备详情
     * @param QuerybyidOapiSmartdeviceDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerybyidOapiSmartdeviceDeviceResponse
     */
    public function querybyidOapiSmartdeviceDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QuerybyidOapiSmartdeviceDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/device/querybyid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开放钉钉PaaS里应用搭建出的表单数据
     * @param QueryOapiDdpaasObjectdataRequest $request
     * @return QueryOapiDdpaasObjectdataResponse
     */
    public function queryOapiDdpaasObjectdata($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiDdpaasObjectdataEx($request, $runtime);
    }

    /**
     * Description: 开放钉钉PaaS里应用搭建出的表单数据
     * @param QueryOapiDdpaasObjectdataRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiDdpaasObjectdataResponse
     */
    public function queryOapiDdpaasObjectdataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiDdpaasObjectdataResponse::fromMap($this->doRequestOApi("POST", "/topapi/ddpaas/objectdata/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能设备接入钉钉时，需要和组织建立绑定关系，此接口用于创建绑定关系。
     * @param CreateOapiSmartdeviceBindRequest $request
     * @return CreateOapiSmartdeviceBindResponse
     */
    public function createOapiSmartdeviceBind($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiSmartdeviceBindEx($request, $runtime);
    }

    /**
     * Description: 智能设备接入钉钉时，需要和组织建立绑定关系，此接口用于创建绑定关系。
     * @param CreateOapiSmartdeviceBindRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiSmartdeviceBindResponse
     */
    public function createOapiSmartdeviceBindEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiSmartdeviceBindResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/bind/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 对大客户开放其企业BI数据
     * @param DetailsOapiStatisticsRequest $request
     * @return DetailsOapiStatisticsResponse
     */
    public function detailsOapiStatistics($request){
        $runtime = new RuntimeOptions([]);
        return $this->detailsOapiStatisticsEx($request, $runtime);
    }

    /**
     * Description: 对大客户开放其企业BI数据
     * @param DetailsOapiStatisticsRequest $request
     * @param RuntimeOptions $runtime
     * @return DetailsOapiStatisticsResponse
     */
    public function detailsOapiStatisticsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DetailsOapiStatisticsResponse::fromMap($this->doRequestOApi("POST", "/topapi/statistics/details", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询员工是否在可见范围中
     * @param CheckuidOapiMicroappRequest $request
     * @return CheckuidOapiMicroappResponse
     */
    public function checkuidOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->checkuidOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 查询员工是否在可见范围中
     * @param CheckuidOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return CheckuidOapiMicroappResponse
     */
    public function checkuidOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CheckuidOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/topapi/microapp/checkuid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 认证用户解除绑定接口
     * @param UnbindOapiRetailUserRequest $request
     * @return UnbindOapiRetailUserResponse
     */
    public function unbindOapiRetailUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindOapiRetailUserEx($request, $runtime);
    }

    /**
     * Description: 认证用户解除绑定接口
     * @param UnbindOapiRetailUserRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindOapiRetailUserResponse
     */
    public function unbindOapiRetailUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnbindOapiRetailUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/user/unbind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 阿里云调用钉钉接口，把阿里云和钉钉的账户绑定关系，把绑定关系回写到钉钉。
     * @param BindapplyOapiRetailUserRequest $request
     * @return BindapplyOapiRetailUserResponse
     */
    public function bindapplyOapiRetailUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->bindapplyOapiRetailUserEx($request, $runtime);
    }

    /**
     * Description: 阿里云调用钉钉接口，把阿里云和钉钉的账户绑定关系，把绑定关系回写到钉钉。
     * @param BindapplyOapiRetailUserRequest $request
     * @param RuntimeOptions $runtime
     * @return BindapplyOapiRetailUserResponse
     */
    public function bindapplyOapiRetailUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BindapplyOapiRetailUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/user/bindapply", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 传入外部数据，生成一次性token
     * @param GenerateOapiRetailUserTokenRequest $request
     * @return GenerateOapiRetailUserTokenResponse
     */
    public function generateOapiRetailUserToken($request){
        $runtime = new RuntimeOptions([]);
        return $this->generateOapiRetailUserTokenEx($request, $runtime);
    }

    /**
     * Description: 传入外部数据，生成一次性token
     * @param GenerateOapiRetailUserTokenRequest $request
     * @param RuntimeOptions $runtime
     * @return GenerateOapiRetailUserTokenResponse
     */
    public function generateOapiRetailUserTokenEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GenerateOapiRetailUserTokenResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/user/token/generate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据巡店任务标识获取反馈表单内容
     * @param GetOapiInspectFeedbackRequest $request
     * @return GetOapiInspectFeedbackResponse
     */
    public function getOapiInspectFeedback($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiInspectFeedbackEx($request, $runtime);
    }

    /**
     * Description: 根据巡店任务标识获取反馈表单内容
     * @param GetOapiInspectFeedbackRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiInspectFeedbackResponse
     */
    public function getOapiInspectFeedbackEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiInspectFeedbackResponse::fromMap($this->doRequestOApi("POST", "/topapi/inspect/feedback/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新建考勤组
     * @param CreateOapiAttendanceGroupRequest $request
     * @return CreateOapiAttendanceGroupResponse
     */
    public function createOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 新建考勤组
     * @param CreateOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiAttendanceGroupResponse
     */
    public function createOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据id查询考勤组信息
     * @param GetOapiAttendanceGroupRequest $request
     * @return GetOapiAttendanceGroupResponse
     */
    public function getOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 根据id查询考勤组信息
     * @param GetOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAttendanceGroupResponse
     */
    public function getOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据考勤组id更新考勤组
     * @param UpdateOapiAttendanceGroupRequest $request
     * @return UpdateOapiAttendanceGroupResponse
     */
    public function updateOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 根据考勤组id更新考勤组
     * @param UpdateOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiAttendanceGroupResponse
     */
    public function updateOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 传入授权码，获取Token
     * @param CheckOapiRetailUserTokenRequest $request
     * @return CheckOapiRetailUserTokenResponse
     */
    public function checkOapiRetailUserToken($request){
        $runtime = new RuntimeOptions([]);
        return $this->checkOapiRetailUserTokenEx($request, $runtime);
    }

    /**
     * Description: 传入授权码，获取Token
     * @param CheckOapiRetailUserTokenRequest $request
     * @param RuntimeOptions $runtime
     * @return CheckOapiRetailUserTokenResponse
     */
    public function checkOapiRetailUserTokenEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CheckOapiRetailUserTokenResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/user/token/check", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量删除考勤组
     * @param DeleteOapiAttendanceGroupRequest $request
     * @return DeleteOapiAttendanceGroupResponse
     */
    public function deleteOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 批量删除考勤组
     * @param DeleteOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiAttendanceGroupResponse
     */
    public function deleteOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过AssociateUnionId查询已绑定的帐号列表
     * @param BindqueryOapiRetailUserRequest $request
     * @return BindqueryOapiRetailUserResponse
     */
    public function bindqueryOapiRetailUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->bindqueryOapiRetailUserEx($request, $runtime);
    }

    /**
     * Description: 通过AssociateUnionId查询已绑定的帐号列表
     * @param BindqueryOapiRetailUserRequest $request
     * @param RuntimeOptions $runtime
     * @return BindqueryOapiRetailUserResponse
     */
    public function bindqueryOapiRetailUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BindqueryOapiRetailUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/user/bindquery", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页查询考勤组
     * @param QueryOapiAttendanceGroupsRequest $request
     * @return QueryOapiAttendanceGroupsResponse
     */
    public function queryOapiAttendanceGroups($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceGroupsEx($request, $runtime);
    }

    /**
     * Description: 分页查询考勤组
     * @param QueryOapiAttendanceGroupsRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceGroupsResponse
     */
    public function queryOapiAttendanceGroupsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceGroupsResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/groups/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给ISV查询花名册的员工档案信息中有权限的字段列表
     * @param GrouplistOapiSmartworkHrmEmployeeFieldRequest $request
     * @return GrouplistOapiSmartworkHrmEmployeeFieldResponse
     */
    public function grouplistOapiSmartworkHrmEmployeeField($request){
        $runtime = new RuntimeOptions([]);
        return $this->grouplistOapiSmartworkHrmEmployeeFieldEx($request, $runtime);
    }

    /**
     * Description: 提供给ISV查询花名册的员工档案信息中有权限的字段列表
     * @param GrouplistOapiSmartworkHrmEmployeeFieldRequest $request
     * @param RuntimeOptions $runtime
     * @return GrouplistOapiSmartworkHrmEmployeeFieldResponse
     */
    public function grouplistOapiSmartworkHrmEmployeeFieldEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GrouplistOapiSmartworkHrmEmployeeFieldResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/field/grouplist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量新增wifi
     * @param AddOapiAttendanceGroupWifisRequest $request
     * @return AddOapiAttendanceGroupWifisResponse
     */
    public function addOapiAttendanceGroupWifis($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAttendanceGroupWifisEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量新增wifi
     * @param AddOapiAttendanceGroupWifisRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAttendanceGroupWifisResponse
     */
    public function addOapiAttendanceGroupWifisEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAttendanceGroupWifisResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/wifis/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量移除wifi
     * @param RemoveOapiAttendanceGroupWifisRequest $request
     * @return RemoveOapiAttendanceGroupWifisResponse
     */
    public function removeOapiAttendanceGroupWifis($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiAttendanceGroupWifisEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量移除wifi
     * @param RemoveOapiAttendanceGroupWifisRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiAttendanceGroupWifisResponse
     */
    public function removeOapiAttendanceGroupWifisEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiAttendanceGroupWifisResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/wifis/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用于手工轮转密钥时候调用
     * @param RotateedkOapiOpenencryptRequest $request
     * @return RotateedkOapiOpenencryptResponse
     */
    public function rotateedkOapiOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->rotateedkOapiOpenencryptEx($request, $runtime);
    }

    /**
     * Description: 用于手工轮转密钥时候调用
     * @param RotateedkOapiOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return RotateedkOapiOpenencryptResponse
     */
    public function rotateedkOapiOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RotateedkOapiOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/openencrypt/rotateedk", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，客服状态变更
     * @param UpdateOapiCustomerserviceStatusRequest $request
     * @return UpdateOapiCustomerserviceStatusResponse
     */
    public function updateOapiCustomerserviceStatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCustomerserviceStatusEx($request, $runtime);
    }

    /**
     * Description: 提供给集团的BU，调用该接口，在客户服务的场景下，客服状态变更
     * @param UpdateOapiCustomerserviceStatusRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCustomerserviceStatusResponse
     */
    public function updateOapiCustomerserviceStatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCustomerserviceStatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/status/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量查询wifi
     * @param QueryOapiAttendanceGroupWifisRequest $request
     * @return QueryOapiAttendanceGroupWifisResponse
     */
    public function queryOapiAttendanceGroupWifis($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceGroupWifisEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量查询wifi
     * @param QueryOapiAttendanceGroupWifisRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceGroupWifisResponse
     */
    public function queryOapiAttendanceGroupWifisEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceGroupWifisResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/wifis/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新企业kms配置，比如秘钥轮转周期等
     * @param UpdateconfigOapiOpenencryptRequest $request
     * @return UpdateconfigOapiOpenencryptResponse
     */
    public function updateconfigOapiOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateconfigOapiOpenencryptEx($request, $runtime);
    }

    /**
     * Description: 更新企业kms配置，比如秘钥轮转周期等
     * @param UpdateconfigOapiOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateconfigOapiOpenencryptResponse
     */
    public function updateconfigOapiOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateconfigOapiOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/openencrypt/updateconfig", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建报销单，回流报销数据
     * @param InitOapiAlitripBtripReimbursementRequest $request
     * @return InitOapiAlitripBtripReimbursementResponse
     */
    public function initOapiAlitripBtripReimbursement($request){
        $runtime = new RuntimeOptions([]);
        return $this->initOapiAlitripBtripReimbursementEx($request, $runtime);
    }

    /**
     * Description: 创建报销单，回流报销数据
     * @param InitOapiAlitripBtripReimbursementRequest $request
     * @param RuntimeOptions $runtime
     * @return InitOapiAlitripBtripReimbursementResponse
     */
    public function initOapiAlitripBtripReimbursementEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InitOapiAlitripBtripReimbursementResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/reimbursement/init", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量新增position
     * @param AddOapiAttendanceGroupPositionsRequest $request
     * @return AddOapiAttendanceGroupPositionsResponse
     */
    public function addOapiAttendanceGroupPositions($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAttendanceGroupPositionsEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量新增position
     * @param AddOapiAttendanceGroupPositionsRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAttendanceGroupPositionsResponse
     */
    public function addOapiAttendanceGroupPositionsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAttendanceGroupPositionsResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/positions/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 关闭微应用解密鉴权
     * @param AuthappcloseOapiOrgOpenencryptRequest $request
     * @return AuthappcloseOapiOrgOpenencryptResponse
     */
    public function authappcloseOapiOrgOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->authappcloseOapiOrgOpenencryptEx($request, $runtime);
    }

    /**
     * Description: 关闭微应用解密鉴权
     * @param AuthappcloseOapiOrgOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return AuthappcloseOapiOrgOpenencryptResponse
     */
    public function authappcloseOapiOrgOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AuthappcloseOapiOrgOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/openencrypt/authappclose", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询当前企业每天的聊天汇总数据
     * @param GetOapiKacDatavChatSummaryRequest $request
     * @return GetOapiKacDatavChatSummaryResponse
     */
    public function getOapiKacDatavChatSummary($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacDatavChatSummaryEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询当前企业每天的聊天汇总数据
     * @param GetOapiKacDatavChatSummaryRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacDatavChatSummaryResponse
     */
    public function getOapiKacDatavChatSummaryEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacDatavChatSummaryResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/chat/summary/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量删除position
     * @param RemoveOapiAttendanceGroupPositionsRequest $request
     * @return RemoveOapiAttendanceGroupPositionsResponse
     */
    public function removeOapiAttendanceGroupPositions($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiAttendanceGroupPositionsEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量删除position
     * @param RemoveOapiAttendanceGroupPositionsRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiAttendanceGroupPositionsResponse
     */
    public function removeOapiAttendanceGroupPositionsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiAttendanceGroupPositionsResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/positions/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV调用该心跳接口，表明自己存活状态
     * @param HeartbeatOapiOrgOpenencryptRequest $request
     * @return HeartbeatOapiOrgOpenencryptResponse
     */
    public function heartbeatOapiOrgOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->heartbeatOapiOrgOpenencryptEx($request, $runtime);
    }

    /**
     * Description: ISV调用该心跳接口，表明自己存活状态
     * @param HeartbeatOapiOrgOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return HeartbeatOapiOrgOpenencryptResponse
     */
    public function heartbeatOapiOrgOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HeartbeatOapiOrgOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/openencrypt/heartbeat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询视频直播明细列表
     * @param ListOapiKacDatavVideoliveDetailRequest $request
     * @return ListOapiKacDatavVideoliveDetailResponse
     */
    public function listOapiKacDatavVideoliveDetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavVideoliveDetailEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询视频直播明细列表
     * @param ListOapiKacDatavVideoliveDetailRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavVideoliveDetailResponse
     */
    public function listOapiKacDatavVideoliveDetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavVideoliveDetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/videolive/detail/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量查询position
     * @param QueryOapiAttendanceGroupPositionsRequest $request
     * @return QueryOapiAttendanceGroupPositionsResponse
     */
    public function queryOapiAttendanceGroupPositions($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceGroupPositionsEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量查询position
     * @param QueryOapiAttendanceGroupPositionsRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceGroupPositionsResponse
     */
    public function queryOapiAttendanceGroupPositionsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceGroupPositionsResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/positions/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用于KMS注册元数据信息，比如kms的数据域名等
     * @param RegistekmsOapiOrgOpenencryptRequest $request
     * @return RegistekmsOapiOrgOpenencryptResponse
     */
    public function registekmsOapiOrgOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->registekmsOapiOrgOpenencryptEx($request, $runtime);
    }

    /**
     * Description: 用于KMS注册元数据信息，比如kms的数据域名等
     * @param RegistekmsOapiOrgOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return RegistekmsOapiOrgOpenencryptResponse
     */
    public function registekmsOapiOrgOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RegistekmsOapiOrgOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/openencrypt/registekms", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询企业自己的DAU汇总数据
     * @param GetOapiKacDatavDauSummaryRequest $request
     * @return GetOapiKacDatavDauSummaryResponse
     */
    public function getOapiKacDatavDauSummary($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacDatavDauSummaryEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询企业自己的DAU汇总数据
     * @param GetOapiKacDatavDauSummaryRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacDatavDauSummaryResponse
     */
    public function getOapiKacDatavDauSummaryEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacDatavDauSummaryResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/dau/summary/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量新增员工
     * @param AddOapiAttendanceGroupUsersRequest $request
     * @return AddOapiAttendanceGroupUsersResponse
     */
    public function addOapiAttendanceGroupUsers($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAttendanceGroupUsersEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量新增员工
     * @param AddOapiAttendanceGroupUsersRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAttendanceGroupUsersResponse
     */
    public function addOapiAttendanceGroupUsersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAttendanceGroupUsersResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/users/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV调用该心跳接口，表明自己存活状态
     * @param HeartbeatOapiIsvOpenencryptRequest $request
     * @return HeartbeatOapiIsvOpenencryptResponse
     */
    public function heartbeatOapiIsvOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->heartbeatOapiIsvOpenencryptEx($request, $runtime);
    }

    /**
     * Description: ISV调用该心跳接口，表明自己存活状态
     * @param HeartbeatOapiIsvOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return HeartbeatOapiIsvOpenencryptResponse
     */
    public function heartbeatOapiIsvOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return HeartbeatOapiIsvOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/isv/openencrypt/heartbeat", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询当前企业当前通讯录未激活明细列表
     * @param ListOapiKacDatavInactivatedUserRequest $request
     * @return ListOapiKacDatavInactivatedUserResponse
     */
    public function listOapiKacDatavInactivatedUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavInactivatedUserEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询当前企业当前通讯录未激活明细列表
     * @param ListOapiKacDatavInactivatedUserRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavInactivatedUserResponse
     */
    public function listOapiKacDatavInactivatedUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavInactivatedUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/inactivated/user/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供查询实名认证信息（仅支持2018云栖大会）
     * @param QueryinfoOapiCertifyRequest $request
     * @return QueryinfoOapiCertifyResponse
     */
    public function queryinfoOapiCertify($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryinfoOapiCertifyEx($request, $runtime);
    }

    /**
     * Description: 提供查询实名认证信息（仅支持2018云栖大会）
     * @param QueryinfoOapiCertifyRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryinfoOapiCertifyResponse
     */
    public function queryinfoOapiCertifyEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryinfoOapiCertifyResponse::fromMap($this->doRequestOApi("POST", "/topapi/certify/queryinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量删除员工
     * @param RemoveOapiAttendanceGroupUsersRequest $request
     * @return RemoveOapiAttendanceGroupUsersResponse
     */
    public function removeOapiAttendanceGroupUsers($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiAttendanceGroupUsersEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量删除员工
     * @param RemoveOapiAttendanceGroupUsersRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiAttendanceGroupUsersResponse
     */
    public function removeOapiAttendanceGroupUsersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiAttendanceGroupUsersResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/users/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 关闭微应用解密鉴权
     * @param AuthappcloseOapiIsvOpenencryptRequest $request
     * @return AuthappcloseOapiIsvOpenencryptResponse
     */
    public function authappcloseOapiIsvOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->authappcloseOapiIsvOpenencryptEx($request, $runtime);
    }

    /**
     * Description: 关闭微应用解密鉴权
     * @param AuthappcloseOapiIsvOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return AuthappcloseOapiIsvOpenencryptResponse
     */
    public function authappcloseOapiIsvOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AuthappcloseOapiIsvOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/isv/openencrypt/authappclose", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户钉钉数据：查询大客户部门维度的活跃用户统计数据列表
     * @param ListOapiKacDatavDeptDauRequest $request
     * @return ListOapiKacDatavDeptDauResponse
     */
    public function listOapiKacDatavDeptDau($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavDeptDauEx($request, $runtime);
    }

    /**
     * Description: 大客户钉钉数据：查询大客户部门维度的活跃用户统计数据列表
     * @param ListOapiKacDatavDeptDauRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavDeptDauResponse
     */
    public function listOapiKacDatavDeptDauEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavDeptDauResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/dept/dau/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组下批量查询员工
     * @param QueryOapiAttendanceGroupUsersRequest $request
     * @return QueryOapiAttendanceGroupUsersResponse
     */
    public function queryOapiAttendanceGroupUsers($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAttendanceGroupUsersEx($request, $runtime);
    }

    /**
     * Description: 考勤组下批量查询员工
     * @param QueryOapiAttendanceGroupUsersRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAttendanceGroupUsersResponse
     */
    public function queryOapiAttendanceGroupUsersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAttendanceGroupUsersResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/users/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用于KMS注册元数据信息，比如kms的数据域名等
     * @param RegistekmsOapiIsvOpenencryptRequest $request
     * @return RegistekmsOapiIsvOpenencryptResponse
     */
    public function registekmsOapiIsvOpenencrypt($request){
        $runtime = new RuntimeOptions([]);
        return $this->registekmsOapiIsvOpenencryptEx($request, $runtime);
    }

    /**
     * Description: 用于KMS注册元数据信息，比如kms的数据域名等
     * @param RegistekmsOapiIsvOpenencryptRequest $request
     * @param RuntimeOptions $runtime
     * @return RegistekmsOapiIsvOpenencryptResponse
     */
    public function registekmsOapiIsvOpenencryptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RegistekmsOapiIsvOpenencryptResponse::fromMap($this->doRequestOApi("POST", "/topapi/isv/openencrypt/registekms", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给isv喔趣，验证是否是迁移的企业
     * @param ConfirmOapiAttendanceCorpRequest $request
     * @return ConfirmOapiAttendanceCorpResponse
     */
    public function confirmOapiAttendanceCorp($request){
        $runtime = new RuntimeOptions([]);
        return $this->confirmOapiAttendanceCorpEx($request, $runtime);
    }

    /**
     * Description: 提供给isv喔趣，验证是否是迁移的企业
     * @param ConfirmOapiAttendanceCorpRequest $request
     * @param RuntimeOptions $runtime
     * @return ConfirmOapiAttendanceCorpResponse
     */
    public function confirmOapiAttendanceCorpEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ConfirmOapiAttendanceCorpResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/corp/confirm", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可以根据审批流的唯一标识，分页获取该审批流对应的审批实例。只能取到权限范围内的相关部门的审批实例
     * @param ListSmartworkBpmsProcessinstanceRequest $request
     * @return ListSmartworkBpmsProcessinstanceResponse
     */
    public function listSmartworkBpmsProcessinstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listSmartworkBpmsProcessinstanceEx($request, $runtime);
    }

    /**
     * Description: 企业可以根据审批流的唯一标识，分页获取该审批流对应的审批实例。只能取到权限范围内的相关部门的审批实例
     * @param ListSmartworkBpmsProcessinstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListSmartworkBpmsProcessinstanceResponse
     */
    public function listSmartworkBpmsProcessinstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListSmartworkBpmsProcessinstanceResponse::fromMap($this->doRequest("dingtalk.smartwork.bpms.processinstance.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询内部群某一场直播的数据统计
     * @param StatisticsOapiLiveGroupliveRequest $request
     * @return StatisticsOapiLiveGroupliveResponse
     */
    public function statisticsOapiLiveGrouplive($request){
        $runtime = new RuntimeOptions([]);
        return $this->statisticsOapiLiveGroupliveEx($request, $runtime);
    }

    /**
     * Description: 查询内部群某一场直播的数据统计
     * @param StatisticsOapiLiveGroupliveRequest $request
     * @param RuntimeOptions $runtime
     * @return StatisticsOapiLiveGroupliveResponse
     */
    public function statisticsOapiLiveGroupliveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StatisticsOapiLiveGroupliveResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/grouplive/statistics", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询内部群的直播列表
     * @param ListOapiLiveGroupliveRequest $request
     * @return ListOapiLiveGroupliveResponse
     */
    public function listOapiLiveGrouplive($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiLiveGroupliveEx($request, $runtime);
    }

    /**
     * Description: 查询内部群的直播列表
     * @param ListOapiLiveGroupliveRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiLiveGroupliveResponse
     */
    public function listOapiLiveGroupliveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiLiveGroupliveResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/grouplive/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取餐饮企业下的门店数据，门店是通过在部门上面打标来实现的。分页获取相关数据，返回的数据包括有部门编号、部门名称、部门类型（固定为store门店），以及对应的门店店长工号
     * @param GetOapiCateringStoreRequest $request
     * @return GetOapiCateringStoreResponse
     */
    public function getOapiCateringStore($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCateringStoreEx($request, $runtime);
    }

    /**
     * Description: 获取餐饮企业下的门店数据，门店是通过在部门上面打标来实现的。分页获取相关数据，返回的数据包括有部门编号、部门名称、部门类型（固定为store门店），以及对应的门店店长工号
     * @param GetOapiCateringStoreRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCateringStoreResponse
     */
    public function getOapiCateringStoreEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCateringStoreResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/store/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 读取钉钉CRM自定义对象的元数据描述
     * @param DescribeOapiCrmObjectmetaRequest $request
     * @return DescribeOapiCrmObjectmetaResponse
     */
    public function describeOapiCrmObjectmeta($request){
        $runtime = new RuntimeOptions([]);
        return $this->describeOapiCrmObjectmetaEx($request, $runtime);
    }

    /**
     * Description: 读取钉钉CRM自定义对象的元数据描述
     * @param DescribeOapiCrmObjectmetaRequest $request
     * @param RuntimeOptions $runtime
     * @return DescribeOapiCrmObjectmetaResponse
     */
    public function describeOapiCrmObjectmetaEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DescribeOapiCrmObjectmetaResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectmeta/describe", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获得app的导航栏菜单列表
     * @param GetOapiCrmMenuRequest $request
     * @return GetOapiCrmMenuResponse
     */
    public function getOapiCrmMenu($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCrmMenuEx($request, $runtime);
    }

    /**
     * Description: 获得app的导航栏菜单列表
     * @param GetOapiCrmMenuRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCrmMenuResponse
     */
    public function getOapiCrmMenuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCrmMenuResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/menu/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取CRM自定义对象数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataRequest $request
     * @return QueryOapiCrmObjectdataResponse
     */
    public function queryOapiCrmObjectdata($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiCrmObjectdataEx($request, $runtime);
    }

    /**
     * Description: 获取CRM自定义对象数据，最多可一次获取200条数据
     * @param QueryOapiCrmObjectdataRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiCrmObjectdataResponse
     */
    public function queryOapiCrmObjectdataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiCrmObjectdataResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业查询自己企业内服务群的信息，会把服务群的群主信息，dingtalkid，nick，真实姓名和群名称返回。
     * @param GetCcoserviceServicegroupRequest $request
     * @return GetCcoserviceServicegroupResponse
     */
    public function getCcoserviceServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCcoserviceServicegroupEx($request, $runtime);
    }

    /**
     * Description: 企业查询自己企业内服务群的信息，会把服务群的群主信息，dingtalkid，nick，真实姓名和群名称返回。
     * @param GetCcoserviceServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCcoserviceServicegroupResponse
     */
    public function getCcoserviceServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetCcoserviceServicegroupResponse::fromMap($this->doRequest("dingtalk.ccoservice.servicegroup.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 此API主要就是把某个企业的员工加入到此企业的某个服务群内
     * @param AddmemberCcoserviceServicegroupRequest $request
     * @return AddmemberCcoserviceServicegroupResponse
     */
    public function addmemberCcoserviceServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->addmemberCcoserviceServicegroupEx($request, $runtime);
    }

    /**
     * Description: 此API主要就是把某个企业的员工加入到此企业的某个服务群内
     * @param AddmemberCcoserviceServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return AddmemberCcoserviceServicegroupResponse
     */
    public function addmemberCcoserviceServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddmemberCcoserviceServicegroupResponse::fromMap($this->doRequest("dingtalk.ccoservice.servicegroup.addmember", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据统一跨开发者组织统一ID获取成员的userid
     * @param TransferOapiUserAssociated_unionidRequest $request
     * @return TransferOapiUserAssociated_unionidResponse
     */
    public function transferOapiUserAssociated_unionid($request){
        $runtime = new RuntimeOptions([]);
        return $this->transferOapiUserAssociated_unionidEx($request, $runtime);
    }

    /**
     * Description: 根据统一跨开发者组织统一ID获取成员的userid
     * @param TransferOapiUserAssociated_unionidRequest $request
     * @param RuntimeOptions $runtime
     * @return TransferOapiUserAssociated_unionidResponse
     */
    public function transferOapiUserAssociated_unionidEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TransferOapiUserAssociated_unionidResponse::fromMap($this->doRequestOApi("POST", "/topapi/user/associated_unionid/transfer", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉教培,提供给isv向学员池中批量写入学员的接口
     * @param BatchaddOapiIndustryStudentpoolRequest $request
     * @return BatchaddOapiIndustryStudentpoolResponse
     */
    public function batchaddOapiIndustryStudentpool($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchaddOapiIndustryStudentpoolEx($request, $runtime);
    }

    /**
     * Description: 钉钉教培,提供给isv向学员池中批量写入学员的接口
     * @param BatchaddOapiIndustryStudentpoolRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchaddOapiIndustryStudentpoolResponse
     */
    public function batchaddOapiIndustryStudentpoolEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchaddOapiIndustryStudentpoolResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/studentpool/batchadd", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取教培企业下所有的课包
     * @param GetOapiIndustryPackRequest $request
     * @return GetOapiIndustryPackResponse
     */
    public function getOapiIndustryPack($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiIndustryPackEx($request, $runtime);
    }

    /**
     * Description: 获取教培企业下所有的课包
     * @param GetOapiIndustryPackRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiIndustryPackResponse
     */
    public function getOapiIndustryPackEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiIndustryPackResponse::fromMap($this->doRequestOApi("POST", "/topapi/industry/pack/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给指定企业，批量修改备注名。
     * @param ModifyOapiRelationRemarkRequest $request
     * @return ModifyOapiRelationRemarkResponse
     */
    public function modifyOapiRelationRemark($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifyOapiRelationRemarkEx($request, $runtime);
    }

    /**
     * Description: 给指定企业，批量修改备注名。
     * @param ModifyOapiRelationRemarkRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifyOapiRelationRemarkResponse
     */
    public function modifyOapiRelationRemarkEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifyOapiRelationRemarkResponse::fromMap($this->doRequestOApi("POST", "/topapi/relation/remark/modify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据实例ID列表批量获取CRM自定义表单数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataRequest $request
     * @return ListOapiCrmObjectdataResponse
     */
    public function listOapiCrmObjectdata($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCrmObjectdataEx($request, $runtime);
    }

    /**
     * Description: 根据实例ID列表批量获取CRM自定义表单数据，最多可一次获取200条数据
     * @param ListOapiCrmObjectdataRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCrmObjectdataResponse
     */
    public function listOapiCrmObjectdataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCrmObjectdataResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新相册后，往班级群发送通知
     * @param AsyncsendOapiEduClassconversationRequest $request
     * @return AsyncsendOapiEduClassconversationResponse
     */
    public function asyncsendOapiEduClassconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsendOapiEduClassconversationEx($request, $runtime);
    }

    /**
     * Description: 更新相册后，往班级群发送通知
     * @param AsyncsendOapiEduClassconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncsendOapiEduClassconversationResponse
     */
    public function asyncsendOapiEduClassconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncsendOapiEduClassconversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/classconversation/asyncsend", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在钉钉企业通讯录内，支持设置角色之间的可见性。这个接口的目的是用来设置/更新某个角色设置的可见角色列表。(如果之前设置过，这个API是会做覆盖更新。)
     * @param SetOapiRoleVisibleRequest $request
     * @return SetOapiRoleVisibleResponse
     */
    public function setOapiRoleVisible($request){
        $runtime = new RuntimeOptions([]);
        return $this->setOapiRoleVisibleEx($request, $runtime);
    }

    /**
     * Description: 在钉钉企业通讯录内，支持设置角色之间的可见性。这个接口的目的是用来设置/更新某个角色设置的可见角色列表。(如果之前设置过，这个API是会做覆盖更新。)
     * @param SetOapiRoleVisibleRequest $request
     * @param RuntimeOptions $runtime
     * @return SetOapiRoleVisibleResponse
     */
    public function setOapiRoleVisibleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetOapiRoleVisibleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/visible/set", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在钉钉企业通讯录内，支持设置角色之间的可见性。这个接口的目的是用来删除/清空某个角色设置的可见角色列表。
     * @param DeleteOapiRoleVisibleRequest $request
     * @return DeleteOapiRoleVisibleResponse
     */
    public function deleteOapiRoleVisible($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiRoleVisibleEx($request, $runtime);
    }

    /**
     * Description: 在钉钉企业通讯录内，支持设置角色之间的可见性。这个接口的目的是用来删除/清空某个角色设置的可见角色列表。
     * @param DeleteOapiRoleVisibleRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiRoleVisibleResponse
     */
    public function deleteOapiRoleVisibleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiRoleVisibleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/visible/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在钉钉企业通讯录内，支持设置角色之间的可见性。这个接口的目的是用来获取某个角色设置的可见角色列表。返回的是roleIdList。
     * @param GetOapiRoleVisibleRequest $request
     * @return GetOapiRoleVisibleResponse
     */
    public function getOapiRoleVisible($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRoleVisibleEx($request, $runtime);
    }

    /**
     * Description: 在钉钉企业通讯录内，支持设置角色之间的可见性。这个接口的目的是用来获取某个角色设置的可见角色列表。返回的是roleIdList。
     * @param GetOapiRoleVisibleRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRoleVisibleResponse
     */
    public function getOapiRoleVisibleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRoleVisibleResponse::fromMap($this->doRequestOApi("POST", "/topapi/role/visible/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取PaaS平台表单元数据信息的接口
     * @param DescribeOapiDdpaasObjectmetaRequest $request
     * @return DescribeOapiDdpaasObjectmetaResponse
     */
    public function describeOapiDdpaasObjectmeta($request){
        $runtime = new RuntimeOptions([]);
        return $this->describeOapiDdpaasObjectmetaEx($request, $runtime);
    }

    /**
     * Description: 获取PaaS平台表单元数据信息的接口
     * @param DescribeOapiDdpaasObjectmetaRequest $request
     * @param RuntimeOptions $runtime
     * @return DescribeOapiDdpaasObjectmetaResponse
     */
    public function describeOapiDdpaasObjectmetaEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DescribeOapiDdpaasObjectmetaResponse::fromMap($this->doRequestOApi("POST", "/topapi/ddpaas/objectmeta/describe", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 开放钉钉PaaS里应用搭建出的表单数据，通过表单数据实例ID获取数据
     * @param ListOapiDdpaasObjectdataRequest $request
     * @return ListOapiDdpaasObjectdataResponse
     */
    public function listOapiDdpaasObjectdata($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiDdpaasObjectdataEx($request, $runtime);
    }

    /**
     * Description: 开放钉钉PaaS里应用搭建出的表单数据，通过表单数据实例ID获取数据
     * @param ListOapiDdpaasObjectdataRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiDdpaasObjectdataResponse
     */
    public function listOapiDdpaasObjectdataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiDdpaasObjectdataResponse::fromMap($this->doRequestOApi("POST", "/topapi/ddpaas/objectdata/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param PushOapiCateringOpenOrderRequest $request
     * @return PushOapiCateringOpenOrderResponse
     */
    public function pushOapiCateringOpenOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->pushOapiCateringOpenOrderEx($request, $runtime);
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param PushOapiCateringOpenOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return PushOapiCateringOpenOrderResponse
     */
    public function pushOapiCateringOpenOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PushOapiCateringOpenOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/open/order/push", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 测试接入top是否有问题
     * @param SendmockCorpMessageCorpconversationRequest $request
     * @return SendmockCorpMessageCorpconversationResponse
     */
    public function sendmockCorpMessageCorpconversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendmockCorpMessageCorpconversationEx($request, $runtime);
    }

    /**
     * Description: 测试接入top是否有问题
     * @param SendmockCorpMessageCorpconversationRequest $request
     * @param RuntimeOptions $runtime
     * @return SendmockCorpMessageCorpconversationResponse
     */
    public function sendmockCorpMessageCorpconversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendmockCorpMessageCorpconversationResponse::fromMap($this->doRequest("dingtalk.corp.message.corpconversation.sendmock", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 报销单状态更新
     * @param UpdateOapiAlitripBtripReimbursementRequest $request
     * @return UpdateOapiAlitripBtripReimbursementResponse
     */
    public function updateOapiAlitripBtripReimbursement($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiAlitripBtripReimbursementEx($request, $runtime);
    }

    /**
     * Description: 报销单状态更新
     * @param UpdateOapiAlitripBtripReimbursementRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiAlitripBtripReimbursementResponse
     */
    public function updateOapiAlitripBtripReimbursementEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiAlitripBtripReimbursementResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/reimbursement/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 对于项目有如下状态：
     * WORKING进行中 DISBANDED解散 CLOSE归档 RECYCLE回收站状态
     * 新建项目后状态是WORKING，WORKING/CLOSE/RECYCLE回收站状态可以切换，但是一旦成为DISBANDED则说明项目已销毁无法变更状态
     * @param UpdateOapiWorkspaceStatusRequest $request
     * @return UpdateOapiWorkspaceStatusResponse
     */
    public function updateOapiWorkspaceStatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiWorkspaceStatusEx($request, $runtime);
    }

    /**
     * Description: 对于项目有如下状态：
     * WORKING进行中 DISBANDED解散 CLOSE归档 RECYCLE回收站状态
     * 新建项目后状态是WORKING，WORKING/CLOSE/RECYCLE回收站状态可以切换，但是一旦成为DISBANDED则说明项目已销毁无法变更状态
     * @param UpdateOapiWorkspaceStatusRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiWorkspaceStatusResponse
     */
    public function updateOapiWorkspaceStatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiWorkspaceStatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/status/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加用户到微应用可见范围
     * @param AddwithuseridOapiMicroappRequest $request
     * @return AddwithuseridOapiMicroappResponse
     */
    public function addwithuseridOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->addwithuseridOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 添加用户到微应用可见范围
     * @param AddwithuseridOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return AddwithuseridOapiMicroappResponse
     */
    public function addwithuseridOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddwithuseridOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/topapi/microapp/addwithuserid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取指定的企业是否开通了客服产品
     * @param GetOapiCustomerserviceStatusRequest $request
     * @return GetOapiCustomerserviceStatusResponse
     */
    public function getOapiCustomerserviceStatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCustomerserviceStatusEx($request, $runtime);
    }

    /**
     * Description: 获取指定的企业是否开通了客服产品
     * @param GetOapiCustomerserviceStatusRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCustomerserviceStatusResponse
     */
    public function getOapiCustomerserviceStatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiCustomerserviceStatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/status/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 去掉用户的微应用可见范围
     * @param DelwithuseridOapiMicroappRequest $request
     * @return DelwithuseridOapiMicroappResponse
     */
    public function delwithuseridOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->delwithuseridOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 去掉用户的微应用可见范围
     * @param DelwithuseridOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return DelwithuseridOapiMicroappResponse
     */
    public function delwithuseridOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DelwithuseridOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/topapi/microapp/delwithuserid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 约定的isv通过此接口提供其业务对象唯一标示及相关信息，钉钉返回一个引流页并提供一个token，token后续供钉钉用于识别该业务对象
     * @param GeneratecodeIsvBlazersRequest $request
     * @return GeneratecodeIsvBlazersResponse
     */
    public function generatecodeIsvBlazers($request){
        $runtime = new RuntimeOptions([]);
        return $this->generatecodeIsvBlazersEx($request, $runtime);
    }

    /**
     * Description: 约定的isv通过此接口提供其业务对象唯一标示及相关信息，钉钉返回一个引流页并提供一个token，token后续供钉钉用于识别该业务对象
     * @param GeneratecodeIsvBlazersRequest $request
     * @param RuntimeOptions $runtime
     * @return GeneratecodeIsvBlazersResponse
     */
    public function generatecodeIsvBlazersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GeneratecodeIsvBlazersResponse::fromMap($this->doRequest("dingtalk.isv.blazers.generatecode", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 报销-第三方app安装状态同步
     * @param SyncOapiAlitripBtripReimbursementAppstatusRequest $request
     * @return SyncOapiAlitripBtripReimbursementAppstatusResponse
     */
    public function syncOapiAlitripBtripReimbursementAppstatus($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiAlitripBtripReimbursementAppstatusEx($request, $runtime);
    }

    /**
     * Description: 报销-第三方app安装状态同步
     * @param SyncOapiAlitripBtripReimbursementAppstatusRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiAlitripBtripReimbursementAppstatusResponse
     */
    public function syncOapiAlitripBtripReimbursementAppstatusEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiAlitripBtripReimbursementAppstatusResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/reimbursement/appstatus/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取绑定信息
     * @param GetbinddataCorpBlazersRequest $request
     * @return GetbinddataCorpBlazersResponse
     */
    public function getbinddataCorpBlazers($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbinddataCorpBlazersEx($request, $runtime);
    }

    /**
     * Description: 获取绑定信息
     * @param GetbinddataCorpBlazersRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbinddataCorpBlazersResponse
     */
    public function getbinddataCorpBlazersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetbinddataCorpBlazersResponse::fromMap($this->doRequest("dingtalk.corp.blazers.getbinddata", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业工作台快捷方式
     * @param ListshortcutOapiOrgRequest $request
     * @return ListshortcutOapiOrgResponse
     */
    public function listshortcutOapiOrg($request){
        $runtime = new RuntimeOptions([]);
        return $this->listshortcutOapiOrgEx($request, $runtime);
    }

    /**
     * Description: 查询企业工作台快捷方式
     * @param ListshortcutOapiOrgRequest $request
     * @param RuntimeOptions $runtime
     * @return ListshortcutOapiOrgResponse
     */
    public function listshortcutOapiOrgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ListshortcutOapiOrgResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/listshortcut", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发送工资条之后，给没有激活的钉钉通讯录人员发送激活短信
     * @param SendforpayslipOapiSmartworkHrmSmsRequest $request
     * @return SendforpayslipOapiSmartworkHrmSmsResponse
     */
    public function sendforpayslipOapiSmartworkHrmSms($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendforpayslipOapiSmartworkHrmSmsEx($request, $runtime);
    }

    /**
     * Description: 发送工资条之后，给没有激活的钉钉通讯录人员发送激活短信
     * @param SendforpayslipOapiSmartworkHrmSmsRequest $request
     * @param RuntimeOptions $runtime
     * @return SendforpayslipOapiSmartworkHrmSmsResponse
     */
    public function sendforpayslipOapiSmartworkHrmSmsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendforpayslipOapiSmartworkHrmSmsResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/sms/sendforpayslip", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取bizId
     * @param GetbizidCorpBlazersRequest $request
     * @return GetbizidCorpBlazersResponse
     */
    public function getbizidCorpBlazers($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbizidCorpBlazersEx($request, $runtime);
    }

    /**
     * Description: 获取bizId
     * @param GetbizidCorpBlazersRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbizidCorpBlazersResponse
     */
    public function getbizidCorpBlazersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetbizidCorpBlazersResponse::fromMap($this->doRequest("dingtalk.corp.blazers.getbizid", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置企业工作台快捷方式列表
     * @param SetshortcutOapiOrgRequest $request
     * @return SetshortcutOapiOrgResponse
     */
    public function setshortcutOapiOrg($request){
        $runtime = new RuntimeOptions([]);
        return $this->setshortcutOapiOrgEx($request, $runtime);
    }

    /**
     * Description: 设置企业工作台快捷方式列表
     * @param SetshortcutOapiOrgRequest $request
     * @param RuntimeOptions $runtime
     * @return SetshortcutOapiOrgResponse
     */
    public function setshortcutOapiOrgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetshortcutOapiOrgResponse::fromMap($this->doRequestOApi("POST", "/topapi/org/setshortcut", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询开通餐补的企业用户是否具有餐补金额
     * @param CapacityOapiCateringDeductRequest $request
     * @return CapacityOapiCateringDeductResponse
     */
    public function capacityOapiCateringDeduct($request){
        $runtime = new RuntimeOptions([]);
        return $this->capacityOapiCateringDeductEx($request, $runtime);
    }

    /**
     * Description: 查询开通餐补的企业用户是否具有餐补金额
     * @param CapacityOapiCateringDeductRequest $request
     * @param RuntimeOptions $runtime
     * @return CapacityOapiCateringDeductResponse
     */
    public function capacityOapiCateringDeductEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CapacityOapiCateringDeductResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/deduct/capacity", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查看订单是否已经预抵扣金额
     * @param PredeductOapiCateringRequest $request
     * @return PredeductOapiCateringResponse
     */
    public function predeductOapiCatering($request){
        $runtime = new RuntimeOptions([]);
        return $this->predeductOapiCateringEx($request, $runtime);
    }

    /**
     * Description: 查看订单是否已经预抵扣金额
     * @param PredeductOapiCateringRequest $request
     * @param RuntimeOptions $runtime
     * @return PredeductOapiCateringResponse
     */
    public function predeductOapiCateringEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PredeductOapiCateringResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/prededuct", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 发起不带流程的审批实例
     * @param CreateOapiProcessWorkrecordRequest $request
     * @return CreateOapiProcessWorkrecordResponse
     */
    public function createOapiProcessWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiProcessWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 发起不带流程的审批实例
     * @param CreateOapiProcessWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiProcessWorkrecordResponse
     */
    public function createOapiProcessWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiProcessWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 同步待办实例状态
     * @param UpdateOapiProcessWorkrecordRequest $request
     * @return UpdateOapiProcessWorkrecordResponse
     */
    public function updateOapiProcessWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiProcessWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 同步待办实例状态
     * @param UpdateOapiProcessWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiProcessWorkrecordResponse
     */
    public function updateOapiProcessWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiProcessWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建待办任务
     * @param CreateOapiProcessWorkrecordTaskRequest $request
     * @return CreateOapiProcessWorkrecordTaskResponse
     */
    public function createOapiProcessWorkrecordTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiProcessWorkrecordTaskEx($request, $runtime);
    }

    /**
     * Description: 创建待办任务
     * @param CreateOapiProcessWorkrecordTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiProcessWorkrecordTaskResponse
     */
    public function createOapiProcessWorkrecordTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiProcessWorkrecordTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/task/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新待办任务状态
     * @param UpdateOapiProcessWorkrecordTaskRequest $request
     * @return UpdateOapiProcessWorkrecordTaskResponse
     */
    public function updateOapiProcessWorkrecordTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiProcessWorkrecordTaskEx($request, $runtime);
    }

    /**
     * Description: 更新待办任务状态
     * @param UpdateOapiProcessWorkrecordTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiProcessWorkrecordTaskResponse
     */
    public function updateOapiProcessWorkrecordTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiProcessWorkrecordTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/task/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建实例抄送人
     * @param CreateOapiProcessWorkrecordForwardRequest $request
     * @return CreateOapiProcessWorkrecordForwardResponse
     */
    public function createOapiProcessWorkrecordForward($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiProcessWorkrecordForwardEx($request, $runtime);
    }

    /**
     * Description: 创建实例抄送人
     * @param CreateOapiProcessWorkrecordForwardRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiProcessWorkrecordForwardResponse
     */
    public function createOapiProcessWorkrecordForwardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiProcessWorkrecordForwardResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/forward/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建待办模板
     * @param SaveOapiProcessWorkrecordTemplateRequest $request
     * @return SaveOapiProcessWorkrecordTemplateResponse
     */
    public function saveOapiProcessWorkrecordTemplate($request){
        $runtime = new RuntimeOptions([]);
        return $this->saveOapiProcessWorkrecordTemplateEx($request, $runtime);
    }

    /**
     * Description: 创建待办模板
     * @param SaveOapiProcessWorkrecordTemplateRequest $request
     * @param RuntimeOptions $runtime
     * @return SaveOapiProcessWorkrecordTemplateResponse
     */
    public function saveOapiProcessWorkrecordTemplateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SaveOapiProcessWorkrecordTemplateResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/template/save", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更换负责人要求新的负责人是项目成员。
     * 更换logo，图片要求是mediaId格式，参考https://ding-doc.dingtalk.com/doc#/serverapi2/bcmg0i
     * @param UpdateOapiWorkspaceRequest $request
     * @return UpdateOapiWorkspaceResponse
     */
    public function updateOapiWorkspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiWorkspaceEx($request, $runtime);
    }

    /**
     * Description: 更换负责人要求新的负责人是项目成员。
     * 更换logo，图片要求是mediaId格式，参考https://ding-doc.dingtalk.com/doc#/serverapi2/bcmg0i
     * @param UpdateOapiWorkspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiWorkspaceResponse
     */
    public function updateOapiWorkspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiWorkspaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取报销单
     * @param GetOapiAlitripBtripReimbursementRequest $request
     * @return GetOapiAlitripBtripReimbursementResponse
     */
    public function getOapiAlitripBtripReimbursement($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAlitripBtripReimbursementEx($request, $runtime);
    }

    /**
     * Description: 获取报销单
     * @param GetOapiAlitripBtripReimbursementRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAlitripBtripReimbursementResponse
     */
    public function getOapiAlitripBtripReimbursementEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAlitripBtripReimbursementResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/reimbursement/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 客服域的事件变更时，通知钉钉客服
     * @param ChangeOapiCustomerserviceEventRequest $request
     * @return ChangeOapiCustomerserviceEventResponse
     */
    public function changeOapiCustomerserviceEvent($request){
        $runtime = new RuntimeOptions([]);
        return $this->changeOapiCustomerserviceEventEx($request, $runtime);
    }

    /**
     * Description: 客服域的事件变更时，通知钉钉客服
     * @param ChangeOapiCustomerserviceEventRequest $request
     * @param RuntimeOptions $runtime
     * @return ChangeOapiCustomerserviceEventResponse
     */
    public function changeOapiCustomerserviceEventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ChangeOapiCustomerserviceEventResponse::fromMap($this->doRequestOApi("POST", "/topapi/customerservice/event/change", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据id查询任务详情
     * @param GetOapiWorkspaceTaskRequest $request
     * @return GetOapiWorkspaceTaskResponse
     */
    public function getOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 根据id查询任务详情
     * @param GetOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiWorkspaceTaskResponse
     */
    public function getOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据ID删除任务
     * @param DeleteOapiWorkspaceTaskRequest $request
     * @return DeleteOapiWorkspaceTaskResponse
     */
    public function deleteOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 根据ID删除任务
     * @param DeleteOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiWorkspaceTaskResponse
     */
    public function deleteOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新任务基础信息
     * @param UpdateOapiWorkspaceTaskRequest $request
     * @return UpdateOapiWorkspaceTaskResponse
     */
    public function updateOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 更新任务基础信息
     * @param UpdateOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiWorkspaceTaskResponse
     */
    public function updateOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取微应用可见范围
     * @param ListbypageOapiMicroappRequest $request
     * @return ListbypageOapiMicroappResponse
     */
    public function listbypageOapiMicroapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbypageOapiMicroappEx($request, $runtime);
    }

    /**
     * Description: 分页获取微应用可见范围
     * @param ListbypageOapiMicroappRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbypageOapiMicroappResponse
     */
    public function listbypageOapiMicroappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbypageOapiMicroappResponse::fromMap($this->doRequestOApi("POST", "/topapi/microapp/listbypage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增基础任务信息
     * @param CreateOapiWorkspaceTaskRequest $request
     * @return CreateOapiWorkspaceTaskResponse
     */
    public function createOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 新增基础任务信息
     * @param CreateOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiWorkspaceTaskResponse
     */
    public function createOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉数据：大客户部门维度直播汇总统计列表
     * @param ListOapiKacDatavDeptVideoliveRequest $request
     * @return ListOapiKacDatavDeptVideoliveResponse
     */
    public function listOapiKacDatavDeptVideolive($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavDeptVideoliveEx($request, $runtime);
    }

    /**
     * Description: 钉钉数据：大客户部门维度直播汇总统计列表
     * @param ListOapiKacDatavDeptVideoliveRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavDeptVideoliveResponse
     */
    public function listOapiKacDatavDeptVideoliveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavDeptVideoliveResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/dept/videolive/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 启用业务实例
     * @param EnableOapiPbpInstanceRequest $request
     * @return EnableOapiPbpInstanceResponse
     */
    public function enableOapiPbpInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->enableOapiPbpInstanceEx($request, $runtime);
    }

    /**
     * Description: 启用业务实例
     * @param EnableOapiPbpInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return EnableOapiPbpInstanceResponse
     */
    public function enableOapiPbpInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return EnableOapiPbpInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/instance/enable", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过机器人单聊会话主动给企业内员工发送消息。
     * @param SendOapiChatbotMessageRequest $request
     * @return SendOapiChatbotMessageResponse
     */
    public function sendOapiChatbotMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiChatbotMessageEx($request, $runtime);
    }

    /**
     * Description: 通过机器人单聊会话主动给企业内员工发送消息。
     * @param SendOapiChatbotMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiChatbotMessageResponse
     */
    public function sendOapiChatbotMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiChatbotMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/chatbot/message/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据用户手机号和企业名称获取企业信息
     * @param ListOapiUserCorpinfoRequest $request
     * @return ListOapiUserCorpinfoResponse
     */
    public function listOapiUserCorpinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiUserCorpinfoEx($request, $runtime);
    }

    /**
     * Description: 根据用户手机号和企业名称获取企业信息
     * @param ListOapiUserCorpinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiUserCorpinfoResponse
     */
    public function listOapiUserCorpinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiUserCorpinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/user/corpinfo/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 特渠专用下单接口
     * @param Create_orderOapiAppstoreOrdersSpecial_canalRequest $request
     * @return Create_orderOapiAppstoreOrdersSpecial_canalResponse
     */
    public function create_orderOapiAppstoreOrdersSpecial_canal($request){
        $runtime = new RuntimeOptions([]);
        return $this->create_orderOapiAppstoreOrdersSpecial_canalEx($request, $runtime);
    }

    /**
     * Description: 特渠专用下单接口
     * @param Create_orderOapiAppstoreOrdersSpecial_canalRequest $request
     * @param RuntimeOptions $runtime
     * @return Create_orderOapiAppstoreOrdersSpecial_canalResponse
     */
    public function create_orderOapiAppstoreOrdersSpecial_canalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Create_orderOapiAppstoreOrdersSpecial_canalResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/orders/special_canal/create_order", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新联通订单状态
     * @param Update_orderOapiAppstoreOrdersSpecial_canalRequest $request
     * @return Update_orderOapiAppstoreOrdersSpecial_canalResponse
     */
    public function update_orderOapiAppstoreOrdersSpecial_canal($request){
        $runtime = new RuntimeOptions([]);
        return $this->update_orderOapiAppstoreOrdersSpecial_canalEx($request, $runtime);
    }

    /**
     * Description: 更新联通订单状态
     * @param Update_orderOapiAppstoreOrdersSpecial_canalRequest $request
     * @param RuntimeOptions $runtime
     * @return Update_orderOapiAppstoreOrdersSpecial_canalResponse
     */
    public function update_orderOapiAppstoreOrdersSpecial_canalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Update_orderOapiAppstoreOrdersSpecial_canalResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/orders/special_canal/update_order", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询商品详情
     * @param QueryOapiAppstoreGoodsRequest $request
     * @return QueryOapiAppstoreGoodsResponse
     */
    public function queryOapiAppstoreGoods($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAppstoreGoodsEx($request, $runtime);
    }

    /**
     * Description: 查询商品详情
     * @param QueryOapiAppstoreGoodsRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAppstoreGoodsResponse
     */
    public function queryOapiAppstoreGoodsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAppstoreGoodsResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/goods/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业可以根据员工userid或者日志模板名称，分页获取员工一段时间范围内在【日志】微应用发送的日志详细信息
     * @param ListCorpReportRequest $request
     * @return ListCorpReportResponse
     */
    public function listCorpReport($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpReportEx($request, $runtime);
    }

    /**
     * Description: 企业可以根据员工userid或者日志模板名称，分页获取员工一段时间范围内在【日志】微应用发送的日志详细信息
     * @param ListCorpReportRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpReportResponse
     */
    public function listCorpReportEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListCorpReportResponse::fromMap($this->doRequest("dingtalk.corp.report.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 商品询价接口
     * @param InquiryOapiAppstoreOrdersRequest $request
     * @return InquiryOapiAppstoreOrdersResponse
     */
    public function inquiryOapiAppstoreOrders($request){
        $runtime = new RuntimeOptions([]);
        return $this->inquiryOapiAppstoreOrdersEx($request, $runtime);
    }

    /**
     * Description: 商品询价接口
     * @param InquiryOapiAppstoreOrdersRequest $request
     * @param RuntimeOptions $runtime
     * @return InquiryOapiAppstoreOrdersResponse
     */
    public function inquiryOapiAppstoreOrdersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InquiryOapiAppstoreOrdersResponse::fromMap($this->doRequestOApi("POST", "/topapi/appstore/orders/inquiry", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉多场景打卡业务，开放小闹钟入口，接入方同步打卡事件【结果】到打卡平台。
     * @param SyncOapiPbpEventResultRequest $request
     * @return SyncOapiPbpEventResultResponse
     */
    public function syncOapiPbpEventResult($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiPbpEventResultEx($request, $runtime);
    }

    /**
     * Description: 钉钉多场景打卡业务，开放小闹钟入口，接入方同步打卡事件【结果】到打卡平台。
     * @param SyncOapiPbpEventResultRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiPbpEventResultResponse
     */
    public function syncOapiPbpEventResultEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiPbpEventResultResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/event/result/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉多场景打卡业务，开放小闹钟入口，接入方删除打卡事件
     * @param DeleteOapiPbpEventRequest $request
     * @return DeleteOapiPbpEventResponse
     */
    public function deleteOapiPbpEvent($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiPbpEventEx($request, $runtime);
    }

    /**
     * Description: 钉钉多场景打卡业务，开放小闹钟入口，接入方删除打卡事件
     * @param DeleteOapiPbpEventRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiPbpEventResponse
     */
    public function deleteOapiPbpEventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiPbpEventResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/event/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉多场景打卡业务，开放小闹钟入口，接入方同步打卡事件到打卡平台。
     * @param SyncOapiPbpEventRequest $request
     * @return SyncOapiPbpEventResponse
     */
    public function syncOapiPbpEvent($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncOapiPbpEventEx($request, $runtime);
    }

    /**
     * Description: 钉钉多场景打卡业务，开放小闹钟入口，接入方同步打卡事件到打卡平台。
     * @param SyncOapiPbpEventRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncOapiPbpEventResponse
     */
    public function syncOapiPbpEventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncOapiPbpEventResponse::fromMap($this->doRequestOApi("POST", "/topapi/pbp/event/sync", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量获取填表记录
     * @param ListOapiCollectionInstanceRequest $request
     * @return ListOapiCollectionInstanceResponse
     */
    public function listOapiCollectionInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCollectionInstanceEx($request, $runtime);
    }

    /**
     * Description: 批量获取填表记录
     * @param ListOapiCollectionInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCollectionInstanceResponse
     */
    public function listOapiCollectionInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCollectionInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/collection/instance/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉企业通讯录搜索接口, 支持翻页
     * @param SearchCorpEmpRequest $request
     * @return SearchCorpEmpResponse
     */
    public function searchCorpEmp($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchCorpEmpEx($request, $runtime);
    }

    /**
     * Description: 钉钉企业通讯录搜索接口, 支持翻页
     * @param SearchCorpEmpRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchCorpEmpResponse
     */
    public function searchCorpEmpEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchCorpEmpResponse::fromMap($this->doRequest("dingtalk.corp.emp.search", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口提供了通过审批单进行换班的能力，可以和自己换班，也可以和别人换班。有以下几个约束条件
     * 1.换班双方必须都在排班制考勤组。
     * 2.换班日期和还班日期双方必须都要有排班或排休
     * 3.换完班后的打卡时间不能有冲突，例如原先1号的排班是8：00-22：00，2号的排班是10：00-次日9：00，换完班后1号的排班是10：00-次日9：00，2号的排班是8：00-22：00，此时1号的打卡时间范围内包含了2号上班时间，这种情况称之为打卡时间冲突。
     * @param SwitchOapiAttendanceApproveScheduleRequest $request
     * @return SwitchOapiAttendanceApproveScheduleResponse
     */
    public function switchOapiAttendanceApproveSchedule($request){
        $runtime = new RuntimeOptions([]);
        return $this->switchOapiAttendanceApproveScheduleEx($request, $runtime);
    }

    /**
     * Description: 该接口提供了通过审批单进行换班的能力，可以和自己换班，也可以和别人换班。有以下几个约束条件
     * 1.换班双方必须都在排班制考勤组。
     * 2.换班日期和还班日期双方必须都要有排班或排休
     * 3.换完班后的打卡时间不能有冲突，例如原先1号的排班是8：00-22：00，2号的排班是10：00-次日9：00，换完班后1号的排班是10：00-次日9：00，2号的排班是8：00-22：00，此时1号的打卡时间范围内包含了2号上班时间，这种情况称之为打卡时间冲突。
     * @param SwitchOapiAttendanceApproveScheduleRequest $request
     * @param RuntimeOptions $runtime
     * @return SwitchOapiAttendanceApproveScheduleResponse
     */
    public function switchOapiAttendanceApproveScheduleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SwitchOapiAttendanceApproveScheduleResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/approve/schedule/switch", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新零售场景下，通过系统账号或员工账号向员工发送单聊账号
     * @param SendstaffmessageOapiImpaasNewretailRequest $request
     * @return SendstaffmessageOapiImpaasNewretailResponse
     */
    public function sendstaffmessageOapiImpaasNewretail($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendstaffmessageOapiImpaasNewretailEx($request, $runtime);
    }

    /**
     * Description: 新零售场景下，通过系统账号或员工账号向员工发送单聊账号
     * @param SendstaffmessageOapiImpaasNewretailRequest $request
     * @param RuntimeOptions $runtime
     * @return SendstaffmessageOapiImpaasNewretailResponse
     */
    public function sendstaffmessageOapiImpaasNewretailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendstaffmessageOapiImpaasNewretailResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/newretail/sendstaffmessage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业在做企业内部组织结构角色管理的时候，如果需要删除该企业下某个角色信息，可以调用该接口。调用的前提是该角色下面的所有员工都已经被删除该角色
     * @param DeleteroleCorpRoleRequest $request
     * @return DeleteroleCorpRoleResponse
     */
    public function deleteroleCorpRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteroleCorpRoleEx($request, $runtime);
    }

    /**
     * Description: 企业在做企业内部组织结构角色管理的时候，如果需要删除该企业下某个角色信息，可以调用该接口。调用的前提是该角色下面的所有员工都已经被删除该角色
     * @param DeleteroleCorpRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteroleCorpRoleResponse
     */
    public function deleteroleCorpRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteroleCorpRoleResponse::fromMap($this->doRequest("dingtalk.corp.role.deleterole", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口通过groupId参数可以获取该角色组详细信息以及下面所有关联的角色的信息
     * @param GetrolegroupCorpRoleRequest $request
     * @return GetrolegroupCorpRoleResponse
     */
    public function getrolegroupCorpRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->getrolegroupCorpRoleEx($request, $runtime);
    }

    /**
     * Description: 该接口通过groupId参数可以获取该角色组详细信息以及下面所有关联的角色的信息
     * @param GetrolegroupCorpRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return GetrolegroupCorpRoleResponse
     */
    public function getrolegroupCorpRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetrolegroupCorpRoleResponse::fromMap($this->doRequest("dingtalk.corp.role.getrolegroup", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量为员工增加角色信息
     * @param AddrolesforempsCorpRoleRequest $request
     * @return AddrolesforempsCorpRoleResponse
     */
    public function addrolesforempsCorpRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->addrolesforempsCorpRoleEx($request, $runtime);
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量为员工增加角色信息
     * @param AddrolesforempsCorpRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return AddrolesforempsCorpRoleResponse
     */
    public function addrolesforempsCorpRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddrolesforempsCorpRoleResponse::fromMap($this->doRequest("dingtalk.corp.role.addrolesforemps", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量删除员工的角色信息
     * @param RemoverolesforempsCorpRoleRequest $request
     * @return RemoverolesforempsCorpRoleResponse
     */
    public function removerolesforempsCorpRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->removerolesforempsCorpRoleEx($request, $runtime);
    }

    /**
     * Description: 企业在做企业员工管理的时候，需要对部分员工进行角色分类，该接口可以批量删除员工的角色信息
     * @param RemoverolesforempsCorpRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoverolesforempsCorpRoleResponse
     */
    public function removerolesforempsCorpRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoverolesforempsCorpRoleResponse::fromMap($this->doRequest("dingtalk.corp.role.removerolesforemps", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量取消任务
     * @param CancelOapiProcessWorkrecordTaskgroupRequest $request
     * @return CancelOapiProcessWorkrecordTaskgroupResponse
     */
    public function cancelOapiProcessWorkrecordTaskgroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiProcessWorkrecordTaskgroupEx($request, $runtime);
    }

    /**
     * Description: 批量取消任务
     * @param CancelOapiProcessWorkrecordTaskgroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiProcessWorkrecordTaskgroupResponse
     */
    public function cancelOapiProcessWorkrecordTaskgroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiProcessWorkrecordTaskgroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/taskgroup/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据模板名称获取模板code
     * @param Get_by_nameOapiProcessRequest $request
     * @return Get_by_nameOapiProcessResponse
     */
    public function get_by_nameOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_by_nameOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 根据模板名称获取模板code
     * @param Get_by_nameOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_by_nameOapiProcessResponse
     */
    public function get_by_nameOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_by_nameOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/get_by_name", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新零售场景下，先创建某企业的内部群。
     * 然后用特定的系统账号向群内发送群聊消息
     * @param SendstaffgroupmessageOapiImpaasNewretailRequest $request
     * @return SendstaffgroupmessageOapiImpaasNewretailResponse
     */
    public function sendstaffgroupmessageOapiImpaasNewretail($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendstaffgroupmessageOapiImpaasNewretailEx($request, $runtime);
    }

    /**
     * Description: 新零售场景下，先创建某企业的内部群。
     * 然后用特定的系统账号向群内发送群聊消息
     * @param SendstaffgroupmessageOapiImpaasNewretailRequest $request
     * @param RuntimeOptions $runtime
     * @return SendstaffgroupmessageOapiImpaasNewretailResponse
     */
    public function sendstaffgroupmessageOapiImpaasNewretailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendstaffgroupmessageOapiImpaasNewretailResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/newretail/sendstaffgroupmessage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV向钉钉智能硬件取消授权企业的访客邀约记录，以实现与智能识别设备的打通流程
     * @param RemovevisitorOapiSmartdeviceVisitorRequest $request
     * @return RemovevisitorOapiSmartdeviceVisitorResponse
     */
    public function removevisitorOapiSmartdeviceVisitor($request){
        $runtime = new RuntimeOptions([]);
        return $this->removevisitorOapiSmartdeviceVisitorEx($request, $runtime);
    }

    /**
     * Description: ISV向钉钉智能硬件取消授权企业的访客邀约记录，以实现与智能识别设备的打通流程
     * @param RemovevisitorOapiSmartdeviceVisitorRequest $request
     * @param RuntimeOptions $runtime
     * @return RemovevisitorOapiSmartdeviceVisitorResponse
     */
    public function removevisitorOapiSmartdeviceVisitorEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemovevisitorOapiSmartdeviceVisitorResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/visitor/removevisitor", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 业务方（icbu)添加了子账号后需要同步到钉钉，
     * 该接口提供子账号创建及子账号加入主账号组织功能
     * @param AddOapiImpaasUserSubaccountRequest $request
     * @return AddOapiImpaasUserSubaccountResponse
     */
    public function addOapiImpaasUserSubaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiImpaasUserSubaccountEx($request, $runtime);
    }

    /**
     * Description: 业务方（icbu)添加了子账号后需要同步到钉钉，
     * 该接口提供子账号创建及子账号加入主账号组织功能
     * @param AddOapiImpaasUserSubaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiImpaasUserSubaccountResponse
     */
    public function addOapiImpaasUserSubaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiImpaasUserSubaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/user/subaccount/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 业务方（icbu)删除了子账号后需要同步到钉钉，
     * 该接口提供子账号退出主账号组织功能
     * @param DeleteOapiImpaasUserSubaccountRequest $request
     * @return DeleteOapiImpaasUserSubaccountResponse
     */
    public function deleteOapiImpaasUserSubaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiImpaasUserSubaccountEx($request, $runtime);
    }

    /**
     * Description: 业务方（icbu)删除了子账号后需要同步到钉钉，
     * 该接口提供子账号退出主账号组织功能
     * @param DeleteOapiImpaasUserSubaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiImpaasUserSubaccountResponse
     */
    public function deleteOapiImpaasUserSubaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiImpaasUserSubaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/user/subaccount/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业应用，向自己的企业群，添加已安装的企业机器人
     * @param AddchatbotinstanceCorpChatbotRequest $request
     * @return AddchatbotinstanceCorpChatbotResponse
     */
    public function addchatbotinstanceCorpChatbot($request){
        $runtime = new RuntimeOptions([]);
        return $this->addchatbotinstanceCorpChatbotEx($request, $runtime);
    }

    /**
     * Description: 企业应用，向自己的企业群，添加已安装的企业机器人
     * @param AddchatbotinstanceCorpChatbotRequest $request
     * @param RuntimeOptions $runtime
     * @return AddchatbotinstanceCorpChatbotResponse
     */
    public function addchatbotinstanceCorpChatbotEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddchatbotinstanceCorpChatbotResponse::fromMap($this->doRequest("dingtalk.corp.chatbot.addchatbotinstance", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除创建的审批模板
     * @param DeleteOapiProcessRequest $request
     * @return DeleteOapiProcessResponse
     */
    public function deleteOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 删除创建的审批模板
     * @param DeleteOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiProcessResponse
     */
    public function deleteOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户创建的填表模板
     * @param ListOapiCollectionFormRequest $request
     * @return ListOapiCollectionFormResponse
     */
    public function listOapiCollectionForm($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCollectionFormEx($request, $runtime);
    }

    /**
     * Description: 获取用户创建的填表模板
     * @param ListOapiCollectionFormRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCollectionFormResponse
     */
    public function listOapiCollectionFormEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCollectionFormResponse::fromMap($this->doRequestOApi("POST", "/topapi/collection/form/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: CRM主数据，创建客户数据
     * @param CreateOapiCrmObjectdataCustomerRequest $request
     * @return CreateOapiCrmObjectdataCustomerResponse
     */
    public function createOapiCrmObjectdataCustomer($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCrmObjectdataCustomerEx($request, $runtime);
    }

    /**
     * Description: CRM主数据，创建客户数据
     * @param CreateOapiCrmObjectdataCustomerRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCrmObjectdataCustomerResponse
     */
    public function createOapiCrmObjectdataCustomerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCrmObjectdataCustomerResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/customer/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: CRM主数据，更新联系人数据
     * @param UpdateOapiCrmObjectdataContactRequest $request
     * @return UpdateOapiCrmObjectdataContactResponse
     */
    public function updateOapiCrmObjectdataContact($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCrmObjectdataContactEx($request, $runtime);
    }

    /**
     * Description: CRM主数据，更新联系人数据
     * @param UpdateOapiCrmObjectdataContactRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCrmObjectdataContactResponse
     */
    public function updateOapiCrmObjectdataContactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCrmObjectdataContactResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/contact/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业活跃度
     * @param GetCorpLivenessRequest $request
     * @return GetCorpLivenessResponse
     */
    public function getCorpLiveness($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCorpLivenessEx($request, $runtime);
    }

    /**
     * Description: 获取企业活跃度
     * @param GetCorpLivenessRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCorpLivenessResponse
     */
    public function getCorpLivenessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetCorpLivenessResponse::fromMap($this->doRequest("dingtalk.corp.liveness.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉PaaS主数据-更新CRM客户数据
     * @param UpdateOapiCrmObjectdataCustomerRequest $request
     * @return UpdateOapiCrmObjectdataCustomerResponse
     */
    public function updateOapiCrmObjectdataCustomer($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCrmObjectdataCustomerEx($request, $runtime);
    }

    /**
     * Description: 钉钉PaaS主数据-更新CRM客户数据
     * @param UpdateOapiCrmObjectdataCustomerRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCrmObjectdataCustomerResponse
     */
    public function updateOapiCrmObjectdataCustomerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCrmObjectdataCustomerResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/customer/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: CRM主数据，创建联系人数据
     * @param CreateOapiCrmObjectdataContactRequest $request
     * @return CreateOapiCrmObjectdataContactResponse
     */
    public function createOapiCrmObjectdataContact($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCrmObjectdataContactEx($request, $runtime);
    }

    /**
     * Description: CRM主数据，创建联系人数据
     * @param CreateOapiCrmObjectdataContactRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCrmObjectdataContactResponse
     */
    public function createOapiCrmObjectdataContactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCrmObjectdataContactResponse::fromMap($this->doRequestOApi("POST", "/topapi/crm/objectdata/contact/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 解除企业下的智能硬件设备绑定
     * @param UnbindOapiSmartdeviceDeviceRequest $request
     * @return UnbindOapiSmartdeviceDeviceResponse
     */
    public function unbindOapiSmartdeviceDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindOapiSmartdeviceDeviceEx($request, $runtime);
    }

    /**
     * Description: 解除企业下的智能硬件设备绑定
     * @param UnbindOapiSmartdeviceDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindOapiSmartdeviceDeviceResponse
     */
    public function unbindOapiSmartdeviceDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnbindOapiSmartdeviceDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/device/unbind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 解除企业下的智能硬件设备绑定
     * @param UpdatenickOapiSmartdeviceDeviceRequest $request
     * @return UpdatenickOapiSmartdeviceDeviceResponse
     */
    public function updatenickOapiSmartdeviceDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->updatenickOapiSmartdeviceDeviceEx($request, $runtime);
    }

    /**
     * Description: 解除企业下的智能硬件设备绑定
     * @param UpdatenickOapiSmartdeviceDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdatenickOapiSmartdeviceDeviceResponse
     */
    public function updatenickOapiSmartdeviceDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdatenickOapiSmartdeviceDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/device/updatenick", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业下的智能硬件设备详情
     * @param QueryOapiSmartdeviceDeviceRequest $request
     * @return QueryOapiSmartdeviceDeviceResponse
     */
    public function queryOapiSmartdeviceDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiSmartdeviceDeviceEx($request, $runtime);
    }

    /**
     * Description: 查询企业下的智能硬件设备详情
     * @param QueryOapiSmartdeviceDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiSmartdeviceDeviceResponse
     */
    public function queryOapiSmartdeviceDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiSmartdeviceDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/device/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门成员（详情）
     * @param ListbypageOapiUserRequest $request
     * @return ListbypageOapiUserResponse
     */
    public function listbypageOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbypageOapiUserEx($request, $runtime);
    }

    /**
     * Description: 获取部门成员（详情）
     * @param ListbypageOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbypageOapiUserResponse
     */
    public function listbypageOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbypageOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/listbypage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业下的智能硬件设备列表
     * @param QuerylistOapiSmartdeviceDeviceRequest $request
     * @return QuerylistOapiSmartdeviceDeviceResponse
     */
    public function querylistOapiSmartdeviceDevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->querylistOapiSmartdeviceDeviceEx($request, $runtime);
    }

    /**
     * Description: 查询企业下的智能硬件设备列表
     * @param QuerylistOapiSmartdeviceDeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerylistOapiSmartdeviceDeviceResponse
     */
    public function querylistOapiSmartdeviceDeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QuerylistOapiSmartdeviceDeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/device/querylist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询群是否处于禁言状态，查询单个人在群中的禁言状态
     * @param QueryOapiChatBanwordsRequest $request
     * @return QueryOapiChatBanwordsResponse
     */
    public function queryOapiChatBanwords($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiChatBanwordsEx($request, $runtime);
    }

    /**
     * Description: 查询群是否处于禁言状态，查询单个人在群中的禁言状态
     * @param QueryOapiChatBanwordsRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiChatBanwordsResponse
     */
    public function queryOapiChatBanwordsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiChatBanwordsResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/banwords/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给硬件设备分配设备id
     * @param ApplyoutidOapiSmartdeviceRequest $request
     * @return ApplyoutidOapiSmartdeviceResponse
     */
    public function applyoutidOapiSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->applyoutidOapiSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 给硬件设备分配设备id
     * @param ApplyoutidOapiSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return ApplyoutidOapiSmartdeviceResponse
     */
    public function applyoutidOapiSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ApplyoutidOapiSmartdeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/applyoutid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业应用，向自己的企业群里通过智能群助理账户发送动态卡片
     * @param SendOapiImIntelligentCardRequest $request
     * @return SendOapiImIntelligentCardResponse
     */
    public function sendOapiImIntelligentCard($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiImIntelligentCardEx($request, $runtime);
    }

    /**
     * Description: 企业应用，向自己的企业群里通过智能群助理账户发送动态卡片
     * @param SendOapiImIntelligentCardRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiImIntelligentCardResponse
     */
    public function sendOapiImIntelligentCardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiImIntelligentCardResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/intelligent/card/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据生产订单number查询生产订单信息
     * @param GetOapiNewmanufacturerOrderRequest $request
     * @return GetOapiNewmanufacturerOrderResponse
     */
    public function getOapiNewmanufacturerOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiNewmanufacturerOrderEx($request, $runtime);
    }

    /**
     * Description: 根据生产订单number查询生产订单信息
     * @param GetOapiNewmanufacturerOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiNewmanufacturerOrderResponse
     */
    public function getOapiNewmanufacturerOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiNewmanufacturerOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/newmanufacturer/order/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置群成员之间是否可以添加好友和私聊的开关
     * @param UpdateOapiChatMemberFriendswitchRequest $request
     * @return UpdateOapiChatMemberFriendswitchResponse
     */
    public function updateOapiChatMemberFriendswitch($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiChatMemberFriendswitchEx($request, $runtime);
    }

    /**
     * Description: 设置群成员之间是否可以添加好友和私聊的开关
     * @param UpdateOapiChatMemberFriendswitchRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiChatMemberFriendswitchResponse
     */
    public function updateOapiChatMemberFriendswitchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiChatMemberFriendswitchResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/member/friendswitch/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉考勤微应用，提供了排班的功能，企业管理员可以设置排班规则，该接口可以自动根据排班规则统计出每个员工的请假时长，进而可以与企业自有的请假／财务系统对接，进行工资统计，如果您的企业使用了钉钉考勤并希望依赖考勤系统自动计算员工请假时长，可选择使用此接口
     * @param GetleaveapprovedurationSmartworkAttendsRequest $request
     * @return GetleaveapprovedurationSmartworkAttendsResponse
     */
    public function getleaveapprovedurationSmartworkAttends($request){
        $runtime = new RuntimeOptions([]);
        return $this->getleaveapprovedurationSmartworkAttendsEx($request, $runtime);
    }

    /**
     * Description: 钉钉考勤微应用，提供了排班的功能，企业管理员可以设置排班规则，该接口可以自动根据排班规则统计出每个员工的请假时长，进而可以与企业自有的请假／财务系统对接，进行工资统计，如果您的企业使用了钉钉考勤并希望依赖考勤系统自动计算员工请假时长，可选择使用此接口
     * @param GetleaveapprovedurationSmartworkAttendsRequest $request
     * @param RuntimeOptions $runtime
     * @return GetleaveapprovedurationSmartworkAttendsResponse
     */
    public function getleaveapprovedurationSmartworkAttendsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetleaveapprovedurationSmartworkAttendsResponse::fromMap($this->doRequest("dingtalk.smartwork.attends.getleaveapproveduration", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过主键 id 查询 PackageConfig 记录
     * @param QueryOapiMiniappPackageconfigRequest $request
     * @return QueryOapiMiniappPackageconfigResponse
     */
    public function queryOapiMiniappPackageconfig($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMiniappPackageconfigEx($request, $runtime);
    }

    /**
     * Description: 通过主键 id 查询 PackageConfig 记录
     * @param QueryOapiMiniappPackageconfigRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMiniappPackageconfigResponse
     */
    public function queryOapiMiniappPackageconfigEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMiniappPackageconfigResponse::fromMap($this->doRequestOApi("POST", "/topapi/miniapp/packageconfig/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给新零售查询企业认证信息
     * @param QueryorginfoOapiNewretailRequest $request
     * @return QueryorginfoOapiNewretailResponse
     */
    public function queryorginfoOapiNewretail($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryorginfoOapiNewretailEx($request, $runtime);
    }

    /**
     * Description: 提供给新零售查询企业认证信息
     * @param QueryorginfoOapiNewretailRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryorginfoOapiNewretailResponse
     */
    public function queryorginfoOapiNewretailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return QueryorginfoOapiNewretailResponse::fromMap($this->doRequestOApi("POST", "/topapi/newretail/queryorginfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 接收第三方云平台上报的设备数据，保存到钉钉，开放给isv使用
     * @param PostOapiSmartdeviceEventRequest $request
     * @return PostOapiSmartdeviceEventResponse
     */
    public function postOapiSmartdeviceEvent($request){
        $runtime = new RuntimeOptions([]);
        return $this->postOapiSmartdeviceEventEx($request, $runtime);
    }

    /**
     * Description: 接收第三方云平台上报的设备数据，保存到钉钉，开放给isv使用
     * @param PostOapiSmartdeviceEventRequest $request
     * @param RuntimeOptions $runtime
     * @return PostOapiSmartdeviceEventResponse
     */
    public function postOapiSmartdeviceEventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PostOapiSmartdeviceEventResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/event/post", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能设备接入钉钉时，需要和组织建立绑定关系，此接口用于创建绑定关系。
     * @param BindOapiSmartdeviceExternalRequest $request
     * @return BindOapiSmartdeviceExternalResponse
     */
    public function bindOapiSmartdeviceExternal($request){
        $runtime = new RuntimeOptions([]);
        return $this->bindOapiSmartdeviceExternalEx($request, $runtime);
    }

    /**
     * Description: 智能设备接入钉钉时，需要和组织建立绑定关系，此接口用于创建绑定关系。
     * @param BindOapiSmartdeviceExternalRequest $request
     * @param RuntimeOptions $runtime
     * @return BindOapiSmartdeviceExternalResponse
     */
    public function bindOapiSmartdeviceExternalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BindOapiSmartdeviceExternalResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/external/bind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新作业批改结果，更新作业的相似度、得分以及按句分析的结果
     * @param UpdateOapiCircleEnworkRequest $request
     * @return UpdateOapiCircleEnworkResponse
     */
    public function updateOapiCircleEnwork($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCircleEnworkEx($request, $runtime);
    }

    /**
     * Description: 更新作业批改结果，更新作业的相似度、得分以及按句分析的结果
     * @param UpdateOapiCircleEnworkRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCircleEnworkResponse
     */
    public function updateOapiCircleEnworkEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCircleEnworkResponse::fromMap($this->doRequestOApi("POST", "/topapi/circle/enwork/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 1、订单支付成功通知服务商
     * 服务商下的所有商品支付成功后通知服务商
     * 2、支持服务商在订单支付成功后发送群文件
     * 订单支付成功后，服务商才能调接口发送对应文件
     * 发送文件的接口也需要限定时间（x小时内）
     * @param SendOapiServicegroupMessageRequest $request
     * @return SendOapiServicegroupMessageResponse
     */
    public function sendOapiServicegroupMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiServicegroupMessageEx($request, $runtime);
    }

    /**
     * Description: 1、订单支付成功通知服务商
     * 服务商下的所有商品支付成功后通知服务商
     * 2、支持服务商在订单支付成功后发送群文件
     * 订单支付成功后，服务商才能调接口发送对应文件
     * 发送文件的接口也需要限定时间（x小时内）
     * @param SendOapiServicegroupMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiServicegroupMessageResponse
     */
    public function sendOapiServicegroupMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiServicegroupMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/servicegroup/message/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取复工审批模板code
     * @param GetOapiFugongProcess_codeRequest $request
     * @return GetOapiFugongProcess_codeResponse
     */
    public function getOapiFugongProcess_code($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiFugongProcess_codeEx($request, $runtime);
    }

    /**
     * Description: 获取复工审批模板code
     * @param GetOapiFugongProcess_codeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiFugongProcess_codeResponse
     */
    public function getOapiFugongProcess_codeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetOapiFugongProcess_codeResponse::fromMap($this->doRequestOApi("POST", "/topapi/fugong/process_code/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取员工健康打卡数据
     * @param ListOapiFugongHealth_dataRequest $request
     * @return ListOapiFugongHealth_dataResponse
     */
    public function listOapiFugongHealth_data($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiFugongHealth_dataEx($request, $runtime);
    }

    /**
     * Description: 获取员工健康打卡数据
     * @param ListOapiFugongHealth_dataRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiFugongHealth_dataResponse
     */
    public function listOapiFugongHealth_dataEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiFugongHealth_dataResponse::fromMap($this->doRequestOApi("POST", "/topapi/fugong/health_data/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能制造-开放服务查询
     * @param QueryOapiRhinoOpenserviceRequest $request
     * @return QueryOapiRhinoOpenserviceResponse
     */
    public function queryOapiRhinoOpenservice($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoOpenserviceEx($request, $runtime);
    }

    /**
     * Description: 智能制造-开放服务查询
     * @param QueryOapiRhinoOpenserviceRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoOpenserviceResponse
     */
    public function queryOapiRhinoOpenserviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoOpenserviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/openservice/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给isv应用的测试圈子安装应用接口，方便isv给自己的圈子做测试
     * @param InstallOapiWorkspaceTestappRequest $request
     * @return InstallOapiWorkspaceTestappResponse
     */
    public function installOapiWorkspaceTestapp($request){
        $runtime = new RuntimeOptions([]);
        return $this->installOapiWorkspaceTestappEx($request, $runtime);
    }

    /**
     * Description: 提供给isv应用的测试圈子安装应用接口，方便isv给自己的圈子做测试
     * @param InstallOapiWorkspaceTestappRequest $request
     * @param RuntimeOptions $runtime
     * @return InstallOapiWorkspaceTestappResponse
     */
    public function installOapiWorkspaceTestappEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InstallOapiWorkspaceTestappResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/testapp/install", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 配置客户端开放点自定义能力
     * @param SetOapiCustomizeConfigRequest $request
     * @return SetOapiCustomizeConfigResponse
     */
    public function setOapiCustomizeConfig($request){
        $runtime = new RuntimeOptions([]);
        return $this->setOapiCustomizeConfigEx($request, $runtime);
    }

    /**
     * Description: 配置客户端开放点自定义能力
     * @param SetOapiCustomizeConfigRequest $request
     * @param RuntimeOptions $runtime
     * @return SetOapiCustomizeConfigResponse
     */
    public function setOapiCustomizeConfigEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetOapiCustomizeConfigResponse::fromMap($this->doRequestOApi("POST", "/topapi/customize/config/set", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取绑定的淘宝账号信息（商旅预订过程中需要绑定淘宝帐号），用于查看当前绑定的淘帐号信息，如需更换，可通过解绑接口进行解绑。
     * @param GetOapiAlitripBtripBindTaobaoRequest $request
     * @return GetOapiAlitripBtripBindTaobaoResponse
     */
    public function getOapiAlitripBtripBindTaobao($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAlitripBtripBindTaobaoEx($request, $runtime);
    }

    /**
     * Description: 获取绑定的淘宝账号信息（商旅预订过程中需要绑定淘宝帐号），用于查看当前绑定的淘帐号信息，如需更换，可通过解绑接口进行解绑。
     * @param GetOapiAlitripBtripBindTaobaoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAlitripBtripBindTaobaoResponse
     */
    public function getOapiAlitripBtripBindTaobaoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAlitripBtripBindTaobaoResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/bind/taobao/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供各个场景预订访问地址，以及我的订单地址
     * @param GetOapiAlitripBtripAddressRequest $request
     * @return GetOapiAlitripBtripAddressResponse
     */
    public function getOapiAlitripBtripAddress($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAlitripBtripAddressEx($request, $runtime);
    }

    /**
     * Description: 提供各个场景预订访问地址，以及我的订单地址
     * @param GetOapiAlitripBtripAddressRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAlitripBtripAddressResponse
     */
    public function getOapiAlitripBtripAddressEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAlitripBtripAddressResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/address/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 商旅解除淘宝帐号绑定，用于更换绑定淘宝帐号
     * @param TaobaoOapiAlitripBtripUnbindRequest $request
     * @return TaobaoOapiAlitripBtripUnbindResponse
     */
    public function taobaoOapiAlitripBtripUnbind($request){
        $runtime = new RuntimeOptions([]);
        return $this->taobaoOapiAlitripBtripUnbindEx($request, $runtime);
    }

    /**
     * Description: 商旅解除淘宝帐号绑定，用于更换绑定淘宝帐号
     * @param TaobaoOapiAlitripBtripUnbindRequest $request
     * @param RuntimeOptions $runtime
     * @return TaobaoOapiAlitripBtripUnbindResponse
     */
    public function taobaoOapiAlitripBtripUnbindEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TaobaoOapiAlitripBtripUnbindResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/unbind/taobao", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 第三方应用，以小钉的身份在群里发消息
     * @param SendOapiRobotIntelligentMessageRequest $request
     * @return SendOapiRobotIntelligentMessageResponse
     */
    public function sendOapiRobotIntelligentMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiRobotIntelligentMessageEx($request, $runtime);
    }

    /**
     * Description: 第三方应用，以小钉的身份在群里发消息
     * @param SendOapiRobotIntelligentMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiRobotIntelligentMessageResponse
     */
    public function sendOapiRobotIntelligentMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiRobotIntelligentMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/intelligent/message/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉支付的企业托管支付宝账户查询，如果没有，会去创建一个
     * @param QueryOapiDingpayVirtualaccountRequest $request
     * @return QueryOapiDingpayVirtualaccountResponse
     */
    public function queryOapiDingpayVirtualaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiDingpayVirtualaccountEx($request, $runtime);
    }

    /**
     * Description: 钉支付的企业托管支付宝账户查询，如果没有，会去创建一个
     * @param QueryOapiDingpayVirtualaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiDingpayVirtualaccountResponse
     */
    public function queryOapiDingpayVirtualaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiDingpayVirtualaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/virtualaccount/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉支付账单批量查询
     * @param BatchqueryOapiDingpayBillRequest $request
     * @return BatchqueryOapiDingpayBillResponse
     */
    public function batchqueryOapiDingpayBill($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchqueryOapiDingpayBillEx($request, $runtime);
    }

    /**
     * Description: 钉支付账单批量查询
     * @param BatchqueryOapiDingpayBillRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchqueryOapiDingpayBillResponse
     */
    public function batchqueryOapiDingpayBillEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchqueryOapiDingpayBillResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/bill/batchquery", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉支付账单状态手动同步
     * @param SyncstatusOapiDingpayOrderRequest $request
     * @return SyncstatusOapiDingpayOrderResponse
     */
    public function syncstatusOapiDingpayOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->syncstatusOapiDingpayOrderEx($request, $runtime);
    }

    /**
     * Description: 钉支付账单状态手动同步
     * @param SyncstatusOapiDingpayOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return SyncstatusOapiDingpayOrderResponse
     */
    public function syncstatusOapiDingpayOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SyncstatusOapiDingpayOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/order/syncstatus", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉支付账单查询总数
     * @param BatchquerycountOapiDingpayBillRequest $request
     * @return BatchquerycountOapiDingpayBillResponse
     */
    public function batchquerycountOapiDingpayBill($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchquerycountOapiDingpayBillEx($request, $runtime);
    }

    /**
     * Description: 钉支付账单查询总数
     * @param BatchquerycountOapiDingpayBillRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchquerycountOapiDingpayBillResponse
     */
    public function batchquerycountOapiDingpayBillEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchquerycountOapiDingpayBillResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/bill/batchquerycount", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉支付订单标记非支付宝渠道已付款
     * @param MarkotherpayOapiDingpayOrderRequest $request
     * @return MarkotherpayOapiDingpayOrderResponse
     */
    public function markotherpayOapiDingpayOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->markotherpayOapiDingpayOrderEx($request, $runtime);
    }

    /**
     * Description: 钉支付订单标记非支付宝渠道已付款
     * @param MarkotherpayOapiDingpayOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return MarkotherpayOapiDingpayOrderResponse
     */
    public function markotherpayOapiDingpayOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return MarkotherpayOapiDingpayOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/order/markotherpay", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询钉支付账单一段时间内的Tag列表
     * @param QuerytagOapiDingpayBillRequest $request
     * @return QuerytagOapiDingpayBillResponse
     */
    public function querytagOapiDingpayBill($request){
        $runtime = new RuntimeOptions([]);
        return $this->querytagOapiDingpayBillEx($request, $runtime);
    }

    /**
     * Description: 查询钉支付账单一段时间内的Tag列表
     * @param QuerytagOapiDingpayBillRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerytagOapiDingpayBillResponse
     */
    public function querytagOapiDingpayBillEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QuerytagOapiDingpayBillResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/bill/querytag", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉支付交易订单申请支付
     * @param ApplypayOapiDingpayOrderRequest $request
     * @return ApplypayOapiDingpayOrderResponse
     */
    public function applypayOapiDingpayOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->applypayOapiDingpayOrderEx($request, $runtime);
    }

    /**
     * Description: 钉支付交易订单申请支付
     * @param ApplypayOapiDingpayOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return ApplypayOapiDingpayOrderResponse
     */
    public function applypayOapiDingpayOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ApplypayOapiDingpayOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/order/applypay", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 喔趣企业管理员邀请指定员工参与邀1得1活动
     * @param AddOapiAttendanceCorpInviteactiveRequest $request
     * @return AddOapiAttendanceCorpInviteactiveResponse
     */
    public function addOapiAttendanceCorpInviteactive($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAttendanceCorpInviteactiveEx($request, $runtime);
    }

    /**
     * Description: 喔趣企业管理员邀请指定员工参与邀1得1活动
     * @param AddOapiAttendanceCorpInviteactiveRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAttendanceCorpInviteactiveResponse
     */
    public function addOapiAttendanceCorpInviteactiveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAttendanceCorpInviteactiveResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/corp/inviteactive/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 喔趣企业开通邀1得1活动
     * @param OpenOapiAttendanceCorpInviteactiveRequest $request
     * @return OpenOapiAttendanceCorpInviteactiveResponse
     */
    public function openOapiAttendanceCorpInviteactive($request){
        $runtime = new RuntimeOptions([]);
        return $this->openOapiAttendanceCorpInviteactiveEx($request, $runtime);
    }

    /**
     * Description: 喔趣企业开通邀1得1活动
     * @param OpenOapiAttendanceCorpInviteactiveRequest $request
     * @param RuntimeOptions $runtime
     * @return OpenOapiAttendanceCorpInviteactiveResponse
     */
    public function openOapiAttendanceCorpInviteactiveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return OpenOapiAttendanceCorpInviteactiveResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/corp/inviteactive/open", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV通过这个接口获取流程的表单schema信息
     * @param GetOapiProcessFormRequest $request
     * @return GetOapiProcessFormResponse
     */
    public function getOapiProcessForm($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiProcessFormEx($request, $runtime);
    }

    /**
     * Description: ISV通过这个接口获取流程的表单schema信息
     * @param GetOapiProcessFormRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiProcessFormResponse
     */
    public function getOapiProcessFormEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiProcessFormResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/form/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 自定义打印模板文件保存
     * @param SaveOapiProcessTemplateRequest $request
     * @return SaveOapiProcessTemplateResponse
     */
    public function saveOapiProcessTemplate($request){
        $runtime = new RuntimeOptions([]);
        return $this->saveOapiProcessTemplateEx($request, $runtime);
    }

    /**
     * Description: 自定义打印模板文件保存
     * @param SaveOapiProcessTemplateRequest $request
     * @param RuntimeOptions $runtime
     * @return SaveOapiProcessTemplateResponse
     */
    public function saveOapiProcessTemplateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SaveOapiProcessTemplateResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/template/save", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询文章列表
     * @param ListOapiMaterialArticleRequest $request
     * @return ListOapiMaterialArticleResponse
     */
    public function listOapiMaterialArticle($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiMaterialArticleEx($request, $runtime);
    }

    /**
     * Description: 查询文章列表
     * @param ListOapiMaterialArticleRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiMaterialArticleResponse
     */
    public function listOapiMaterialArticleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiMaterialArticleResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/article/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 消息卡片素材更新接口
     * @param UpdateOapiMaterialNewsRequest $request
     * @return UpdateOapiMaterialNewsResponse
     */
    public function updateOapiMaterialNews($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiMaterialNewsEx($request, $runtime);
    }

    /**
     * Description: 消息卡片素材更新接口
     * @param UpdateOapiMaterialNewsRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiMaterialNewsResponse
     */
    public function updateOapiMaterialNewsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiMaterialNewsResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/news/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取消息卡片素材详情
     * @param GetOapiMaterialNewsRequest $request
     * @return GetOapiMaterialNewsResponse
     */
    public function getOapiMaterialNews($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiMaterialNewsEx($request, $runtime);
    }

    /**
     * Description: 获取消息卡片素材详情
     * @param GetOapiMaterialNewsRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiMaterialNewsResponse
     */
    public function getOapiMaterialNewsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiMaterialNewsResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/news/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询消息卡片素材列表
     * @param ListOapiMaterialNewsRequest $request
     * @return ListOapiMaterialNewsResponse
     */
    public function listOapiMaterialNews($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiMaterialNewsEx($request, $runtime);
    }

    /**
     * Description: 查询消息卡片素材列表
     * @param ListOapiMaterialNewsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiMaterialNewsResponse
     */
    public function listOapiMaterialNewsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiMaterialNewsResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/news/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除一个消息卡片素材
     * @param DeleteOapiMaterialNewsRequest $request
     * @return DeleteOapiMaterialNewsResponse
     */
    public function deleteOapiMaterialNews($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiMaterialNewsEx($request, $runtime);
    }

    /**
     * Description: 删除一个消息卡片素材
     * @param DeleteOapiMaterialNewsRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiMaterialNewsResponse
     */
    public function deleteOapiMaterialNewsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiMaterialNewsResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/news/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增消息卡片素材
     * @param AddOapiMaterialNewsRequest $request
     * @return AddOapiMaterialNewsResponse
     */
    public function addOapiMaterialNews($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiMaterialNewsEx($request, $runtime);
    }

    /**
     * Description: 新增消息卡片素材
     * @param AddOapiMaterialNewsRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiMaterialNewsResponse
     */
    public function addOapiMaterialNewsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiMaterialNewsResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/news/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 服务窗删除文章（使得文章页不可访问）
     * @param DeleteOapiMaterialArticleRequest $request
     * @return DeleteOapiMaterialArticleResponse
     */
    public function deleteOapiMaterialArticle($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiMaterialArticleEx($request, $runtime);
    }

    /**
     * Description: 服务窗删除文章（使得文章页不可访问）
     * @param DeleteOapiMaterialArticleRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiMaterialArticleResponse
     */
    public function deleteOapiMaterialArticleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiMaterialArticleResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/article/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 服务窗发布文章成页面
     * @param PublishOapiMaterialArticleRequest $request
     * @return PublishOapiMaterialArticleResponse
     */
    public function publishOapiMaterialArticle($request){
        $runtime = new RuntimeOptions([]);
        return $this->publishOapiMaterialArticleEx($request, $runtime);
    }

    /**
     * Description: 服务窗发布文章成页面
     * @param PublishOapiMaterialArticleRequest $request
     * @param RuntimeOptions $runtime
     * @return PublishOapiMaterialArticleResponse
     */
    public function publishOapiMaterialArticleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PublishOapiMaterialArticleResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/article/publish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取单篇文章信息
     * @param GetOapiMaterialArticleRequest $request
     * @return GetOapiMaterialArticleResponse
     */
    public function getOapiMaterialArticle($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiMaterialArticleEx($request, $runtime);
    }

    /**
     * Description: 获取单篇文章信息
     * @param GetOapiMaterialArticleRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiMaterialArticleResponse
     */
    public function getOapiMaterialArticleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiMaterialArticleResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/article/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 服务窗用于修改文章详情
     * @param UpdateOapiMaterialArticleRequest $request
     * @return UpdateOapiMaterialArticleResponse
     */
    public function updateOapiMaterialArticle($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiMaterialArticleEx($request, $runtime);
    }

    /**
     * Description: 服务窗用于修改文章详情
     * @param UpdateOapiMaterialArticleRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiMaterialArticleResponse
     */
    public function updateOapiMaterialArticleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiMaterialArticleResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/article/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 服务窗新建文章使用
     * @param AddOapiMaterialArticleRequest $request
     * @return AddOapiMaterialArticleResponse
     */
    public function addOapiMaterialArticle($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiMaterialArticleEx($request, $runtime);
    }

    /**
     * Description: 服务窗新建文章使用
     * @param AddOapiMaterialArticleRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiMaterialArticleResponse
     */
    public function addOapiMaterialArticleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiMaterialArticleResponse::fromMap($this->doRequestOApi("POST", "/topapi/material/article/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: dingtalk.corp.ext.delete
     * @param DeleteCorpExtRequest $request
     * @return DeleteCorpExtResponse
     */
    public function deleteCorpExt($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteCorpExtEx($request, $runtime);
    }

    /**
     * Description: dingtalk.corp.ext.delete
     * @param DeleteCorpExtRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteCorpExtResponse
     */
    public function deleteCorpExtEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteCorpExtResponse::fromMap($this->doRequest("dingtalk.corp.ext.delete", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉企业外部通讯录, 添加外部联系人
     * @param AddCorpExtRequest $request
     * @return AddCorpExtResponse
     */
    public function addCorpExt($request){
        $runtime = new RuntimeOptions([]);
        return $this->addCorpExtEx($request, $runtime);
    }

    /**
     * Description: 钉钉企业外部通讯录, 添加外部联系人
     * @param AddCorpExtRequest $request
     * @param RuntimeOptions $runtime
     * @return AddCorpExtResponse
     */
    public function addCorpExtEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddCorpExtResponse::fromMap($this->doRequest("dingtalk.corp.ext.add", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询智能硬件二维码信息的接口
     * @param QueryOapiSmartdeviceQrRequest $request
     * @return QueryOapiSmartdeviceQrResponse
     */
    public function queryOapiSmartdeviceQr($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiSmartdeviceQrEx($request, $runtime);
    }

    /**
     * Description: 查询智能硬件二维码信息的接口
     * @param QueryOapiSmartdeviceQrRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiSmartdeviceQrResponse
     */
    public function queryOapiSmartdeviceQrEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiSmartdeviceQrResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/qr/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 外部联系人列表
     * @param ListCorpExtRequest $request
     * @return ListCorpExtResponse
     */
    public function listCorpExt($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpExtEx($request, $runtime);
    }

    /**
     * Description: 外部联系人列表
     * @param ListCorpExtRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpExtResponse
     */
    public function listCorpExtEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListCorpExtResponse::fromMap($this->doRequest("dingtalk.corp.ext.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 拉取标签列表
     * @param ListlabelgroupsCorpExtRequest $request
     * @return ListlabelgroupsCorpExtResponse
     */
    public function listlabelgroupsCorpExt($request){
        $runtime = new RuntimeOptions([]);
        return $this->listlabelgroupsCorpExtEx($request, $runtime);
    }

    /**
     * Description: 拉取标签列表
     * @param ListlabelgroupsCorpExtRequest $request
     * @param RuntimeOptions $runtime
     * @return ListlabelgroupsCorpExtResponse
     */
    public function listlabelgroupsCorpExtEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListlabelgroupsCorpExtResponse::fromMap($this->doRequest("dingtalk.corp.ext.listlabelgroups", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取智能填表表单详情
     * @param GetOapiCollectionFormRequest $request
     * @return GetOapiCollectionFormResponse
     */
    public function getOapiCollectionForm($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCollectionFormEx($request, $runtime);
    }

    /**
     * Description: 获取智能填表表单详情
     * @param GetOapiCollectionFormRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCollectionFormResponse
     */
    public function getOapiCollectionFormEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCollectionFormResponse::fromMap($this->doRequestOApi("POST", "/topapi/collection/form/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: test
     * @param Test1OapiXiaoxuanPreRequest $request
     * @return Test1OapiXiaoxuanPreResponse
     */
    public function test1OapiXiaoxuanPre($request){
        $runtime = new RuntimeOptions([]);
        return $this->test1OapiXiaoxuanPreEx($request, $runtime);
    }

    /**
     * Description: test
     * @param Test1OapiXiaoxuanPreRequest $request
     * @param RuntimeOptions $runtime
     * @return Test1OapiXiaoxuanPreResponse
     */
    public function test1OapiXiaoxuanPreEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Test1OapiXiaoxuanPreResponse::fromMap($this->doRequestOApi("POST", "/topapi/xiaoxuan/pre/test1", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该api是提供给企业和isv用的，查询企业内员工的日程数据。
     * @param ListOapiCalendarRequest $request
     * @return ListOapiCalendarResponse
     */
    public function listOapiCalendar($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCalendarEx($request, $runtime);
    }

    /**
     * Description: 该api是提供给企业和isv用的，查询企业内员工的日程数据。
     * @param ListOapiCalendarRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCalendarResponse
     */
    public function listOapiCalendarEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCalendarResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 生成isv的授权码，授权码绑定了两个isv，对应的文件资源以及授权路径。
     * @param GenerateOapiCspaceAuthRequest $request
     * @return GenerateOapiCspaceAuthResponse
     */
    public function generateOapiCspaceAuth($request){
        $runtime = new RuntimeOptions([]);
        return $this->generateOapiCspaceAuthEx($request, $runtime);
    }

    /**
     * Description: 生成isv的授权码，授权码绑定了两个isv，对应的文件资源以及授权路径。
     * @param GenerateOapiCspaceAuthRequest $request
     * @param RuntimeOptions $runtime
     * @return GenerateOapiCspaceAuthResponse
     */
    public function generateOapiCspaceAuthEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GenerateOapiCspaceAuthResponse::fromMap($this->doRequestOApi("POST", "/topapi/cspace/auth/generate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 取消isv对应的授权码
     * @param CancelOapiCspaceAuthRequest $request
     * @return CancelOapiCspaceAuthResponse
     */
    public function cancelOapiCspaceAuth($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiCspaceAuthEx($request, $runtime);
    }

    /**
     * Description: 取消isv对应的授权码
     * @param CancelOapiCspaceAuthRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiCspaceAuthResponse
     */
    public function cancelOapiCspaceAuthEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiCspaceAuthResponse::fromMap($this->doRequestOApi("POST", "/topapi/cspace/auth/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新isv授权码有效期
     * @param UpdateOapiCspaceAuthRequest $request
     * @return UpdateOapiCspaceAuthResponse
     */
    public function updateOapiCspaceAuth($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCspaceAuthEx($request, $runtime);
    }

    /**
     * Description: 更新isv授权码有效期
     * @param UpdateOapiCspaceAuthRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCspaceAuthResponse
     */
    public function updateOapiCspaceAuthEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCspaceAuthResponse::fromMap($this->doRequestOApi("POST", "/topapi/cspace/auth/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: IM群应用发系统消息
     * @param SendOapiImGroupappSysmsgRequest $request
     * @return SendOapiImGroupappSysmsgResponse
     */
    public function sendOapiImGroupappSysmsg($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiImGroupappSysmsgEx($request, $runtime);
    }

    /**
     * Description: IM群应用发系统消息
     * @param SendOapiImGroupappSysmsgRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiImGroupappSysmsgResponse
     */
    public function sendOapiImGroupappSysmsgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiImGroupappSysmsgResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/groupapp/sysmsg/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按照项目批量删除任务信息
     * @param DeletebyprojectOapiWorkspaceTaskRequest $request
     * @return DeletebyprojectOapiWorkspaceTaskResponse
     */
    public function deletebyprojectOapiWorkspaceTask($request){
        $runtime = new RuntimeOptions([]);
        return $this->deletebyprojectOapiWorkspaceTaskEx($request, $runtime);
    }

    /**
     * Description: 按照项目批量删除任务信息
     * @param DeletebyprojectOapiWorkspaceTaskRequest $request
     * @param RuntimeOptions $runtime
     * @return DeletebyprojectOapiWorkspaceTaskResponse
     */
    public function deletebyprojectOapiWorkspaceTaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeletebyprojectOapiWorkspaceTaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/task/deletebyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在钉钉考勤微应用中，考勤组是一类具有相同的班次、考勤位置等考勤规则的人或部门的组合，一个企业中的一个人只能属于一个考勤组。如果您的企业使用了钉钉考勤并希望获取员工的考勤组信息，可选择使用此接口
     * @param GetusergroupSmartworkAttendsRequest $request
     * @return GetusergroupSmartworkAttendsResponse
     */
    public function getusergroupSmartworkAttends($request){
        $runtime = new RuntimeOptions([]);
        return $this->getusergroupSmartworkAttendsEx($request, $runtime);
    }

    /**
     * Description: 在钉钉考勤微应用中，考勤组是一类具有相同的班次、考勤位置等考勤规则的人或部门的组合，一个企业中的一个人只能属于一个考勤组。如果您的企业使用了钉钉考勤并希望获取员工的考勤组信息，可选择使用此接口
     * @param GetusergroupSmartworkAttendsRequest $request
     * @param RuntimeOptions $runtime
     * @return GetusergroupSmartworkAttendsResponse
     */
    public function getusergroupSmartworkAttendsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetusergroupSmartworkAttendsResponse::fromMap($this->doRequest("dingtalk.smartwork.attends.getusergroup", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加角色组
     * @param Add_role_groupOapiRoleRequest $request
     * @return Add_role_groupOapiRoleResponse
     */
    public function add_role_groupOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->add_role_groupOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 添加角色组
     * @param Add_role_groupOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return Add_role_groupOapiRoleResponse
     */
    public function add_role_groupOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Add_role_groupOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/role/add_role_group", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业已设置支付属性的审批模版列表
     * @param QuerypayrelatedtemplateOapiProcessRequest $request
     * @return QuerypayrelatedtemplateOapiProcessResponse
     */
    public function querypayrelatedtemplateOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->querypayrelatedtemplateOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 获取企业已设置支付属性的审批模版列表
     * @param QuerypayrelatedtemplateOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerypayrelatedtemplateOapiProcessResponse
     */
    public function querypayrelatedtemplateOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return QuerypayrelatedtemplateOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/querypayrelatedtemplate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加角色
     * @param Add_roleOapiRoleRequest $request
     * @return Add_roleOapiRoleResponse
     */
    public function add_roleOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->add_roleOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 添加角色
     * @param Add_roleOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return Add_roleOapiRoleResponse
     */
    public function add_roleOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Add_roleOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/role/add_role", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新角色
     * @param Update_roleOapiRoleRequest $request
     * @return Update_roleOapiRoleResponse
     */
    public function update_roleOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->update_roleOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 更新角色
     * @param Update_roleOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return Update_roleOapiRoleResponse
     */
    public function update_roleOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Update_roleOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/role/update_role", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤颁发给isv的具有一定实效性的令牌
     * @param GetOapiAttendanceTokenRequest $request
     * @return GetOapiAttendanceTokenResponse
     */
    public function getOapiAttendanceToken($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAttendanceTokenEx($request, $runtime);
    }

    /**
     * Description: 考勤颁发给isv的具有一定实效性的令牌
     * @param GetOapiAttendanceTokenRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAttendanceTokenResponse
     */
    public function getOapiAttendanceTokenEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAttendanceTokenResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/token/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据classId查询包含已删除的班次
     * @param GetOapiAttendanceClassRequest $request
     * @return GetOapiAttendanceClassResponse
     */
    public function getOapiAttendanceClass($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAttendanceClassEx($request, $runtime);
    }

    /**
     * Description: 根据classId查询包含已删除的班次
     * @param GetOapiAttendanceClassRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAttendanceClassResponse
     */
    public function getOapiAttendanceClassEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAttendanceClassResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/class/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 自定义打印清除模板
     * @param DeleteOapiProcessPrinterTemplateRequest $request
     * @return DeleteOapiProcessPrinterTemplateResponse
     */
    public function deleteOapiProcessPrinterTemplate($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiProcessPrinterTemplateEx($request, $runtime);
    }

    /**
     * Description: 自定义打印清除模板
     * @param DeleteOapiProcessPrinterTemplateRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiProcessPrinterTemplateResponse
     */
    public function deleteOapiProcessPrinterTemplateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiProcessPrinterTemplateResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/printer/template/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据用户列表和时间列表，批量查询钉钉运动步数
     * @param ListbyuseridCorpHealthStepinfoRequest $request
     * @return ListbyuseridCorpHealthStepinfoResponse
     */
    public function listbyuseridCorpHealthStepinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyuseridCorpHealthStepinfoEx($request, $runtime);
    }

    /**
     * Description: 根据用户列表和时间列表，批量查询钉钉运动步数
     * @param ListbyuseridCorpHealthStepinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyuseridCorpHealthStepinfoResponse
     */
    public function listbyuseridCorpHealthStepinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyuseridCorpHealthStepinfoResponse::fromMap($this->doRequest("dingtalk.corp.health.stepinfo.listbyuserid", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询用户是否开启了钉钉运动
     * @param GetuserstatusCorpHealthStepinfoRequest $request
     * @return GetuserstatusCorpHealthStepinfoResponse
     */
    public function getuserstatusCorpHealthStepinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->getuserstatusCorpHealthStepinfoEx($request, $runtime);
    }

    /**
     * Description: 查询用户是否开启了钉钉运动
     * @param GetuserstatusCorpHealthStepinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return GetuserstatusCorpHealthStepinfoResponse
     */
    public function getuserstatusCorpHealthStepinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetuserstatusCorpHealthStepinfoResponse::fromMap($this->doRequest("dingtalk.corp.health.stepinfo.getuserstatus", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 退单或者取消订单时，释放已经抵扣的餐补金额
     * @param UnfreezeOapiCateringRequest $request
     * @return UnfreezeOapiCateringResponse
     */
    public function unfreezeOapiCatering($request){
        $runtime = new RuntimeOptions([]);
        return $this->unfreezeOapiCateringEx($request, $runtime);
    }

    /**
     * Description: 退单或者取消订单时，释放已经抵扣的餐补金额
     * @param UnfreezeOapiCateringRequest $request
     * @param RuntimeOptions $runtime
     * @return UnfreezeOapiCateringResponse
     */
    public function unfreezeOapiCateringEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnfreezeOapiCateringResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/unfreeze", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据手机号获取其所对应员工的userid
     * @param Get_by_mobileOapiUserRequest $request
     * @return Get_by_mobileOapiUserResponse
     */
    public function get_by_mobileOapiUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->get_by_mobileOapiUserEx($request, $runtime);
    }

    /**
     * Description: 根据手机号获取其所对应员工的userid
     * @param Get_by_mobileOapiUserRequest $request
     * @param RuntimeOptions $runtime
     * @return Get_by_mobileOapiUserResponse
     */
    public function get_by_mobileOapiUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Get_by_mobileOapiUserResponse::fromMap($this->doRequestOApi("GET", "/user/get_by_mobile", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 报废衣服
     * @param ScrapOapiRhinoMosExecClothesRequest $request
     * @return ScrapOapiRhinoMosExecClothesResponse
     */
    public function scrapOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->scrapOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 报废衣服
     * @param ScrapOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return ScrapOapiRhinoMosExecClothesResponse
     */
    public function scrapOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ScrapOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/scrap", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询服务号菜单
     * @param GetOapiServiceaccountMenuRequest $request
     * @return GetOapiServiceaccountMenuResponse
     */
    public function getOapiServiceaccountMenu($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiServiceaccountMenuEx($request, $runtime);
    }

    /**
     * Description: 查询服务号菜单
     * @param GetOapiServiceaccountMenuRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiServiceaccountMenuResponse
     */
    public function getOapiServiceaccountMenuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiServiceaccountMenuResponse::fromMap($this->doRequestOApi("POST", "/topapi/serviceaccount/menu/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量获取衣服详情
     * @param GetOapiRhinoMosExecClothesRequest $request
     * @return GetOapiRhinoMosExecClothesResponse
     */
    public function getOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 批量获取衣服详情
     * @param GetOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosExecClothesResponse
     */
    public function getOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 条件开始执行工序
     * @param StartOapiRhinoMosExecPerformConditionalRequest $request
     * @return StartOapiRhinoMosExecPerformConditionalResponse
     */
    public function startOapiRhinoMosExecPerformConditional($request){
        $runtime = new RuntimeOptions([]);
        return $this->startOapiRhinoMosExecPerformConditionalEx($request, $runtime);
    }

    /**
     * Description: 条件开始执行工序
     * @param StartOapiRhinoMosExecPerformConditionalRequest $request
     * @param RuntimeOptions $runtime
     * @return StartOapiRhinoMosExecPerformConditionalResponse
     */
    public function startOapiRhinoMosExecPerformConditionalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return StartOapiRhinoMosExecPerformConditionalResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/conditional/start", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口通过orgId参数可以获取该企业的发票抬头信息。
     * 注意：ISV必须先加入白名单
     * @param GettitleCorpInvoiceRequest $request
     * @return GettitleCorpInvoiceResponse
     */
    public function gettitleCorpInvoice($request){
        $runtime = new RuntimeOptions([]);
        return $this->gettitleCorpInvoiceEx($request, $runtime);
    }

    /**
     * Description: 该接口通过orgId参数可以获取该企业的发票抬头信息。
     * 注意：ISV必须先加入白名单
     * @param GettitleCorpInvoiceRequest $request
     * @param RuntimeOptions $runtime
     * @return GettitleCorpInvoiceResponse
     */
    public function gettitleCorpInvoiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GettitleCorpInvoiceResponse::fromMap($this->doRequest("dingtalk.corp.invoice.gettitle", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业机器人单聊消息发送结果查询
     * @param QueryOapiRobotMessageOtotaskRequest $request
     * @return QueryOapiRobotMessageOtotaskResponse
     */
    public function queryOapiRobotMessageOtotask($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRobotMessageOtotaskEx($request, $runtime);
    }

    /**
     * Description: 企业机器人单聊消息发送结果查询
     * @param QueryOapiRobotMessageOtotaskRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRobotMessageOtotaskResponse
     */
    public function queryOapiRobotMessageOtotaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRobotMessageOtotaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/ototask/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新零售场景下，获取企业全员群id
     * @param GetbydeptidOapiImpaasGroupRequest $request
     * @return GetbydeptidOapiImpaasGroupResponse
     */
    public function getbydeptidOapiImpaasGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbydeptidOapiImpaasGroupEx($request, $runtime);
    }

    /**
     * Description: 新零售场景下，获取企业全员群id
     * @param GetbydeptidOapiImpaasGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbydeptidOapiImpaasGroupResponse
     */
    public function getbydeptidOapiImpaasGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetbydeptidOapiImpaasGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/group/getbydeptid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按条件查询衣服数量
     * @param CountOapiRhinoMosExecClothesRequest $request
     * @return CountOapiRhinoMosExecClothesResponse
     */
    public function countOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->countOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 按条件查询衣服数量
     * @param CountOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return CountOapiRhinoMosExecClothesResponse
     */
    public function countOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CountOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/count", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 在二级会话功能中，部分场景需要修改会话入口。另外，数据初始化时，也需要该接口做一部分数据订正
     * @param UpdateentranceidOapiImpaasConversationRequest $request
     * @return UpdateentranceidOapiImpaasConversationResponse
     */
    public function updateentranceidOapiImpaasConversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateentranceidOapiImpaasConversationEx($request, $runtime);
    }

    /**
     * Description: 在二级会话功能中，部分场景需要修改会话入口。另外，数据初始化时，也需要该接口做一部分数据订正
     * @param UpdateentranceidOapiImpaasConversationRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateentranceidOapiImpaasConversationResponse
     */
    public function updateentranceidOapiImpaasConversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateentranceidOapiImpaasConversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/conversation/updateentranceid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过衣服详情，批量创建衣服实体
     * @param CreateOapiRhinoMosExecClothesRequest $request
     * @return CreateOapiRhinoMosExecClothesResponse
     */
    public function createOapiRhinoMosExecClothes($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiRhinoMosExecClothesEx($request, $runtime);
    }

    /**
     * Description: 通过衣服详情，批量创建衣服实体
     * @param CreateOapiRhinoMosExecClothesRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiRhinoMosExecClothesResponse
     */
    public function createOapiRhinoMosExecClothesEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiRhinoMosExecClothesResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 条件查询执行记录详情
     * @param QueryOapiRhinoMosExecPerformRequest $request
     * @return QueryOapiRhinoMosExecPerformResponse
     */
    public function queryOapiRhinoMosExecPerform($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoMosExecPerformEx($request, $runtime);
    }

    /**
     * Description: 条件查询执行记录详情
     * @param QueryOapiRhinoMosExecPerformRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoMosExecPerformResponse
     */
    public function queryOapiRhinoMosExecPerformEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoMosExecPerformResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取未完成相应工序的衣服实体
     * @param GetOapiRhinoMosExecClothesUnperformedRequest $request
     * @return GetOapiRhinoMosExecClothesUnperformedResponse
     */
    public function getOapiRhinoMosExecClothesUnperformed($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosExecClothesUnperformedEx($request, $runtime);
    }

    /**
     * Description: 获取未完成相应工序的衣服实体
     * @param GetOapiRhinoMosExecClothesUnperformedRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosExecClothesUnperformedResponse
     */
    public function getOapiRhinoMosExecClothesUnperformedEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosExecClothesUnperformedResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/unperformed/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业获取自己企业的云打印数据详情
     * @param GetOapiSmartdevicePrintdetailRequest $request
     * @return GetOapiSmartdevicePrintdetailResponse
     */
    public function getOapiSmartdevicePrintdetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiSmartdevicePrintdetailEx($request, $runtime);
    }

    /**
     * Description: 企业获取自己企业的云打印数据详情
     * @param GetOapiSmartdevicePrintdetailRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiSmartdevicePrintdetailResponse
     */
    public function getOapiSmartdevicePrintdetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiSmartdevicePrintdetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/printdetail/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按照条件查询生产执行
     * @param GetOapiRhinoMosExecClothesConditionRequest $request
     * @return GetOapiRhinoMosExecClothesConditionResponse
     */
    public function getOapiRhinoMosExecClothesCondition($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosExecClothesConditionEx($request, $runtime);
    }

    /**
     * Description: 按照条件查询生产执行
     * @param GetOapiRhinoMosExecClothesConditionRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosExecClothesConditionResponse
     */
    public function getOapiRhinoMosExecClothesConditionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosExecClothesConditionResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/condition/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 群机器人推送消息结果查询
     * @param QueryOapiRobotMessageGrouptaskRequest $request
     * @return QueryOapiRobotMessageGrouptaskResponse
     */
    public function queryOapiRobotMessageGrouptask($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRobotMessageGrouptaskEx($request, $runtime);
    }

    /**
     * Description: 群机器人推送消息结果查询
     * @param QueryOapiRobotMessageGrouptaskRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRobotMessageGrouptaskResponse
     */
    public function queryOapiRobotMessageGrouptaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRobotMessageGrouptaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/grouptask/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 群机器人推送消息
     * @param SendgroupOapiRobotMessageRequest $request
     * @return SendgroupOapiRobotMessageResponse
     */
    public function sendgroupOapiRobotMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendgroupOapiRobotMessageEx($request, $runtime);
    }

    /**
     * Description: 群机器人推送消息
     * @param SendgroupOapiRobotMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendgroupOapiRobotMessageResponse
     */
    public function sendgroupOapiRobotMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendgroupOapiRobotMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/sendgroup", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业机器人推送单聊消息
     * @param SendotoOapiRobotMessageRequest $request
     * @return SendotoOapiRobotMessageResponse
     */
    public function sendotoOapiRobotMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendotoOapiRobotMessageEx($request, $runtime);
    }

    /**
     * Description: 企业机器人推送单聊消息
     * @param SendotoOapiRobotMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendotoOapiRobotMessageResponse
     */
    public function sendotoOapiRobotMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendotoOapiRobotMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/sendoto", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过主键 id 查询 AppInfo 记录
     * @param QueryOapiMiniappAppinfoRequest $request
     * @return QueryOapiMiniappAppinfoResponse
     */
    public function queryOapiMiniappAppinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMiniappAppinfoEx($request, $runtime);
    }

    /**
     * Description: 通过主键 id 查询 AppInfo 记录
     * @param QueryOapiMiniappAppinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMiniappAppinfoResponse
     */
    public function queryOapiMiniappAppinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMiniappAppinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/miniapp/appinfo/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过主键 id 查询 DeployPackage 记录
     * @param QueryOapiMiniappDeploypackageRequest $request
     * @return QueryOapiMiniappDeploypackageResponse
     */
    public function queryOapiMiniappDeploypackage($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMiniappDeploypackageEx($request, $runtime);
    }

    /**
     * Description: 通过主键 id 查询 DeployPackage 记录
     * @param QueryOapiMiniappDeploypackageRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMiniappDeploypackageResponse
     */
    public function queryOapiMiniappDeploypackageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMiniappDeploypackageResponse::fromMap($this->doRequestOApi("POST", "/topapi/miniapp/deploypackage/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过主键 id 查询 AppVersion 记录
     * @param QueryOapiMiniappAppversionRequest $request
     * @return QueryOapiMiniappAppversionResponse
     */
    public function queryOapiMiniappAppversion($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMiniappAppversionEx($request, $runtime);
    }

    /**
     * Description: 通过主键 id 查询 AppVersion 记录
     * @param QueryOapiMiniappAppversionRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMiniappAppversionResponse
     */
    public function queryOapiMiniappAppversionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMiniappAppversionResponse::fromMap($this->doRequestOApi("POST", "/topapi/miniapp/appversion/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过主键 id 查询 DeloyWindow 记录
     * @param QueryOapiMiniappDeploywindowRequest $request
     * @return QueryOapiMiniappDeploywindowResponse
     */
    public function queryOapiMiniappDeploywindow($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMiniappDeploywindowEx($request, $runtime);
    }

    /**
     * Description: 通过主键 id 查询 DeloyWindow 记录
     * @param QueryOapiMiniappDeploywindowRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMiniappDeploywindowResponse
     */
    public function queryOapiMiniappDeploywindowEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMiniappDeploywindowResponse::fromMap($this->doRequestOApi("POST", "/topapi/miniapp/deploywindow/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取部门详情
     * @param GetOapiEduDeptRequest $request
     * @return GetOapiEduDeptResponse
     */
    public function getOapiEduDept($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduDeptEx($request, $runtime);
    }

    /**
     * Description: 获取部门详情
     * @param GetOapiEduDeptRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduDeptResponse
     */
    public function getOapiEduDeptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduDeptResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/dept/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按照条件查询生产执行
     * @param GetOapiRhinoMosExecOperationConditionRequest $request
     * @return GetOapiRhinoMosExecOperationConditionResponse
     */
    public function getOapiRhinoMosExecOperationCondition($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosExecOperationConditionEx($request, $runtime);
    }

    /**
     * Description: 按照条件查询生产执行
     * @param GetOapiRhinoMosExecOperationConditionRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosExecOperationConditionResponse
     */
    public function getOapiRhinoMosExecOperationConditionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosExecOperationConditionResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/operation/condition/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查看教育行业某个部门节点下的所有子部门列表
     * @param ListOapiEduDeptRequest $request
     * @return ListOapiEduDeptResponse
     */
    public function listOapiEduDept($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduDeptEx($request, $runtime);
    }

    /**
     * Description: 查看教育行业某个部门节点下的所有子部门列表
     * @param ListOapiEduDeptRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduDeptResponse
     */
    public function listOapiEduDeptEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduDeptResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/dept/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino智能制造操作系统空间资源设备登记到站位
     * @param InOapiRhinoMosSpaceDeviceCheckRequest $request
     * @return InOapiRhinoMosSpaceDeviceCheckResponse
     */
    public function inOapiRhinoMosSpaceDeviceCheck($request){
        $runtime = new RuntimeOptions([]);
        return $this->inOapiRhinoMosSpaceDeviceCheckEx($request, $runtime);
    }

    /**
     * Description: rhino智能制造操作系统空间资源设备登记到站位
     * @param InOapiRhinoMosSpaceDeviceCheckRequest $request
     * @param RuntimeOptions $runtime
     * @return InOapiRhinoMosSpaceDeviceCheckResponse
     */
    public function inOapiRhinoMosSpaceDeviceCheckEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InOapiRhinoMosSpaceDeviceCheckResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/device/check/in", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取人员关系列表
     * @param ListOapiEduUserRelationRequest $request
     * @return ListOapiEduUserRelationResponse
     */
    public function listOapiEduUserRelation($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduUserRelationEx($request, $runtime);
    }

    /**
     * Description: 获取人员关系列表
     * @param ListOapiEduUserRelationRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduUserRelationResponse
     */
    public function listOapiEduUserRelationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduUserRelationResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/user/relation/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino空间资源查询站位上登记的设备列表
     * @param ListOapiRhinoMosSpaceDeviceCheckInRequest $request
     * @return ListOapiRhinoMosSpaceDeviceCheckInResponse
     */
    public function listOapiRhinoMosSpaceDeviceCheckIn($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosSpaceDeviceCheckInEx($request, $runtime);
    }

    /**
     * Description: rhino空间资源查询站位上登记的设备列表
     * @param ListOapiRhinoMosSpaceDeviceCheckInRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosSpaceDeviceCheckInResponse
     */
    public function listOapiRhinoMosSpaceDeviceCheckInEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosSpaceDeviceCheckInResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/device/check/in/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取家校人员关系
     * @param GetOapiEduUserRelationRequest $request
     * @return GetOapiEduUserRelationResponse
     */
    public function getOapiEduUserRelation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduUserRelationEx($request, $runtime);
    }

    /**
     * Description: 获取家校人员关系
     * @param GetOapiEduUserRelationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduUserRelationResponse
     */
    public function getOapiEduUserRelationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduUserRelationResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/user/relation/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino智能制造系统空间资源获取站位
     * @param GetOapiRhinoMosSpaceWorkstationRequest $request
     * @return GetOapiRhinoMosSpaceWorkstationResponse
     */
    public function getOapiRhinoMosSpaceWorkstation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosSpaceWorkstationEx($request, $runtime);
    }

    /**
     * Description: rhino智能制造系统空间资源获取站位
     * @param GetOapiRhinoMosSpaceWorkstationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosSpaceWorkstationResponse
     */
    public function getOapiRhinoMosSpaceWorkstationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosSpaceWorkstationResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/workstation/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取家校人员身份详情
     * @param GetOapiEduUserRequest $request
     * @return GetOapiEduUserResponse
     */
    public function getOapiEduUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduUserEx($request, $runtime);
    }

    /**
     * Description: 获取家校人员身份详情
     * @param GetOapiEduUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduUserResponse
     */
    public function getOapiEduUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/user/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建单聊会话
     * @param Createo2oOapiImpaasConverstionRequest $request
     * @return Createo2oOapiImpaasConverstionResponse
     */
    public function createo2oOapiImpaasConverstion($request){
        $runtime = new RuntimeOptions([]);
        return $this->createo2oOapiImpaasConverstionEx($request, $runtime);
    }

    /**
     * Description: 创建单聊会话
     * @param Createo2oOapiImpaasConverstionRequest $request
     * @param RuntimeOptions $runtime
     * @return Createo2oOapiImpaasConverstionResponse
     */
    public function createo2oOapiImpaasConverstionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Createo2oOapiImpaasConverstionResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/converstion/createo2o", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino智能制造系统空间资源设备登出站位
     * @param OutOapiRhinoMosSpaceDeviceCheckRequest $request
     * @return OutOapiRhinoMosSpaceDeviceCheckResponse
     */
    public function outOapiRhinoMosSpaceDeviceCheck($request){
        $runtime = new RuntimeOptions([]);
        return $this->outOapiRhinoMosSpaceDeviceCheckEx($request, $runtime);
    }

    /**
     * Description: rhino智能制造系统空间资源设备登出站位
     * @param OutOapiRhinoMosSpaceDeviceCheckRequest $request
     * @param RuntimeOptions $runtime
     * @return OutOapiRhinoMosSpaceDeviceCheckResponse
     */
    public function outOapiRhinoMosSpaceDeviceCheckEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return OutOapiRhinoMosSpaceDeviceCheckResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/device/check/out", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取家校用户身份列表
     * @param ListOapiEduUserRequest $request
     * @return ListOapiEduUserResponse
     */
    public function listOapiEduUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiEduUserEx($request, $runtime);
    }

    /**
     * Description: 获取家校用户身份列表
     * @param ListOapiEduUserRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiEduUserResponse
     */
    public function listOapiEduUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiEduUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/user/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino智能制造系统空间资源新增或更新站位
     * @param UpsertOapiRhinoMosSpaceWorkstationRequest $request
     * @return UpsertOapiRhinoMosSpaceWorkstationResponse
     */
    public function upsertOapiRhinoMosSpaceWorkstation($request){
        $runtime = new RuntimeOptions([]);
        return $this->upsertOapiRhinoMosSpaceWorkstationEx($request, $runtime);
    }

    /**
     * Description: rhino智能制造系统空间资源新增或更新站位
     * @param UpsertOapiRhinoMosSpaceWorkstationRequest $request
     * @param RuntimeOptions $runtime
     * @return UpsertOapiRhinoMosSpaceWorkstationResponse
     */
    public function upsertOapiRhinoMosSpaceWorkstationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpsertOapiRhinoMosSpaceWorkstationResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/workstation/upsert", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增服务号
     * @param AddOapiServiceaccountRequest $request
     * @return AddOapiServiceaccountResponse
     */
    public function addOapiServiceaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiServiceaccountEx($request, $runtime);
    }

    /**
     * Description: 新增服务号
     * @param AddOapiServiceaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiServiceaccountResponse
     */
    public function addOapiServiceaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiServiceaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/serviceaccount/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量创建工序
     * @param CreateOapiRhinoMosExecPerformBatchRequest $request
     * @return CreateOapiRhinoMosExecPerformBatchResponse
     */
    public function createOapiRhinoMosExecPerformBatch($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiRhinoMosExecPerformBatchEx($request, $runtime);
    }

    /**
     * Description: 批量创建工序
     * @param CreateOapiRhinoMosExecPerformBatchRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiRhinoMosExecPerformBatchResponse
     */
    public function createOapiRhinoMosExecPerformBatchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiRhinoMosExecPerformBatchResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/batch/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 互动服务窗消息群发接口
     * @param SendOapiMessageMassRequest $request
     * @return SendOapiMessageMassResponse
     */
    public function sendOapiMessageMass($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendOapiMessageMassEx($request, $runtime);
    }

    /**
     * Description: 互动服务窗消息群发接口
     * @param SendOapiMessageMassRequest $request
     * @param RuntimeOptions $runtime
     * @return SendOapiMessageMassResponse
     */
    public function sendOapiMessageMassEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendOapiMessageMassResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/mass/send", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能制造系统空间资源列出站位上登记的员工列表
     * @param ListOapiRhinoMosSpaceWorkerCheckInRequest $request
     * @return ListOapiRhinoMosSpaceWorkerCheckInResponse
     */
    public function listOapiRhinoMosSpaceWorkerCheckIn($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosSpaceWorkerCheckInEx($request, $runtime);
    }

    /**
     * Description: 智能制造系统空间资源列出站位上登记的员工列表
     * @param ListOapiRhinoMosSpaceWorkerCheckInRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosSpaceWorkerCheckInResponse
     */
    public function listOapiRhinoMosSpaceWorkerCheckInEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosSpaceWorkerCheckInResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/worker/check/in/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新服务号会话菜单
     * @param UpdateOapiServiceaccountMenuRequest $request
     * @return UpdateOapiServiceaccountMenuResponse
     */
    public function updateOapiServiceaccountMenu($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiServiceaccountMenuEx($request, $runtime);
    }

    /**
     * Description: 更新服务号会话菜单
     * @param UpdateOapiServiceaccountMenuRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiServiceaccountMenuResponse
     */
    public function updateOapiServiceaccountMenuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiServiceaccountMenuResponse::fromMap($this->doRequestOApi("POST", "/topapi/serviceaccount/menu/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能制造系统空间资源工人登陆站位
     * @param InOapiRhinoMosSpaceWorkerCheckRequest $request
     * @return InOapiRhinoMosSpaceWorkerCheckResponse
     */
    public function inOapiRhinoMosSpaceWorkerCheck($request){
        $runtime = new RuntimeOptions([]);
        return $this->inOapiRhinoMosSpaceWorkerCheckEx($request, $runtime);
    }

    /**
     * Description: 智能制造系统空间资源工人登陆站位
     * @param InOapiRhinoMosSpaceWorkerCheckRequest $request
     * @param RuntimeOptions $runtime
     * @return InOapiRhinoMosSpaceWorkerCheckResponse
     */
    public function inOapiRhinoMosSpaceWorkerCheckEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InOapiRhinoMosSpaceWorkerCheckResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/worker/check/in", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新服务号
     * @param UpdateOapiServiceaccountRequest $request
     * @return UpdateOapiServiceaccountResponse
     */
    public function updateOapiServiceaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiServiceaccountEx($request, $runtime);
    }

    /**
     * Description: 更新服务号
     * @param UpdateOapiServiceaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiServiceaccountResponse
     */
    public function updateOapiServiceaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiServiceaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/serviceaccount/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino智能制造系统空间资源站位列表查询
     * @param ListOapiRhinoMosSpaceWorkstationRequest $request
     * @return ListOapiRhinoMosSpaceWorkstationResponse
     */
    public function listOapiRhinoMosSpaceWorkstation($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosSpaceWorkstationEx($request, $runtime);
    }

    /**
     * Description: rhino智能制造系统空间资源站位列表查询
     * @param ListOapiRhinoMosSpaceWorkstationRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosSpaceWorkstationResponse
     */
    public function listOapiRhinoMosSpaceWorkstationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosSpaceWorkstationResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/workstation/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询服务号详情
     * @param GetOapiServiceaccountRequest $request
     * @return GetOapiServiceaccountResponse
     */
    public function getOapiServiceaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiServiceaccountEx($request, $runtime);
    }

    /**
     * Description: 查询服务号详情
     * @param GetOapiServiceaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiServiceaccountResponse
     */
    public function getOapiServiceaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiServiceaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/serviceaccount/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量取消报废
     * @param UnscrapOapiRhinoMosExecClothesBatchRequest $request
     * @return UnscrapOapiRhinoMosExecClothesBatchResponse
     */
    public function unscrapOapiRhinoMosExecClothesBatch($request){
        $runtime = new RuntimeOptions([]);
        return $this->unscrapOapiRhinoMosExecClothesBatchEx($request, $runtime);
    }

    /**
     * Description: 批量取消报废
     * @param UnscrapOapiRhinoMosExecClothesBatchRequest $request
     * @param RuntimeOptions $runtime
     * @return UnscrapOapiRhinoMosExecClothesBatchResponse
     */
    public function unscrapOapiRhinoMosExecClothesBatchEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnscrapOapiRhinoMosExecClothesBatchResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/batch/unscrap", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取工序定义图
     * @param GetflowOapiRhinoMosLayoutOperationdefRequest $request
     * @return GetflowOapiRhinoMosLayoutOperationdefResponse
     */
    public function getflowOapiRhinoMosLayoutOperationdef($request){
        $runtime = new RuntimeOptions([]);
        return $this->getflowOapiRhinoMosLayoutOperationdefEx($request, $runtime);
    }

    /**
     * Description: 获取工序定义图
     * @param GetflowOapiRhinoMosLayoutOperationdefRequest $request
     * @param RuntimeOptions $runtime
     * @return GetflowOapiRhinoMosLayoutOperationdefResponse
     */
    public function getflowOapiRhinoMosLayoutOperationdefEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetflowOapiRhinoMosLayoutOperationdefResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdef/getflow", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量修改工序定义分配信息
     * @param EditassignOapiRhinoMosLayoutOperationdefsRequest $request
     * @return EditassignOapiRhinoMosLayoutOperationdefsResponse
     */
    public function editassignOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->editassignOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 批量修改工序定义分配信息
     * @param EditassignOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return EditassignOapiRhinoMosLayoutOperationdefsResponse
     */
    public function editassignOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return EditassignOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/editassign", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询后续工序定义
     * @param NextOapiRhinoMosLayoutOperationdefsRequest $request
     * @return NextOapiRhinoMosLayoutOperationdefsResponse
     */
    public function nextOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->nextOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 查询后续工序定义
     * @param NextOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return NextOapiRhinoMosLayoutOperationdefsResponse
     */
    public function nextOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return NextOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/next", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino空间资源设备登出站位
     * @param OutOapiRhinoMosSpaceWorkerCheckRequest $request
     * @return OutOapiRhinoMosSpaceWorkerCheckResponse
     */
    public function outOapiRhinoMosSpaceWorkerCheck($request){
        $runtime = new RuntimeOptions([]);
        return $this->outOapiRhinoMosSpaceWorkerCheckEx($request, $runtime);
    }

    /**
     * Description: rhino空间资源设备登出站位
     * @param OutOapiRhinoMosSpaceWorkerCheckRequest $request
     * @param RuntimeOptions $runtime
     * @return OutOapiRhinoMosSpaceWorkerCheckResponse
     */
    public function outOapiRhinoMosSpaceWorkerCheckEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return OutOapiRhinoMosSpaceWorkerCheckResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/worker/check/out", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino空间资源获取兴趣点
     * @param GetOapiRhinoMosSpacePoiRequest $request
     * @return GetOapiRhinoMosSpacePoiResponse
     */
    public function getOapiRhinoMosSpacePoi($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosSpacePoiEx($request, $runtime);
    }

    /**
     * Description: rhino空间资源获取兴趣点
     * @param GetOapiRhinoMosSpacePoiRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosSpacePoiResponse
     */
    public function getOapiRhinoMosSpacePoiEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosSpacePoiResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/poi/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 激活工序定义图
     * @param ActiveflowOapiRhinoMosLayoutOperationdefRequest $request
     * @return ActiveflowOapiRhinoMosLayoutOperationdefResponse
     */
    public function activeflowOapiRhinoMosLayoutOperationdef($request){
        $runtime = new RuntimeOptions([]);
        return $this->activeflowOapiRhinoMosLayoutOperationdefEx($request, $runtime);
    }

    /**
     * Description: 激活工序定义图
     * @param ActiveflowOapiRhinoMosLayoutOperationdefRequest $request
     * @param RuntimeOptions $runtime
     * @return ActiveflowOapiRhinoMosLayoutOperationdefResponse
     */
    public function activeflowOapiRhinoMosLayoutOperationdefEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ActiveflowOapiRhinoMosLayoutOperationdefResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdef/activeflow", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业获取自己企业的投屏数据详情
     * @param GetOapiSmartdeviceFocusdetailRequest $request
     * @return GetOapiSmartdeviceFocusdetailResponse
     */
    public function getOapiSmartdeviceFocusdetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiSmartdeviceFocusdetailEx($request, $runtime);
    }

    /**
     * Description: 企业获取自己企业的投屏数据详情
     * @param GetOapiSmartdeviceFocusdetailRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiSmartdeviceFocusdetailResponse
     */
    public function getOapiSmartdeviceFocusdetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiSmartdeviceFocusdetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartdevice/focusdetail/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能制造-查询某订单各个工序的数量情况
     * @param CountOapiRhinoMosExecClothesGroupbyoperationRequest $request
     * @return CountOapiRhinoMosExecClothesGroupbyoperationResponse
     */
    public function countOapiRhinoMosExecClothesGroupbyoperation($request){
        $runtime = new RuntimeOptions([]);
        return $this->countOapiRhinoMosExecClothesGroupbyoperationEx($request, $runtime);
    }

    /**
     * Description: 智能制造-查询某订单各个工序的数量情况
     * @param CountOapiRhinoMosExecClothesGroupbyoperationRequest $request
     * @param RuntimeOptions $runtime
     * @return CountOapiRhinoMosExecClothesGroupbyoperationResponse
     */
    public function countOapiRhinoMosExecClothesGroupbyoperationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CountOapiRhinoMosExecClothesGroupbyoperationResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/clothes/groupbyoperation/count", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家校人脸查询
     * @param GetOapiEduFaceRequest $request
     * @return GetOapiEduFaceResponse
     */
    public function getOapiEduFace($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduFaceEx($request, $runtime);
    }

    /**
     * Description: 家校人脸查询
     * @param GetOapiEduFaceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduFaceResponse
     */
    public function getOapiEduFaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduFaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/face/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino空间资源新增或更新兴趣点
     * @param UpsertOapiRhinoMosSpacePoiRequest $request
     * @return UpsertOapiRhinoMosSpacePoiResponse
     */
    public function upsertOapiRhinoMosSpacePoi($request){
        $runtime = new RuntimeOptions([]);
        return $this->upsertOapiRhinoMosSpacePoiEx($request, $runtime);
    }

    /**
     * Description: rhino空间资源新增或更新兴趣点
     * @param UpsertOapiRhinoMosSpacePoiRequest $request
     * @param RuntimeOptions $runtime
     * @return UpsertOapiRhinoMosSpacePoiResponse
     */
    public function upsertOapiRhinoMosSpacePoiEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpsertOapiRhinoMosSpacePoiResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/poi/upsert", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按照条件失效工序
     * @param InactiveOapiRhinoMosExecOperationConditionRequest $request
     * @return InactiveOapiRhinoMosExecOperationConditionResponse
     */
    public function inactiveOapiRhinoMosExecOperationCondition($request){
        $runtime = new RuntimeOptions([]);
        return $this->inactiveOapiRhinoMosExecOperationConditionEx($request, $runtime);
    }

    /**
     * Description: 按照条件失效工序
     * @param InactiveOapiRhinoMosExecOperationConditionRequest $request
     * @param RuntimeOptions $runtime
     * @return InactiveOapiRhinoMosExecOperationConditionResponse
     */
    public function inactiveOapiRhinoMosExecOperationConditionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return InactiveOapiRhinoMosExecOperationConditionResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/operation/condition/inactive", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: rhino制造系统中的空间兴趣点列出
     * @param ListOapiRhinoMosSpacePoiRequest $request
     * @return ListOapiRhinoMosSpacePoiResponse
     */
    public function listOapiRhinoMosSpacePoi($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosSpacePoiEx($request, $runtime);
    }

    /**
     * Description: rhino制造系统中的空间兴趣点列出
     * @param ListOapiRhinoMosSpacePoiRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosSpacePoiResponse
     */
    public function listOapiRhinoMosSpacePoiEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosSpacePoiResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/space/poi/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 完全解绑
     * @param UnbindCorpBlazersRequest $request
     * @return UnbindCorpBlazersResponse
     */
    public function unbindCorpBlazers($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindCorpBlazersEx($request, $runtime);
    }

    /**
     * Description: 完全解绑
     * @param UnbindCorpBlazersRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindCorpBlazersResponse
     */
    public function unbindCorpBlazersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return UnbindCorpBlazersResponse::fromMap($this->doRequest("dingtalk.corp.blazers.unbind", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 移除绑定关系
     * @param RemovemappingCorpBlazersRequest $request
     * @return RemovemappingCorpBlazersResponse
     */
    public function removemappingCorpBlazers($request){
        $runtime = new RuntimeOptions([]);
        return $this->removemappingCorpBlazersEx($request, $runtime);
    }

    /**
     * Description: 移除绑定关系
     * @param RemovemappingCorpBlazersRequest $request
     * @param RuntimeOptions $runtime
     * @return RemovemappingCorpBlazersResponse
     */
    public function removemappingCorpBlazersEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemovemappingCorpBlazersResponse::fromMap($this->doRequest("dingtalk.corp.blazers.removemapping", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量查询工序定义
     * @param ListOapiRhinoMosLayoutOperationdefsRequest $request
     * @return ListOapiRhinoMosLayoutOperationdefsResponse
     */
    public function listOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 批量查询工序定义
     * @param ListOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoMosLayoutOperationdefsResponse
     */
    public function listOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询工段最后工序定义列表
     * @param SectionlastOapiRhinoMosLayoutOperationdefsRequest $request
     * @return SectionlastOapiRhinoMosLayoutOperationdefsResponse
     */
    public function sectionlastOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->sectionlastOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 查询工段最后工序定义列表
     * @param SectionlastOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return SectionlastOapiRhinoMosLayoutOperationdefsResponse
     */
    public function sectionlastOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SectionlastOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/sectionlast", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取工序定义详情
     * @param GetOapiRhinoMosLayoutOperationdefRequest $request
     * @return GetOapiRhinoMosLayoutOperationdefResponse
     */
    public function getOapiRhinoMosLayoutOperationdef($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoMosLayoutOperationdefEx($request, $runtime);
    }

    /**
     * Description: 获取工序定义详情
     * @param GetOapiRhinoMosLayoutOperationdefRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoMosLayoutOperationdefResponse
     */
    public function getOapiRhinoMosLayoutOperationdefEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoMosLayoutOperationdefResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdef/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口可以创建钉钉日程，在对应的日历中展示
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param CreateOapiCalendarV2EventRequest $request
     * @return CreateOapiCalendarV2EventResponse
     */
    public function createOapiCalendarV2Event($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiCalendarV2EventEx($request, $runtime);
    }

    /**
     * Description: 通过此接口可以创建钉钉日程，在对应的日历中展示
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param CreateOapiCalendarV2EventRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiCalendarV2EventResponse
     */
    public function createOapiCalendarV2EventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiCalendarV2EventResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/v2/event/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 保存工序定义图
     * @param SaveflowOapiRhinoMosLayoutOperationdefRequest $request
     * @return SaveflowOapiRhinoMosLayoutOperationdefResponse
     */
    public function saveflowOapiRhinoMosLayoutOperationdef($request){
        $runtime = new RuntimeOptions([]);
        return $this->saveflowOapiRhinoMosLayoutOperationdefEx($request, $runtime);
    }

    /**
     * Description: 保存工序定义图
     * @param SaveflowOapiRhinoMosLayoutOperationdefRequest $request
     * @param RuntimeOptions $runtime
     * @return SaveflowOapiRhinoMosLayoutOperationdefResponse
     */
    public function saveflowOapiRhinoMosLayoutOperationdefEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SaveflowOapiRhinoMosLayoutOperationdefResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdef/saveflow", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 日程2.0获取日程详情，在对应的日历中展示
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param DetailOapiCalendarV2EventRequest $request
     * @return DetailOapiCalendarV2EventResponse
     */
    public function detailOapiCalendarV2Event($request){
        $runtime = new RuntimeOptions([]);
        return $this->detailOapiCalendarV2EventEx($request, $runtime);
    }

    /**
     * Description: 日程2.0获取日程详情，在对应的日历中展示
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param DetailOapiCalendarV2EventRequest $request
     * @param RuntimeOptions $runtime
     * @return DetailOapiCalendarV2EventResponse
     */
    public function detailOapiCalendarV2EventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DetailOapiCalendarV2EventResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/v2/event/detail", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询前续工序定义
     * @param PrevOapiRhinoMosLayoutOperationdefsRequest $request
     * @return PrevOapiRhinoMosLayoutOperationdefsResponse
     */
    public function prevOapiRhinoMosLayoutOperationdefs($request){
        $runtime = new RuntimeOptions([]);
        return $this->prevOapiRhinoMosLayoutOperationdefsEx($request, $runtime);
    }

    /**
     * Description: 查询前续工序定义
     * @param PrevOapiRhinoMosLayoutOperationdefsRequest $request
     * @param RuntimeOptions $runtime
     * @return PrevOapiRhinoMosLayoutOperationdefsResponse
     */
    public function prevOapiRhinoMosLayoutOperationdefsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PrevOapiRhinoMosLayoutOperationdefsResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/layout/operationdefs/prev", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业客户修改商旅申请单
     * @param ModifyOapiAlitripBtripApprovalRequest $request
     * @return ModifyOapiAlitripBtripApprovalResponse
     */
    public function modifyOapiAlitripBtripApproval($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifyOapiAlitripBtripApprovalEx($request, $runtime);
    }

    /**
     * Description: 企业客户修改商旅申请单
     * @param ModifyOapiAlitripBtripApprovalRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifyOapiAlitripBtripApprovalResponse
     */
    public function modifyOapiAlitripBtripApprovalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifyOapiAlitripBtripApprovalResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/approval/modify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: DING日程2.0取消日程
     * @param CancelOapiCalendarV2EventRequest $request
     * @return CancelOapiCalendarV2EventResponse
     */
    public function cancelOapiCalendarV2Event($request){
        $runtime = new RuntimeOptions([]);
        return $this->cancelOapiCalendarV2EventEx($request, $runtime);
    }

    /**
     * Description: DING日程2.0取消日程
     * @param CancelOapiCalendarV2EventRequest $request
     * @param RuntimeOptions $runtime
     * @return CancelOapiCalendarV2EventResponse
     */
    public function cancelOapiCalendarV2EventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CancelOapiCalendarV2EventResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/v2/event/cancel", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 日程2.0参与者修改
     * @param UpdateOapiCalendarV2AttendeeRequest $request
     * @return UpdateOapiCalendarV2AttendeeResponse
     */
    public function updateOapiCalendarV2Attendee($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCalendarV2AttendeeEx($request, $runtime);
    }

    /**
     * Description: 日程2.0参与者修改
     * @param UpdateOapiCalendarV2AttendeeRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCalendarV2AttendeeResponse
     */
    public function updateOapiCalendarV2AttendeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCalendarV2AttendeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/v2/attendee/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供ISV开放回访获取能力：ISV通过该接口调用，根据直播的开始和结束时间，分页获取到所有的直播回放信息。
     * @param PlaybackOapiLiveRequest $request
     * @return PlaybackOapiLiveResponse
     */
    public function playbackOapiLive($request){
        $runtime = new RuntimeOptions([]);
        return $this->playbackOapiLiveEx($request, $runtime);
    }

    /**
     * Description: 提供ISV开放回访获取能力：ISV通过该接口调用，根据直播的开始和结束时间，分页获取到所有的直播回放信息。
     * @param PlaybackOapiLiveRequest $request
     * @param RuntimeOptions $runtime
     * @return PlaybackOapiLiveResponse
     */
    public function playbackOapiLiveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PlaybackOapiLiveResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/playback", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过主键 id 查询 MiniAppVersion 记录
     * @param QueryOapiMiniappMiniappversionRequest $request
     * @return QueryOapiMiniappMiniappversionResponse
     */
    public function queryOapiMiniappMiniappversion($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMiniappMiniappversionEx($request, $runtime);
    }

    /**
     * Description: 通过主键 id 查询 MiniAppVersion 记录
     * @param QueryOapiMiniappMiniappversionRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMiniappMiniappversionResponse
     */
    public function queryOapiMiniappMiniappversionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMiniappMiniappversionResponse::fromMap($this->doRequestOApi("POST", "/topapi/miniapp/miniappversion/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供ISV开放直播创建能力：ISV通过该接口调用，提供直播的基本信息，在钉钉创建直播，并获取到直播的推流地址。
     * @param CreateOapiLiveRequest $request
     * @return CreateOapiLiveResponse
     */
    public function createOapiLive($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiLiveEx($request, $runtime);
    }

    /**
     * Description: 提供ISV开放直播创建能力：ISV通过该接口调用，提供直播的基本信息，在钉钉创建直播，并获取到直播的推流地址。
     * @param CreateOapiLiveRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiLiveResponse
     */
    public function createOapiLiveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiLiveResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过租户ID和UICID批量查询生产组
     * @param ListOapiRhinoHumanresEmployeeProductionteamRequest $request
     * @return ListOapiRhinoHumanresEmployeeProductionteamResponse
     */
    public function listOapiRhinoHumanresEmployeeProductionteam($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoHumanresEmployeeProductionteamEx($request, $runtime);
    }

    /**
     * Description: 通过租户ID和UICID批量查询生产组
     * @param ListOapiRhinoHumanresEmployeeProductionteamRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoHumanresEmployeeProductionteamResponse
     */
    public function listOapiRhinoHumanresEmployeeProductionteamEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoHumanresEmployeeProductionteamResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/humanres/employee/productionteam/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供ISV开放直播查询能力：ISV通过该接口调用，根据直播uuid获取直播的详细信息。
     * @param QueryOapiLiveRequest $request
     * @return QueryOapiLiveResponse
     */
    public function queryOapiLive($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiLiveEx($request, $runtime);
    }

    /**
     * Description: 提供ISV开放直播查询能力：ISV通过该接口调用，根据直播uuid获取直播的详细信息。
     * @param QueryOapiLiveRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiLiveResponse
     */
    public function queryOapiLiveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiLiveResponse::fromMap($this->doRequestOApi("POST", "/topapi/live/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获员工信息
     * @param GetOapiRhinoHumanresCorpemployeeRequest $request
     * @return GetOapiRhinoHumanresCorpemployeeResponse
     */
    public function getOapiRhinoHumanresCorpemployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoHumanresCorpemployeeEx($request, $runtime);
    }

    /**
     * Description: 获员工信息
     * @param GetOapiRhinoHumanresCorpemployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoHumanresCorpemployeeResponse
     */
    public function getOapiRhinoHumanresCorpemployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoHumanresCorpemployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/humanres/corpemployee/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过载具id获取载具详情
     * @param GetOapiRhinoCooperationCarrierRequest $request
     * @return GetOapiRhinoCooperationCarrierResponse
     */
    public function getOapiRhinoCooperationCarrier($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoCooperationCarrierEx($request, $runtime);
    }

    /**
     * Description: 通过载具id获取载具详情
     * @param GetOapiRhinoCooperationCarrierRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoCooperationCarrierResponse
     */
    public function getOapiRhinoCooperationCarrierEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoCooperationCarrierResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/cooperation/carrier/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 招聘平台，获取职位信息
     * @param GetOapiAtsJobRequest $request
     * @return GetOapiAtsJobResponse
     */
    public function getOapiAtsJob($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAtsJobEx($request, $runtime);
    }

    /**
     * Description: 招聘平台，获取职位信息
     * @param GetOapiAtsJobRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAtsJobResponse
     */
    public function getOapiAtsJobEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAtsJobResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/job/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过uniqueCode获取设备信息
     * @param GetOapiRhinoDeviceUniquecodeRequest $request
     * @return GetOapiRhinoDeviceUniquecodeResponse
     */
    public function getOapiRhinoDeviceUniquecode($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiRhinoDeviceUniquecodeEx($request, $runtime);
    }

    /**
     * Description: 通过uniqueCode获取设备信息
     * @param GetOapiRhinoDeviceUniquecodeRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiRhinoDeviceUniquecodeResponse
     */
    public function getOapiRhinoDeviceUniquecodeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiRhinoDeviceUniquecodeResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/device/uniquecode/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 招聘平台，新增职位投递信息
     * @param AddOapiAtsJobDeliverRequest $request
     * @return AddOapiAtsJobDeliverResponse
     */
    public function addOapiAtsJobDeliver($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAtsJobDeliverEx($request, $runtime);
    }

    /**
     * Description: 招聘平台，新增职位投递信息
     * @param AddOapiAtsJobDeliverRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAtsJobDeliverResponse
     */
    public function addOapiAtsJobDeliverEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAtsJobDeliverResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/job/deliver/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 招聘平台，简历文件回流信息
     * @param CollectOapiAtsRpaResumeMailRequest $request
     * @return CollectOapiAtsRpaResumeMailResponse
     */
    public function collectOapiAtsRpaResumeMail($request){
        $runtime = new RuntimeOptions([]);
        return $this->collectOapiAtsRpaResumeMailEx($request, $runtime);
    }

    /**
     * Description: 招聘平台，简历文件回流信息
     * @param CollectOapiAtsRpaResumeMailRequest $request
     * @param RuntimeOptions $runtime
     * @return CollectOapiAtsRpaResumeMailResponse
     */
    public function collectOapiAtsRpaResumeMailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CollectOapiAtsRpaResumeMailResponse::fromMap($this->doRequestOApi("POST", "/topapi/ats/rpa/resume/mail/collect", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过工序id获取工序结构化信息
     * @param QueryOapiRhinoHumanresProcessStructuralClusterRequest $request
     * @return QueryOapiRhinoHumanresProcessStructuralClusterResponse
     */
    public function queryOapiRhinoHumanresProcessStructuralCluster($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoHumanresProcessStructuralClusterEx($request, $runtime);
    }

    /**
     * Description: 通过工序id获取工序结构化信息
     * @param QueryOapiRhinoHumanresProcessStructuralClusterRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoHumanresProcessStructuralClusterResponse
     */
    public function queryOapiRhinoHumanresProcessStructuralClusterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoHumanresProcessStructuralClusterResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/humanres/process/structural/cluster/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询生产组
     * @param QueryOapiRhinoHumanresProductionteamRequest $request
     * @return QueryOapiRhinoHumanresProductionteamResponse
     */
    public function queryOapiRhinoHumanresProductionteam($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoHumanresProductionteamEx($request, $runtime);
    }

    /**
     * Description: 查询生产组
     * @param QueryOapiRhinoHumanresProductionteamRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoHumanresProductionteamResponse
     */
    public function queryOapiRhinoHumanresProductionteamEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoHumanresProductionteamResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/humanres/productionteam/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口用于查询指定企业下的指定用户在指定时间段内的请假状态
     * @param GetleavestatusOapiAttendanceRequest $request
     * @return GetleavestatusOapiAttendanceResponse
     */
    public function getleavestatusOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getleavestatusOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 该接口用于查询指定企业下的指定用户在指定时间段内的请假状态
     * @param GetleavestatusOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetleavestatusOapiAttendanceResponse
     */
    public function getleavestatusOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetleavestatusOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getleavestatus", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 家校人脸识别接口
     * @param SearchOapiEduFaceRequest $request
     * @return SearchOapiEduFaceResponse
     */
    public function searchOapiEduFace($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiEduFaceEx($request, $runtime);
    }

    /**
     * Description: 家校人脸识别接口
     * @param SearchOapiEduFaceRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiEduFaceResponse
     */
    public function searchOapiEduFaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiEduFaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/face/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能制造-查询工序能力列表
     * @param ListOapiRhinoDtechProcessTypeRequest $request
     * @return ListOapiRhinoDtechProcessTypeResponse
     */
    public function listOapiRhinoDtechProcessType($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoDtechProcessTypeEx($request, $runtime);
    }

    /**
     * Description: 智能制造-查询工序能力列表
     * @param ListOapiRhinoDtechProcessTypeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoDtechProcessTypeResponse
     */
    public function listOapiRhinoDtechProcessTypeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ListOapiRhinoDtechProcessTypeResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/dtech/process/type/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新角色
     * @param UpdateroleOapiRoleRequest $request
     * @return UpdateroleOapiRoleResponse
     */
    public function updateroleOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateroleOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 更新角色
     * @param UpdateroleOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateroleOapiRoleResponse
     */
    public function updateroleOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateroleOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/role/updaterole", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加角色
     * @param AddroleOapiRoleRequest $request
     * @return AddroleOapiRoleResponse
     */
    public function addroleOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->addroleOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 添加角色
     * @param AddroleOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return AddroleOapiRoleResponse
     */
    public function addroleOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddroleOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/role/addrole", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 添加角色组
     * @param AddrolegroupOapiRoleRequest $request
     * @return AddrolegroupOapiRoleResponse
     */
    public function addrolegroupOapiRole($request){
        $runtime = new RuntimeOptions([]);
        return $this->addrolegroupOapiRoleEx($request, $runtime);
    }

    /**
     * Description: 添加角色组
     * @param AddrolegroupOapiRoleRequest $request
     * @param RuntimeOptions $runtime
     * @return AddrolegroupOapiRoleResponse
     */
    public function addrolegroupOapiRoleEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddrolegroupOapiRoleResponse::fromMap($this->doRequestOApi("POST", "/role/addrolegroup", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据姓名和身份证号获取staffId（仅拥有指定权限的ISV调用）
     * @param ListbycertOapiSmartworkHrmEmployeeRequest $request
     * @return ListbycertOapiSmartworkHrmEmployeeResponse
     */
    public function listbycertOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbycertOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 根据姓名和身份证号获取staffId（仅拥有指定权限的ISV调用）
     * @param ListbycertOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbycertOapiSmartworkHrmEmployeeResponse
     */
    public function listbycertOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbycertOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/listbycert", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询服务号列表
     * @param ListOapiServiceaccountRequest $request
     * @return ListOapiServiceaccountResponse
     */
    public function listOapiServiceaccount($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiServiceaccountEx($request, $runtime);
    }

    /**
     * Description: 查询服务号列表
     * @param ListOapiServiceaccountRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiServiceaccountResponse
     */
    public function listOapiServiceaccountEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiServiceaccountResponse::fromMap($this->doRequestOApi("POST", "/topapi/serviceaccount/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过此接口可以修改钉钉日程，在对应的日历中展示
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param UpdateOapiCalendarV2EventRequest $request
     * @return UpdateOapiCalendarV2EventResponse
     */
    public function updateOapiCalendarV2Event($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCalendarV2EventEx($request, $runtime);
    }

    /**
     * Description: 通过此接口可以修改钉钉日程，在对应的日历中展示
     * 该接口处于内部灰度阶段, 申请使用请邮件联系:wusuan.yby@alibaba-inc.com
     * @param UpdateOapiCalendarV2EventRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCalendarV2EventResponse
     */
    public function updateOapiCalendarV2EventEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCalendarV2EventResponse::fromMap($this->doRequestOApi("POST", "/topapi/calendar/v2/event/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给bc客服消息发送的接口，一期提供给新零售店小蜜
     * @param SendmessageOapiKefuRequest $request
     * @return SendmessageOapiKefuResponse
     */
    public function sendmessageOapiKefu($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendmessageOapiKefuEx($request, $runtime);
    }

    /**
     * Description: 提供给bc客服消息发送的接口，一期提供给新零售店小蜜
     * @param SendmessageOapiKefuRequest $request
     * @param RuntimeOptions $runtime
     * @return SendmessageOapiKefuResponse
     */
    public function sendmessageOapiKefuEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendmessageOapiKefuResponse::fromMap($this->doRequestOApi("POST", "/topapi/kefu/sendmessage", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 条件完成工序
     * @param FinishOapiRhinoMosExecPerformConditionalRequest $request
     * @return FinishOapiRhinoMosExecPerformConditionalResponse
     */
    public function finishOapiRhinoMosExecPerformConditional($request){
        $runtime = new RuntimeOptions([]);
        return $this->finishOapiRhinoMosExecPerformConditionalEx($request, $runtime);
    }

    /**
     * Description: 条件完成工序
     * @param FinishOapiRhinoMosExecPerformConditionalRequest $request
     * @param RuntimeOptions $runtime
     * @return FinishOapiRhinoMosExecPerformConditionalResponse
     */
    public function finishOapiRhinoMosExecPerformConditionalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return FinishOapiRhinoMosExecPerformConditionalResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/mos/exec/perform/conditional/finish", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取人员技能经验值
     * @param QueryOapiRhinoHumanresEmployeeProcessCapacityRequest $request
     * @return QueryOapiRhinoHumanresEmployeeProcessCapacityResponse
     */
    public function queryOapiRhinoHumanresEmployeeProcessCapacity($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoHumanresEmployeeProcessCapacityEx($request, $runtime);
    }

    /**
     * Description: 获取人员技能经验值
     * @param QueryOapiRhinoHumanresEmployeeProcessCapacityRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoHumanresEmployeeProcessCapacityResponse
     */
    public function queryOapiRhinoHumanresEmployeeProcessCapacityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoHumanresEmployeeProcessCapacityResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/humanres/employee/process/capacity/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取人员在工序上使用最多的设备
     * @param QueryOapiRhinoHumanresEmployeeProcessBestdeviceRequest $request
     * @return QueryOapiRhinoHumanresEmployeeProcessBestdeviceResponse
     */
    public function queryOapiRhinoHumanresEmployeeProcessBestdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRhinoHumanresEmployeeProcessBestdeviceEx($request, $runtime);
    }

    /**
     * Description: 获取人员在工序上使用最多的设备
     * @param QueryOapiRhinoHumanresEmployeeProcessBestdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRhinoHumanresEmployeeProcessBestdeviceResponse
     */
    public function queryOapiRhinoHumanresEmployeeProcessBestdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRhinoHumanresEmployeeProcessBestdeviceResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/humanres/employee/process/bestdevice/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 预测审批人
     * @param ForecastOapiProcessApproversRequest $request
     * @return ForecastOapiProcessApproversResponse
     */
    public function forecastOapiProcessApprovers($request){
        $runtime = new RuntimeOptions([]);
        return $this->forecastOapiProcessApproversEx($request, $runtime);
    }

    /**
     * Description: 预测审批人
     * @param ForecastOapiProcessApproversRequest $request
     * @param RuntimeOptions $runtime
     * @return ForecastOapiProcessApproversResponse
     */
    public function forecastOapiProcessApproversEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ForecastOapiProcessApproversResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/approvers/forecast", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 二方关系导入钉钉
     * @param AddOapiImpaasRelationRequest $request
     * @return AddOapiImpaasRelationResponse
     */
    public function addOapiImpaasRelation($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiImpaasRelationEx($request, $runtime);
    }

    /**
     * Description: 二方关系导入钉钉
     * @param AddOapiImpaasRelationRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiImpaasRelationResponse
     */
    public function addOapiImpaasRelationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiImpaasRelationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/relation/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 将conversationId转换成chatId
     * @param TransformOapiChatRequest $request
     * @return TransformOapiChatResponse
     */
    public function transformOapiChat($request){
        $runtime = new RuntimeOptions([]);
        return $this->transformOapiChatEx($request, $runtime);
    }

    /**
     * Description: 将conversationId转换成chatId
     * @param TransformOapiChatRequest $request
     * @param RuntimeOptions $runtime
     * @return TransformOapiChatResponse
     */
    public function transformOapiChatEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TransformOapiChatResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/transform", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 二方渠道导入账号
     * @param AddprofileOapiImpaasUserRequest $request
     * @return AddprofileOapiImpaasUserResponse
     */
    public function addprofileOapiImpaasUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->addprofileOapiImpaasUserEx($request, $runtime);
    }

    /**
     * Description: 二方渠道导入账号
     * @param AddprofileOapiImpaasUserRequest $request
     * @param RuntimeOptions $runtime
     * @return AddprofileOapiImpaasUserResponse
     */
    public function addprofileOapiImpaasUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddprofileOapiImpaasUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/user/addprofile", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除二方关系
     * @param DelOapiImpaasRelationRequest $request
     * @return DelOapiImpaasRelationResponse
     */
    public function delOapiImpaasRelation($request){
        $runtime = new RuntimeOptions([]);
        return $this->delOapiImpaasRelationEx($request, $runtime);
    }

    /**
     * Description: 删除二方关系
     * @param DelOapiImpaasRelationRequest $request
     * @param RuntimeOptions $runtime
     * @return DelOapiImpaasRelationResponse
     */
    public function delOapiImpaasRelationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DelOapiImpaasRelationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/relation/del", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据用户账号，获取用户属性
     * @param GetprofileOapiImpaasUserRequest $request
     * @return GetprofileOapiImpaasUserResponse
     */
    public function getprofileOapiImpaasUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getprofileOapiImpaasUserEx($request, $runtime);
    }

    /**
     * Description: 根据用户账号，获取用户属性
     * @param GetprofileOapiImpaasUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetprofileOapiImpaasUserResponse
     */
    public function getprofileOapiImpaasUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetprofileOapiImpaasUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/user/getprofile", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业密钥列表
     * @param ListCorpEncryptionKeyRequest $request
     * @return ListCorpEncryptionKeyResponse
     */
    public function listCorpEncryptionKey($request){
        $runtime = new RuntimeOptions([]);
        return $this->listCorpEncryptionKeyEx($request, $runtime);
    }

    /**
     * Description: 查询企业密钥列表
     * @param ListCorpEncryptionKeyRequest $request
     * @param RuntimeOptions $runtime
     * @return ListCorpEncryptionKeyResponse
     */
    public function listCorpEncryptionKeyEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return ListCorpEncryptionKeyResponse::fromMap($this->doRequest("dingtalk.corp.encryption.key.list", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业下的模板基础信息，包括名称，图片，管理员等
     * @param ListOapiProcessBaseinfoRequest $request
     * @return ListOapiProcessBaseinfoResponse
     */
    public function listOapiProcessBaseinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiProcessBaseinfoEx($request, $runtime);
    }

    /**
     * Description: 查询企业下的模板基础信息，包括名称，图片，管理员等
     * @param ListOapiProcessBaseinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiProcessBaseinfoResponse
     */
    public function listOapiProcessBaseinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiProcessBaseinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/baseinfo/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业电话会议详情记录
     * @param QueryCorpConferenceDetailsRequest $request
     * @return QueryCorpConferenceDetailsResponse
     */
    public function queryCorpConferenceDetails($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryCorpConferenceDetailsEx($request, $runtime);
    }

    /**
     * Description: 查询企业电话会议详情记录
     * @param QueryCorpConferenceDetailsRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryCorpConferenceDetailsResponse
     */
    public function queryCorpConferenceDetailsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryCorpConferenceDetailsResponse::fromMap($this->doRequest("dingtalk.corp.conference.details.query", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取合作企业点餐设置列表
     * @param BetaOapiCateringCooplistGetRequest $request
     * @return BetaOapiCateringCooplistGetResponse
     */
    public function betaOapiCateringCooplistGet($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringCooplistGetEx($request, $runtime);
    }

    /**
     * Description: 分页获取合作企业点餐设置列表
     * @param BetaOapiCateringCooplistGetRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringCooplistGetResponse
     */
    public function betaOapiCateringCooplistGetEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringCooplistGetResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/cooplist/get/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 当前企业的点餐设置
     * @param BetaOapiCateringMealconfigGetRequest $request
     * @return BetaOapiCateringMealconfigGetResponse
     */
    public function betaOapiCateringMealconfigGet($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringMealconfigGetEx($request, $runtime);
    }

    /**
     * Description: 当前企业的点餐设置
     * @param BetaOapiCateringMealconfigGetRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringMealconfigGetResponse
     */
    public function betaOapiCateringMealconfigGetEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringMealconfigGetResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/mealconfig/get/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取所有申请合作企业id列表
     * @param BetaOapiCateringApplylistCorpidlistGetRequest $request
     * @return BetaOapiCateringApplylistCorpidlistGetResponse
     */
    public function betaOapiCateringApplylistCorpidlistGet($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringApplylistCorpidlistGetEx($request, $runtime);
    }

    /**
     * Description: 获取所有申请合作企业id列表
     * @param BetaOapiCateringApplylistCorpidlistGetRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringApplylistCorpidlistGetResponse
     */
    public function betaOapiCateringApplylistCorpidlistGetEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringApplylistCorpidlistGetResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/applylist/corpidlist/get/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 商户端处理合作关系
     * @param BetaOapiCateringCoopDealRequest $request
     * @return BetaOapiCateringCoopDealResponse
     */
    public function betaOapiCateringCoopDeal($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringCoopDealEx($request, $runtime);
    }

    /**
     * Description: 商户端处理合作关系
     * @param BetaOapiCateringCoopDealRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringCoopDealResponse
     */
    public function betaOapiCateringCoopDealEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringCoopDealResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/coop/deal/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除假流程实例
     * @param DeleteOapiProcessWorkrecordRequest $request
     * @return DeleteOapiProcessWorkrecordResponse
     */
    public function deleteOapiProcessWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiProcessWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 删除假流程实例
     * @param DeleteOapiProcessWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiProcessWorkrecordResponse
     */
    public function deleteOapiProcessWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiProcessWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取实例详情
     * @param GetOapiCollectionInstanceRequest $request
     * @return GetOapiCollectionInstanceResponse
     */
    public function getOapiCollectionInstance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCollectionInstanceEx($request, $runtime);
    }

    /**
     * Description: 获取实例详情
     * @param GetOapiCollectionInstanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCollectionInstanceResponse
     */
    public function getOapiCollectionInstanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCollectionInstanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/collection/instance/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 内部群升级到服务群
     * @param UpgradeOapiImChatServicegroupRequest $request
     * @return UpgradeOapiImChatServicegroupResponse
     */
    public function upgradeOapiImChatServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->upgradeOapiImChatServicegroupEx($request, $runtime);
    }

    /**
     * Description: 内部群升级到服务群
     * @param UpgradeOapiImChatServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return UpgradeOapiImChatServicegroupResponse
     */
    public function upgradeOapiImChatServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpgradeOapiImChatServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/upgrade", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param PushOapiCateringOrderRequest $request
     * @return PushOapiCateringOrderResponse
     */
    public function pushOapiCateringOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->pushOapiCateringOrderEx($request, $runtime);
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param PushOapiCateringOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return PushOapiCateringOrderResponse
     */
    public function pushOapiCateringOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PushOapiCateringOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/order/push", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 增加和删除群管理员接口
     * @param UpdateOapiChatSubadminRequest $request
     * @return UpdateOapiChatSubadminResponse
     */
    public function updateOapiChatSubadmin($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiChatSubadminEx($request, $runtime);
    }

    /**
     * Description: 增加和删除群管理员接口
     * @param UpdateOapiChatSubadminRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiChatSubadminResponse
     */
    public function updateOapiChatSubadminEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiChatSubadminResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/subadmin/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取用户的待办事项
     * @param GetbyuseridOapiWorkrecordRequest $request
     * @return GetbyuseridOapiWorkrecordResponse
     */
    public function getbyuseridOapiWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbyuseridOapiWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 获取用户的待办事项
     * @param GetbyuseridOapiWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbyuseridOapiWorkrecordResponse
     */
    public function getbyuseridOapiWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetbyuseridOapiWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/workrecord/getbyuserid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改群成员信息
     * @param ModifymemberinfoOapiImpaasGroupmemberRequest $request
     * @return ModifymemberinfoOapiImpaasGroupmemberResponse
     */
    public function modifymemberinfoOapiImpaasGroupmember($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifymemberinfoOapiImpaasGroupmemberEx($request, $runtime);
    }

    /**
     * Description: 修改群成员信息
     * @param ModifymemberinfoOapiImpaasGroupmemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifymemberinfoOapiImpaasGroupmemberResponse
     */
    public function modifymemberinfoOapiImpaasGroupmemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifymemberinfoOapiImpaasGroupmemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/groupmember/modifymemberinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: IMPAAS解散群接口
     * @param DismissOapiImpaasGroupRequest $request
     * @return DismissOapiImpaasGroupResponse
     */
    public function dismissOapiImpaasGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->dismissOapiImpaasGroupEx($request, $runtime);
    }

    /**
     * Description: IMPAAS解散群接口
     * @param DismissOapiImpaasGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return DismissOapiImpaasGroupResponse
     */
    public function dismissOapiImpaasGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DismissOapiImpaasGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/group/dismiss", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取群成员列表
     * @param GetmemberlistOapiImpaasGroupmemberRequest $request
     * @return GetmemberlistOapiImpaasGroupmemberResponse
     */
    public function getmemberlistOapiImpaasGroupmember($request){
        $runtime = new RuntimeOptions([]);
        return $this->getmemberlistOapiImpaasGroupmemberEx($request, $runtime);
    }

    /**
     * Description: 获取群成员列表
     * @param GetmemberlistOapiImpaasGroupmemberRequest $request
     * @param RuntimeOptions $runtime
     * @return GetmemberlistOapiImpaasGroupmemberResponse
     */
    public function getmemberlistOapiImpaasGroupmemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetmemberlistOapiImpaasGroupmemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/groupmember/getmemberlist", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: IMPAAS平台创建群接口
     * @param CreateOapiImpaasGroupRequest $request
     * @return CreateOapiImpaasGroupResponse
     */
    public function createOapiImpaasGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiImpaasGroupEx($request, $runtime);
    }

    /**
     * Description: IMPAAS平台创建群接口
     * @param CreateOapiImpaasGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiImpaasGroupResponse
     */
    public function createOapiImpaasGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiImpaasGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/group/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: impaas查询群信息接口
     * @param QueryOapiImpaasGroupRequest $request
     * @return QueryOapiImpaasGroupResponse
     */
    public function queryOapiImpaasGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiImpaasGroupEx($request, $runtime);
    }

    /**
     * Description: impaas查询群信息接口
     * @param QueryOapiImpaasGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiImpaasGroupResponse
     */
    public function queryOapiImpaasGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiImpaasGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/group/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取大客户对应的直播统计数据
     * @param GetOapiKacDatavVideoliveRequest $request
     * @return GetOapiKacDatavVideoliveResponse
     */
    public function getOapiKacDatavVideolive($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacDatavVideoliveEx($request, $runtime);
    }

    /**
     * Description: 获取大客户对应的直播统计数据
     * @param GetOapiKacDatavVideoliveRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacDatavVideoliveResponse
     */
    public function getOapiKacDatavVideoliveEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacDatavVideoliveResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/videolive/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取模板升级信息,模板是否可升级
     * @param QueryOapiProcessTemplateUpgradeinfoRequest $request
     * @return QueryOapiProcessTemplateUpgradeinfoResponse
     */
    public function queryOapiProcessTemplateUpgradeinfo($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiProcessTemplateUpgradeinfoEx($request, $runtime);
    }

    /**
     * Description: 获取模板升级信息,模板是否可升级
     * @param QueryOapiProcessTemplateUpgradeinfoRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiProcessTemplateUpgradeinfoResponse
     */
    public function queryOapiProcessTemplateUpgradeinfoEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiProcessTemplateUpgradeinfoResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/template/upgradeinfo/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户视频会议统计数据查询
     * @param GetOapiKacDatavVideoconfRequest $request
     * @return GetOapiKacDatavVideoconfResponse
     */
    public function getOapiKacDatavVideoconf($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacDatavVideoconfEx($request, $runtime);
    }

    /**
     * Description: 大客户视频会议统计数据查询
     * @param GetOapiKacDatavVideoconfRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacDatavVideoconfResponse
     */
    public function getOapiKacDatavVideoconfEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacDatavVideoconfResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/videoconf/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 升级企业审批模板中的金额类组件到新的支付套件
     * @param UpgradeOapiProcessTemplateRequest $request
     * @return UpgradeOapiProcessTemplateResponse
     */
    public function upgradeOapiProcessTemplate($request){
        $runtime = new RuntimeOptions([]);
        return $this->upgradeOapiProcessTemplateEx($request, $runtime);
    }

    /**
     * Description: 升级企业审批模板中的金额类组件到新的支付套件
     * @param UpgradeOapiProcessTemplateRequest $request
     * @param RuntimeOptions $runtime
     * @return UpgradeOapiProcessTemplateResponse
     */
    public function upgradeOapiProcessTemplateEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpgradeOapiProcessTemplateResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/template/upgrade", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 中止dingpay订单的支付
     * @param TerminateOapiDingpayOrderRequest $request
     * @return TerminateOapiDingpayOrderResponse
     */
    public function terminateOapiDingpayOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->terminateOapiDingpayOrderEx($request, $runtime);
    }

    /**
     * Description: 中止dingpay订单的支付
     * @param TerminateOapiDingpayOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return TerminateOapiDingpayOrderResponse
     */
    public function terminateOapiDingpayOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TerminateOapiDingpayOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/dingpay/order/terminate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: ISV或者企业通过deviceId来获取设备详情
     * @param GetCorpDeviceManageRequest $request
     * @return GetCorpDeviceManageResponse
     */
    public function getCorpDeviceManage($request){
        $runtime = new RuntimeOptions([]);
        return $this->getCorpDeviceManageEx($request, $runtime);
    }

    /**
     * Description: ISV或者企业通过deviceId来获取设备详情
     * @param GetCorpDeviceManageRequest $request
     * @param RuntimeOptions $runtime
     * @return GetCorpDeviceManageResponse
     */
    public function getCorpDeviceManageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetCorpDeviceManageResponse::fromMap($this->doRequest("dingtalk.corp.device.manage.get", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 此接口用于展示企业已经绑定的设备列表(分页接口)
     * @param QuerylistCorpDeviceManageRequest $request
     * @return QuerylistCorpDeviceManageResponse
     */
    public function querylistCorpDeviceManage($request){
        $runtime = new RuntimeOptions([]);
        return $this->querylistCorpDeviceManageEx($request, $runtime);
    }

    /**
     * Description: 此接口用于展示企业已经绑定的设备列表(分页接口)
     * @param QuerylistCorpDeviceManageRequest $request
     * @param RuntimeOptions $runtime
     * @return QuerylistCorpDeviceManageResponse
     */
    public function querylistCorpDeviceManageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QuerylistCorpDeviceManageResponse::fromMap($this->doRequest("dingtalk.corp.device.manage.querylist", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业解除授权后，isv清理工作流数据
     * @param CleanOapiProcessRequest $request
     * @return CleanOapiProcessResponse
     */
    public function cleanOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->cleanOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 企业解除授权后，isv清理工作流数据
     * @param CleanOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return CleanOapiProcessResponse
     */
    public function cleanOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CleanOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/clean", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量更新实例状态
     * @param BatchupdateOapiProcessWorkrecordRequest $request
     * @return BatchupdateOapiProcessWorkrecordResponse
     */
    public function batchupdateOapiProcessWorkrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchupdateOapiProcessWorkrecordEx($request, $runtime);
    }

    /**
     * Description: 批量更新实例状态
     * @param BatchupdateOapiProcessWorkrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchupdateOapiProcessWorkrecordResponse
     */
    public function batchupdateOapiProcessWorkrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchupdateOapiProcessWorkrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/workrecord/batchupdate", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改企业绑定的智能硬件对应的昵称
     * @param UpdateCorpDeviceNickRequest $request
     * @return UpdateCorpDeviceNickResponse
     */
    public function updateCorpDeviceNick($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateCorpDeviceNickEx($request, $runtime);
    }

    /**
     * Description: 修改企业绑定的智能硬件对应的昵称
     * @param UpdateCorpDeviceNickRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateCorpDeviceNickResponse
     */
    public function updateCorpDeviceNickEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateCorpDeviceNickResponse::fromMap($this->doRequest("dingtalk.corp.device.nick.update", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 盒马接入钉钉sdk，群主转交功能
     * @param ChangegroupownerOapiImpaasConversaionRequest $request
     * @return ChangegroupownerOapiImpaasConversaionResponse
     */
    public function changegroupownerOapiImpaasConversaion($request){
        $runtime = new RuntimeOptions([]);
        return $this->changegroupownerOapiImpaasConversaionEx($request, $runtime);
    }

    /**
     * Description: 盒马接入钉钉sdk，群主转交功能
     * @param ChangegroupownerOapiImpaasConversaionRequest $request
     * @param RuntimeOptions $runtime
     * @return ChangegroupownerOapiImpaasConversaionResponse
     */
    public function changegroupownerOapiImpaasConversaionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ChangegroupownerOapiImpaasConversaionResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/conversaion/changegroupowner", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 测试
     * @param GetclassOapiAttendanceTestRequest $request
     * @return GetclassOapiAttendanceTestResponse
     */
    public function getclassOapiAttendanceTest($request){
        $runtime = new RuntimeOptions([]);
        return $this->getclassOapiAttendanceTestEx($request, $runtime);
    }

    /**
     * Description: 测试
     * @param GetclassOapiAttendanceTestRequest $request
     * @param RuntimeOptions $runtime
     * @return GetclassOapiAttendanceTestResponse
     */
    public function getclassOapiAttendanceTestEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetclassOapiAttendanceTestResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/test/getclass", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 消息异步发送，返回taskid，根据taskid获取消息是否成功
     * @param AsyncsendOapiImpaasMessageRequest $request
     * @return AsyncsendOapiImpaasMessageResponse
     */
    public function asyncsendOapiImpaasMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->asyncsendOapiImpaasMessageEx($request, $runtime);
    }

    /**
     * Description: 消息异步发送，返回taskid，根据taskid获取消息是否成功
     * @param AsyncsendOapiImpaasMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return AsyncsendOapiImpaasMessageResponse
     */
    public function asyncsendOapiImpaasMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AsyncsendOapiImpaasMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/message/asyncsend", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 此接口用于解绑已经绑定到xx企业的某个设备
     * @param UnbindCorpDeviceManageRequest $request
     * @return UnbindCorpDeviceManageResponse
     */
    public function unbindCorpDeviceManage($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindCorpDeviceManageEx($request, $runtime);
    }

    /**
     * Description: 此接口用于解绑已经绑定到xx企业的某个设备
     * @param UnbindCorpDeviceManageRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindCorpDeviceManageResponse
     */
    public function unbindCorpDeviceManageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnbindCorpDeviceManageResponse::fromMap($this->doRequest("dingtalk.corp.device.manage.unbind", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 火车票城市搜索
     * @param SuggestOapiAlitripBtripTrainCityRequest $request
     * @return SuggestOapiAlitripBtripTrainCityResponse
     */
    public function suggestOapiAlitripBtripTrainCity($request){
        $runtime = new RuntimeOptions([]);
        return $this->suggestOapiAlitripBtripTrainCityEx($request, $runtime);
    }

    /**
     * Description: 火车票城市搜索
     * @param SuggestOapiAlitripBtripTrainCityRequest $request
     * @param RuntimeOptions $runtime
     * @return SuggestOapiAlitripBtripTrainCityResponse
     */
    public function suggestOapiAlitripBtripTrainCityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SuggestOapiAlitripBtripTrainCityResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/train/city/suggest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取消息发送的状态
     * @param GetmessagestatusOapiImpaasMessageRequest $request
     * @return GetmessagestatusOapiImpaasMessageResponse
     */
    public function getmessagestatusOapiImpaasMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->getmessagestatusOapiImpaasMessageEx($request, $runtime);
    }

    /**
     * Description: 获取消息发送的状态
     * @param GetmessagestatusOapiImpaasMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return GetmessagestatusOapiImpaasMessageResponse
     */
    public function getmessagestatusOapiImpaasMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetmessagestatusOapiImpaasMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/message/getmessagestatus", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除成本中心人员信息
     * @param DeleteOapiAlitripBtripCostCenterEntityRequest $request
     * @return DeleteOapiAlitripBtripCostCenterEntityResponse
     */
    public function deleteOapiAlitripBtripCostCenterEntity($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiAlitripBtripCostCenterEntityEx($request, $runtime);
    }

    /**
     * Description: 删除成本中心人员信息
     * @param DeleteOapiAlitripBtripCostCenterEntityRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiAlitripBtripCostCenterEntityResponse
     */
    public function deleteOapiAlitripBtripCostCenterEntityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiAlitripBtripCostCenterEntityResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/entity/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用户新建审批单
     * @param NewOapiAlitripBtripApprovalRequest $request
     * @return NewOapiAlitripBtripApprovalResponse
     */
    public function newOapiAlitripBtripApproval($request){
        $runtime = new RuntimeOptions([]);
        return $this->newOapiAlitripBtripApprovalEx($request, $runtime);
    }

    /**
     * Description: 用户新建审批单
     * @param NewOapiAlitripBtripApprovalRequest $request
     * @param RuntimeOptions $runtime
     * @return NewOapiAlitripBtripApprovalResponse
     */
    public function newOapiAlitripBtripApprovalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return NewOapiAlitripBtripApprovalResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/approval/new", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取类目预定页跳转地址
     * @param GetOapiAlitripBtripCategoryAddressRequest $request
     * @return GetOapiAlitripBtripCategoryAddressResponse
     */
    public function getOapiAlitripBtripCategoryAddress($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAlitripBtripCategoryAddressEx($request, $runtime);
    }

    /**
     * Description: 获取类目预定页跳转地址
     * @param GetOapiAlitripBtripCategoryAddressRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAlitripBtripCategoryAddressResponse
     */
    public function getOapiAlitripBtripCategoryAddressEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAlitripBtripCategoryAddressResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/category/address/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改群中全员可见的群背景
     * @param UpdateOapiChatThemeRequest $request
     * @return UpdateOapiChatThemeResponse
     */
    public function updateOapiChatTheme($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiChatThemeEx($request, $runtime);
    }

    /**
     * Description: 修改群中全员可见的群背景
     * @param UpdateOapiChatThemeRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiChatThemeResponse
     */
    public function updateOapiChatThemeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiChatThemeResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/theme/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询用户组织绑定的卖家列表
     * @param QueryOapiRetailSellerRequest $request
     * @return QueryOapiRetailSellerResponse
     */
    public function queryOapiRetailSeller($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRetailSellerEx($request, $runtime);
    }

    /**
     * Description: 查询用户组织绑定的卖家列表
     * @param QueryOapiRetailSellerRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRetailSellerResponse
     */
    public function queryOapiRetailSellerEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRetailSellerResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/seller/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉新零售查询组织店铺人员结构关系
     * @param QueryOapiRetailSellerOrgdetailRequest $request
     * @return QueryOapiRetailSellerOrgdetailResponse
     */
    public function queryOapiRetailSellerOrgdetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRetailSellerOrgdetailEx($request, $runtime);
    }

    /**
     * Description: 钉钉新零售查询组织店铺人员结构关系
     * @param QueryOapiRetailSellerOrgdetailRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRetailSellerOrgdetailResponse
     */
    public function queryOapiRetailSellerOrgdetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRetailSellerOrgdetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/seller/orgdetail/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉新零售组织绑定校验
     * @param CheckOapiRetailSellerOrgRequest $request
     * @return CheckOapiRetailSellerOrgResponse
     */
    public function checkOapiRetailSellerOrg($request){
        $runtime = new RuntimeOptions([]);
        return $this->checkOapiRetailSellerOrgEx($request, $runtime);
    }

    /**
     * Description: 钉钉新零售组织绑定校验
     * @param CheckOapiRetailSellerOrgRequest $request
     * @param RuntimeOptions $runtime
     * @return CheckOapiRetailSellerOrgResponse
     */
    public function checkOapiRetailSellerOrgEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CheckOapiRetailSellerOrgResponse::fromMap($this->doRequestOApi("POST", "/topapi/retail/seller/org/check", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业内部应用通过该接口取消内部群的特殊标签。取消后，后续进入该群聊会话不会请求该标签特有的群插件列表
     * @param DeleteOapiChatTagRequest $request
     * @return DeleteOapiChatTagResponse
     */
    public function deleteOapiChatTag($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiChatTagEx($request, $runtime);
    }

    /**
     * Description: 企业内部应用通过该接口取消内部群的特殊标签。取消后，后续进入该群聊会话不会请求该标签特有的群插件列表
     * @param DeleteOapiChatTagRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiChatTagResponse
     */
    public function deleteOapiChatTagEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiChatTagResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/tag/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业内部应用通过该接口给内部群打上特殊的标签。后续进入群聊会话会请求并显示特殊的群插件列表
     * @param SetOapiChatTagRequest $request
     * @return SetOapiChatTagResponse
     */
    public function setOapiChatTag($request){
        $runtime = new RuntimeOptions([]);
        return $this->setOapiChatTagEx($request, $runtime);
    }

    /**
     * Description: 企业内部应用通过该接口给内部群打上特殊的标签。后续进入群聊会话会请求并显示特殊的群插件列表
     * @param SetOapiChatTagRequest $request
     * @param RuntimeOptions $runtime
     * @return SetOapiChatTagResponse
     */
    public function setOapiChatTagEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetOapiChatTagResponse::fromMap($this->doRequestOApi("POST", "/topapi/chat/tag/set", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能制造-提供批量获取设备参数功能
     * @param ListOapiRhinoDtechMachineParamRequest $request
     * @return ListOapiRhinoDtechMachineParamResponse
     */
    public function listOapiRhinoDtechMachineParam($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiRhinoDtechMachineParamEx($request, $runtime);
    }

    /**
     * Description: 智能制造-提供批量获取设备参数功能
     * @param ListOapiRhinoDtechMachineParamRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiRhinoDtechMachineParamResponse
     */
    public function listOapiRhinoDtechMachineParamEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiRhinoDtechMachineParamResponse::fromMap($this->doRequestOApi("POST", "/topapi/rhino/dtech/machine/param/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 接口描述：是否忽略问题模型判断，返回值：true: 可以忽略; false: 不能忽略,走正常逻辑;
     * @param IsignoreproblemcheckOapiCcoserviceServicegroupRequest $request
     * @return IsignoreproblemcheckOapiCcoserviceServicegroupResponse
     */
    public function isignoreproblemcheckOapiCcoserviceServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->isignoreproblemcheckOapiCcoserviceServicegroupEx($request, $runtime);
    }

    /**
     * Description: 接口描述：是否忽略问题模型判断，返回值：true: 可以忽略; false: 不能忽略,走正常逻辑;
     * @param IsignoreproblemcheckOapiCcoserviceServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return IsignoreproblemcheckOapiCcoserviceServicegroupResponse
     */
    public function isignoreproblemcheckOapiCcoserviceServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return IsignoreproblemcheckOapiCcoserviceServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/ccoservice/servicegroup/isignoreproblemcheck", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业将企业勋章授予员工
     * @param GrantOapiMedalCorpmedalRequest $request
     * @return GrantOapiMedalCorpmedalResponse
     */
    public function grantOapiMedalCorpmedal($request){
        $runtime = new RuntimeOptions([]);
        return $this->grantOapiMedalCorpmedalEx($request, $runtime);
    }

    /**
     * Description: 企业将企业勋章授予员工
     * @param GrantOapiMedalCorpmedalRequest $request
     * @param RuntimeOptions $runtime
     * @return GrantOapiMedalCorpmedalResponse
     */
    public function grantOapiMedalCorpmedalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GrantOapiMedalCorpmedalResponse::fromMap($this->doRequestOApi("POST", "/topapi/medal/corpmedal/grant", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用户佩戴/摘除被授予的企业勋章
     * @param WearOapiMedalCorpmedalRequest $request
     * @return WearOapiMedalCorpmedalResponse
     */
    public function wearOapiMedalCorpmedal($request){
        $runtime = new RuntimeOptions([]);
        return $this->wearOapiMedalCorpmedalEx($request, $runtime);
    }

    /**
     * Description: 用户佩戴/摘除被授予的企业勋章
     * @param WearOapiMedalCorpmedalRequest $request
     * @param RuntimeOptions $runtime
     * @return WearOapiMedalCorpmedalResponse
     */
    public function wearOapiMedalCorpmedalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return WearOapiMedalCorpmedalResponse::fromMap($this->doRequestOApi("POST", "/topapi/medal/corpmedal/wear", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据公告id删除企业公告，只有以下身份可以删除
     * 1、主管理员
     * 2、公告子管理员并且是待删除公告创建者
     * @param DeleteOapiBlackboardRequest $request
     * @return DeleteOapiBlackboardResponse
     */
    public function deleteOapiBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiBlackboardEx($request, $runtime);
    }

    /**
     * Description: 根据公告id删除企业公告，只有以下身份可以删除
     * 1、主管理员
     * 2、公告子管理员并且是待删除公告创建者
     * @param DeleteOapiBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiBlackboardResponse
     */
    public function deleteOapiBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiBlackboardResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据公告id修改企业公告，只有以下身份可以修改：
     * 1、主管理员
     * 2、公告子管理员并且是待修改公告的创建者
     * @param UpdateOapiBlackboardRequest $request
     * @return UpdateOapiBlackboardResponse
     */
    public function updateOapiBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiBlackboardEx($request, $runtime);
    }

    /**
     * Description: 根据公告id修改企业公告，只有以下身份可以修改：
     * 1、主管理员
     * 2、公告子管理员并且是待修改公告的创建者
     * @param UpdateOapiBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiBlackboardResponse
     */
    public function updateOapiBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiBlackboardResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 管理员可以通过该接口创建钉钉企业公告
     * @param CreateOapiBlackboardRequest $request
     * @return CreateOapiBlackboardResponse
     */
    public function createOapiBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiBlackboardEx($request, $runtime);
    }

    /**
     * Description: 管理员可以通过该接口创建钉钉企业公告
     * @param CreateOapiBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiBlackboardResponse
     */
    public function createOapiBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiBlackboardResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 通过接口可以获取到企业未删除的钉钉公告id列表
     * @param ListidsOapiBlackboardRequest $request
     * @return ListidsOapiBlackboardResponse
     */
    public function listidsOapiBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->listidsOapiBlackboardEx($request, $runtime);
    }

    /**
     * Description: 通过接口可以获取到企业未删除的钉钉公告id列表
     * @param ListidsOapiBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return ListidsOapiBlackboardResponse
     */
    public function listidsOapiBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListidsOapiBlackboardResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/listids", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新外部联系人
     * @param UpdateCorpExtRequest $request
     * @return UpdateCorpExtResponse
     */
    public function updateCorpExt($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateCorpExtEx($request, $runtime);
    }

    /**
     * Description: 更新外部联系人
     * @param UpdateCorpExtRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateCorpExtResponse
     */
    public function updateCorpExtEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateCorpExtResponse::fromMap($this->doRequest("dingtalk.corp.ext.update", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据公告ID获取企业未删除公告详情，只有以下身份可以查看：
     * 1、保密公告
     *      1.1 公告管理员
     *      1.2 公告的接收人
     * 2、非保密公告
     *      2.1 企业内的人都可见
     * @param GetOapiBlackboardRequest $request
     * @return GetOapiBlackboardResponse
     */
    public function getOapiBlackboard($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiBlackboardEx($request, $runtime);
    }

    /**
     * Description: 根据公告ID获取企业未删除公告详情，只有以下身份可以查看：
     * 1、保密公告
     *      1.1 公告管理员
     *      1.2 公告的接收人
     * 2、非保密公告
     *      2.1 企业内的人都可见
     * @param GetOapiBlackboardRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiBlackboardResponse
     */
    public function getOapiBlackboardEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiBlackboardResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉企业用户查询被授予的勋章
     * @param QueryOapiMedalCorpmedalRequest $request
     * @return QueryOapiMedalCorpmedalResponse
     */
    public function queryOapiMedalCorpmedal($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiMedalCorpmedalEx($request, $runtime);
    }

    /**
     * Description: 钉钉企业用户查询被授予的勋章
     * @param QueryOapiMedalCorpmedalRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiMedalCorpmedalResponse
     */
    public function queryOapiMedalCorpmedalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiMedalCorpmedalResponse::fromMap($this->doRequestOApi("POST", "/topapi/medal/corpmedal/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改服务群入群文案时间
     * @param UpdateservicetimeOapiCcoserviceServicegroupRequest $request
     * @return UpdateservicetimeOapiCcoserviceServicegroupResponse
     */
    public function updateservicetimeOapiCcoserviceServicegroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateservicetimeOapiCcoserviceServicegroupEx($request, $runtime);
    }

    /**
     * Description: 修改服务群入群文案时间
     * @param UpdateservicetimeOapiCcoserviceServicegroupRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateservicetimeOapiCcoserviceServicegroupResponse
     */
    public function updateservicetimeOapiCcoserviceServicegroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateservicetimeOapiCcoserviceServicegroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/ccoservice/servicegroup/updateservicetime", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 搜索企业审批单数据
     * @param SearchOapiAlitripBtripApplyRequest $request
     * @return SearchOapiAlitripBtripApplyResponse
     */
    public function searchOapiAlitripBtripApply($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAlitripBtripApplyEx($request, $runtime);
    }

    /**
     * Description: 搜索企业审批单数据
     * @param SearchOapiAlitripBtripApplyRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAlitripBtripApplyResponse
     */
    public function searchOapiAlitripBtripApplyEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAlitripBtripApplyResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/apply/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取单个申请单的详情数据
     * @param GetOapiAlitripBtripApplyRequest $request
     * @return GetOapiAlitripBtripApplyResponse
     */
    public function getOapiAlitripBtripApply($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiAlitripBtripApplyEx($request, $runtime);
    }

    /**
     * Description: 获取单个申请单的详情数据
     * @param GetOapiAlitripBtripApplyRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiAlitripBtripApplyResponse
     */
    public function getOapiAlitripBtripApplyEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiAlitripBtripApplyResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/apply/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业的临时联系方式
     * @param BetaOapiCateringCoopcontactGetRequest $request
     * @return BetaOapiCateringCoopcontactGetResponse
     */
    public function betaOapiCateringCoopcontactGet($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringCoopcontactGetEx($request, $runtime);
    }

    /**
     * Description: 获取企业的临时联系方式
     * @param BetaOapiCateringCoopcontactGetRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringCoopcontactGetResponse
     */
    public function betaOapiCateringCoopcontactGetEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringCoopcontactGetResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/coopcontact/get/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 授权预览审批附件
     * @param PreviewOapiProcessinstanceCspaceRequest $request
     * @return PreviewOapiProcessinstanceCspaceResponse
     */
    public function previewOapiProcessinstanceCspace($request){
        $runtime = new RuntimeOptions([]);
        return $this->previewOapiProcessinstanceCspaceEx($request, $runtime);
    }

    /**
     * Description: 授权预览审批附件
     * @param PreviewOapiProcessinstanceCspaceRequest $request
     * @param RuntimeOptions $runtime
     * @return PreviewOapiProcessinstanceCspaceResponse
     */
    public function previewOapiProcessinstanceCspaceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PreviewOapiProcessinstanceCspaceResponse::fromMap($this->doRequestOApi("POST", "/topapi/processinstance/cspace/preview", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: test
     * @param Sync_activityOapiSnsRequest $request
     * @return Sync_activityOapiSnsResponse
     */
    public function sync_activityOapiSns($request){
        $runtime = new RuntimeOptions([]);
        return $this->sync_activityOapiSnsEx($request, $runtime);
    }

    /**
     * Description: test
     * @param Sync_activityOapiSnsRequest $request
     * @param RuntimeOptions $runtime
     * @return Sync_activityOapiSnsResponse
     */
    public function sync_activityOapiSnsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return Sync_activityOapiSnsResponse::fromMap($this->doRequestOApi("POST", "/sns/sync_activity", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 商旅成本中心转换为外部成本中心
     * @param TransferOapiAlitripBtripCostCenterRequest $request
     * @return TransferOapiAlitripBtripCostCenterResponse
     */
    public function transferOapiAlitripBtripCostCenter($request){
        $runtime = new RuntimeOptions([]);
        return $this->transferOapiAlitripBtripCostCenterEx($request, $runtime);
    }

    /**
     * Description: 商旅成本中心转换为外部成本中心
     * @param TransferOapiAlitripBtripCostCenterRequest $request
     * @param RuntimeOptions $runtime
     * @return TransferOapiAlitripBtripCostCenterResponse
     */
    public function transferOapiAlitripBtripCostCenterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TransferOapiAlitripBtripCostCenterResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/transfer", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 差旅申请用户搜索可用发票列表
     * @param SearchOapiAlitripBtripInvoiceRequest $request
     * @return SearchOapiAlitripBtripInvoiceResponse
     */
    public function searchOapiAlitripBtripInvoice($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAlitripBtripInvoiceEx($request, $runtime);
    }

    /**
     * Description: 差旅申请用户搜索可用发票列表
     * @param SearchOapiAlitripBtripInvoiceRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAlitripBtripInvoiceResponse
     */
    public function searchOapiAlitripBtripInvoiceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAlitripBtripInvoiceResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/invoice/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业机票订单数据
     * @param SearchOapiAlitripBtripFlightOrderRequest $request
     * @return SearchOapiAlitripBtripFlightOrderResponse
     */
    public function searchOapiAlitripBtripFlightOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAlitripBtripFlightOrderEx($request, $runtime);
    }

    /**
     * Description: 获取企业机票订单数据
     * @param SearchOapiAlitripBtripFlightOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAlitripBtripFlightOrderResponse
     */
    public function searchOapiAlitripBtripFlightOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAlitripBtripFlightOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/flight/order/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业公告未删除分类列表
     * @param ListOapiBlackboardCategoryRequest $request
     * @return ListOapiBlackboardCategoryResponse
     */
    public function listOapiBlackboardCategory($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiBlackboardCategoryEx($request, $runtime);
    }

    /**
     * Description: 获取企业公告未删除分类列表
     * @param ListOapiBlackboardCategoryRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiBlackboardCategoryResponse
     */
    public function listOapiBlackboardCategoryEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiBlackboardCategoryResponse::fromMap($this->doRequestOApi("POST", "/topapi/blackboard/category/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业火车票订单数据
     * @param SearchOapiAlitripBtripTrainOrderRequest $request
     * @return SearchOapiAlitripBtripTrainOrderResponse
     */
    public function searchOapiAlitripBtripTrainOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAlitripBtripTrainOrderEx($request, $runtime);
    }

    /**
     * Description: 获取企业火车票订单数据
     * @param SearchOapiAlitripBtripTrainOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAlitripBtripTrainOrderResponse
     */
    public function searchOapiAlitripBtripTrainOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAlitripBtripTrainOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/train/order/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 给淘宝服务群提供创建群公告的能力。
     * @param CreateOapiImChatServicegroupNoticeRequest $request
     * @return CreateOapiImChatServicegroupNoticeResponse
     */
    public function createOapiImChatServicegroupNotice($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiImChatServicegroupNoticeEx($request, $runtime);
    }

    /**
     * Description: 给淘宝服务群提供创建群公告的能力。
     * @param CreateOapiImChatServicegroupNoticeRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiImChatServicegroupNoticeResponse
     */
    public function createOapiImChatServicegroupNoticeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiImChatServicegroupNoticeResponse::fromMap($this->doRequestOApi("POST", "/topapi/im/chat/servicegroup/notice/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 增加成本中心人员信息
     * @param AddOapiAlitripBtripCostCenterEntityRequest $request
     * @return AddOapiAlitripBtripCostCenterEntityResponse
     */
    public function addOapiAlitripBtripCostCenterEntity($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAlitripBtripCostCenterEntityEx($request, $runtime);
    }

    /**
     * Description: 增加成本中心人员信息
     * @param AddOapiAlitripBtripCostCenterEntityRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAlitripBtripCostCenterEntityResponse
     */
    public function addOapiAlitripBtripCostCenterEntityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAlitripBtripCostCenterEntityResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/entity/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业获取商旅酒店订单数据
     * @param SearchOapiAlitripBtripHotelOrderRequest $request
     * @return SearchOapiAlitripBtripHotelOrderResponse
     */
    public function searchOapiAlitripBtripHotelOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAlitripBtripHotelOrderEx($request, $runtime);
    }

    /**
     * Description: 企业获取商旅酒店订单数据
     * @param SearchOapiAlitripBtripHotelOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAlitripBtripHotelOrderResponse
     */
    public function searchOapiAlitripBtripHotelOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAlitripBtripHotelOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/hotel/order/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 对会话进行打标，打标之后，根据另外的配置，可以让客户端使用weex展示会话，而不是native展示
     * @param UpdateOapiCustomizeConversationRequest $request
     * @return UpdateOapiCustomizeConversationResponse
     */
    public function updateOapiCustomizeConversation($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiCustomizeConversationEx($request, $runtime);
    }

    /**
     * Description: 对会话进行打标，打标之后，根据另外的配置，可以让客户端使用weex展示会话，而不是native展示
     * @param UpdateOapiCustomizeConversationRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiCustomizeConversationResponse
     */
    public function updateOapiCustomizeConversationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiCustomizeConversationResponse::fromMap($this->doRequestOApi("POST", "/topapi/customize/conversation/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 之前的接口是通过以前圈子项目的身份来加人，/workspace/corp/member/add接口是以归属企业或运营主体的身份，从其中选取成员向圈子和项目中添加人，圈子和项目必须归属于当前归属企业或从属于运营主体
     * @param AddOapiWorkspaceCorpMemberRequest $request
     * @return AddOapiWorkspaceCorpMemberResponse
     */
    public function addOapiWorkspaceCorpMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiWorkspaceCorpMemberEx($request, $runtime);
    }

    /**
     * Description: 之前的接口是通过以前圈子项目的身份来加人，/workspace/corp/member/add接口是以归属企业或运营主体的身份，从其中选取成员向圈子和项目中添加人，圈子和项目必须归属于当前归属企业或从属于运营主体
     * @param AddOapiWorkspaceCorpMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiWorkspaceCorpMemberResponse
     */
    public function addOapiWorkspaceCorpMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiWorkspaceCorpMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/corp/member/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 以归属企业或运营主体的身份向 从属于当前组织的圈子、项目组织进行群绑定，绑群成功后，会建立群成员到圈子项目组织的单向同步
     * @param BindOapiWorkspaceCorpGroupRequest $request
     * @return BindOapiWorkspaceCorpGroupResponse
     */
    public function bindOapiWorkspaceCorpGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->bindOapiWorkspaceCorpGroupEx($request, $runtime);
    }

    /**
     * Description: 以归属企业或运营主体的身份向 从属于当前组织的圈子、项目组织进行群绑定，绑群成功后，会建立群成员到圈子项目组织的单向同步
     * @param BindOapiWorkspaceCorpGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return BindOapiWorkspaceCorpGroupResponse
     */
    public function bindOapiWorkspaceCorpGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BindOapiWorkspaceCorpGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/corp/group/bind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 以归属企业或运营主体身份对从属于该组织的项目或圈子实施群解绑，群必须是当前组织的内部群
     * @param UnbindOapiWorkspaceCorpGroupRequest $request
     * @return UnbindOapiWorkspaceCorpGroupResponse
     */
    public function unbindOapiWorkspaceCorpGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->unbindOapiWorkspaceCorpGroupEx($request, $runtime);
    }

    /**
     * Description: 以归属企业或运营主体身份对从属于该组织的项目或圈子实施群解绑，群必须是当前组织的内部群
     * @param UnbindOapiWorkspaceCorpGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return UnbindOapiWorkspaceCorpGroupResponse
     */
    public function unbindOapiWorkspaceCorpGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnbindOapiWorkspaceCorpGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/corp/group/unbind", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 以归属企业或运营主体的身份来删除从属于它的小圈和项目的成员，会校验当前组织和操作的小圈和项目的关系，暂不支持删除管理员
     * @param RemoveOapiWorkspaceCorpMemberRequest $request
     * @return RemoveOapiWorkspaceCorpMemberResponse
     */
    public function removeOapiWorkspaceCorpMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiWorkspaceCorpMemberEx($request, $runtime);
    }

    /**
     * Description: 以归属企业或运营主体的身份来删除从属于它的小圈和项目的成员，会校验当前组织和操作的小圈和项目的关系，暂不支持删除管理员
     * @param RemoveOapiWorkspaceCorpMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiWorkspaceCorpMemberResponse
     */
    public function removeOapiWorkspaceCorpMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiWorkspaceCorpMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/workspace/corp/member/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除项目成员
     * @param RemoveOapiTdpProjectMemberRequest $request
     * @return RemoveOapiTdpProjectMemberResponse
     */
    public function removeOapiTdpProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->removeOapiTdpProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 删除项目成员
     * @param RemoveOapiTdpProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return RemoveOapiTdpProjectMemberResponse
     */
    public function removeOapiTdpProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemoveOapiTdpProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/member/remove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新任务基础信息
     * @param UpdateOapiTdpTaskBasicRequest $request
     * @return UpdateOapiTdpTaskBasicResponse
     */
    public function updateOapiTdpTaskBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiTdpTaskBasicEx($request, $runtime);
    }

    /**
     * Description: 更新任务基础信息
     * @param UpdateOapiTdpTaskBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiTdpTaskBasicResponse
     */
    public function updateOapiTdpTaskBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiTdpTaskBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/task/basic/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 互动服务窗消息撤回接口
     * @param RecallOapiMessageMassRequest $request
     * @return RecallOapiMessageMassResponse
     */
    public function recallOapiMessageMass($request){
        $runtime = new RuntimeOptions([]);
        return $this->recallOapiMessageMassEx($request, $runtime);
    }

    /**
     * Description: 互动服务窗消息撤回接口
     * @param RecallOapiMessageMassRequest $request
     * @param RuntimeOptions $runtime
     * @return RecallOapiMessageMassResponse
     */
    public function recallOapiMessageMassEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RecallOapiMessageMassResponse::fromMap($this->doRequestOApi("POST", "/topapi/message/mass/recall", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据ID删除项目
     * @param DeleteOapiTdpProjectBasicRequest $request
     * @return DeleteOapiTdpProjectBasicResponse
     */
    public function deleteOapiTdpProjectBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiTdpProjectBasicEx($request, $runtime);
    }

    /**
     * Description: 根据ID删除项目
     * @param DeleteOapiTdpProjectBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiTdpProjectBasicResponse
     */
    public function deleteOapiTdpProjectBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiTdpProjectBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/basic/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据id查询项目详情
     * @param GetOapiTdpProjectBasicRequest $request
     * @return GetOapiTdpProjectBasicResponse
     */
    public function getOapiTdpProjectBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiTdpProjectBasicEx($request, $runtime);
    }

    /**
     * Description: 根据id查询项目详情
     * @param GetOapiTdpProjectBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiTdpProjectBasicResponse
     */
    public function getOapiTdpProjectBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiTdpProjectBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/basic/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据ID删除任务
     * @param DeleteOapiTdpTaskBasicRequest $request
     * @return DeleteOapiTdpTaskBasicResponse
     */
    public function deleteOapiTdpTaskBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiTdpTaskBasicEx($request, $runtime);
    }

    /**
     * Description: 根据ID删除任务
     * @param DeleteOapiTdpTaskBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiTdpTaskBasicResponse
     */
    public function deleteOapiTdpTaskBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiTdpTaskBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/task/basic/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 智能人事联合导出，ISV提供业务excel并制定需要填补的数据，由智能人事填补后，直接对用户提供下载服务。
     * @param UnionexportOapiSmartworkHrmEmployeeRequest $request
     * @return UnionexportOapiSmartworkHrmEmployeeResponse
     */
    public function unionexportOapiSmartworkHrmEmployee($request){
        $runtime = new RuntimeOptions([]);
        return $this->unionexportOapiSmartworkHrmEmployeeEx($request, $runtime);
    }

    /**
     * Description: 智能人事联合导出，ISV提供业务excel并制定需要填补的数据，由智能人事填补后，直接对用户提供下载服务。
     * @param UnionexportOapiSmartworkHrmEmployeeRequest $request
     * @param RuntimeOptions $runtime
     * @return UnionexportOapiSmartworkHrmEmployeeResponse
     */
    public function unionexportOapiSmartworkHrmEmployeeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnionexportOapiSmartworkHrmEmployeeResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/unionexport", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新项目信息
     * @param UpdateOapiTdpProjectBasicRequest $request
     * @return UpdateOapiTdpProjectBasicResponse
     */
    public function updateOapiTdpProjectBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiTdpProjectBasicEx($request, $runtime);
    }

    /**
     * Description: 更新项目信息
     * @param UpdateOapiTdpProjectBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiTdpProjectBasicResponse
     */
    public function updateOapiTdpProjectBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiTdpProjectBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/basic/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增项目信息
     * @param CreateOapiTdpProjectBasicRequest $request
     * @return CreateOapiTdpProjectBasicResponse
     */
    public function createOapiTdpProjectBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiTdpProjectBasicEx($request, $runtime);
    }

    /**
     * Description: 新增项目信息
     * @param CreateOapiTdpProjectBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiTdpProjectBasicResponse
     */
    public function createOapiTdpProjectBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiTdpProjectBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/basic/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 按照项目批量删除任务信息
     * @param DeletebyprojectOapiTdpTaskBasicRequest $request
     * @return DeletebyprojectOapiTdpTaskBasicResponse
     */
    public function deletebyprojectOapiTdpTaskBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->deletebyprojectOapiTdpTaskBasicEx($request, $runtime);
    }

    /**
     * Description: 按照项目批量删除任务信息
     * @param DeletebyprojectOapiTdpTaskBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return DeletebyprojectOapiTdpTaskBasicResponse
     */
    public function deletebyprojectOapiTdpTaskBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeletebyprojectOapiTdpTaskBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/task/basic/deletebyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增项目成员
     * @param AddOapiTdpProjectMemberRequest $request
     * @return AddOapiTdpProjectMemberResponse
     */
    public function addOapiTdpProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiTdpProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 新增项目成员
     * @param AddOapiTdpProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiTdpProjectMemberResponse
     */
    public function addOapiTdpProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiTdpProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/member/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量新增项目成员
     * @param BatchaddOapiTdpProjectMemberRequest $request
     * @return BatchaddOapiTdpProjectMemberResponse
     */
    public function batchaddOapiTdpProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchaddOapiTdpProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 批量新增项目成员
     * @param BatchaddOapiTdpProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchaddOapiTdpProjectMemberResponse
     */
    public function batchaddOapiTdpProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchaddOapiTdpProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/member/batchadd", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量删除项目成员
     * @param BatchremoveOapiTdpProjectMemberRequest $request
     * @return BatchremoveOapiTdpProjectMemberResponse
     */
    public function batchremoveOapiTdpProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->batchremoveOapiTdpProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 批量删除项目成员
     * @param BatchremoveOapiTdpProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return BatchremoveOapiTdpProjectMemberResponse
     */
    public function batchremoveOapiTdpProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BatchremoveOapiTdpProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/member/batchremove", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量拉取项目成员
     * @param GetbyprojectOapiTdpProjectMemberRequest $request
     * @return GetbyprojectOapiTdpProjectMemberResponse
     */
    public function getbyprojectOapiTdpProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->getbyprojectOapiTdpProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 批量拉取项目成员
     * @param GetbyprojectOapiTdpProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return GetbyprojectOapiTdpProjectMemberResponse
     */
    public function getbyprojectOapiTdpProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetbyprojectOapiTdpProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/member/getbyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新增基础任务信息
     * @param CreateOapiTdpTaskBasicRequest $request
     * @return CreateOapiTdpTaskBasicResponse
     */
    public function createOapiTdpTaskBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->createOapiTdpTaskBasicEx($request, $runtime);
    }

    /**
     * Description: 新增基础任务信息
     * @param CreateOapiTdpTaskBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return CreateOapiTdpTaskBasicResponse
     */
    public function createOapiTdpTaskBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return CreateOapiTdpTaskBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/task/basic/create", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 大客户视频会议统计数据查询V2版（较V1新增“发起会议总时长”统计项）
     * @param GetOapiKacV2DatavVideoconfRequest $request
     * @return GetOapiKacV2DatavVideoconfResponse
     */
    public function getOapiKacV2DatavVideoconf($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiKacV2DatavVideoconfEx($request, $runtime);
    }

    /**
     * Description: 大客户视频会议统计数据查询V2版（较V1新增“发起会议总时长”统计项）
     * @param GetOapiKacV2DatavVideoconfRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiKacV2DatavVideoconfResponse
     */
    public function getOapiKacV2DatavVideoconfEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiKacV2DatavVideoconfResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/v2/datav/videoconf/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 设置成本中心人员信息
     * @param SetOapiAlitripBtripCostCenterEntityRequest $request
     * @return SetOapiAlitripBtripCostCenterEntityResponse
     */
    public function setOapiAlitripBtripCostCenterEntity($request){
        $runtime = new RuntimeOptions([]);
        return $this->setOapiAlitripBtripCostCenterEntityEx($request, $runtime);
    }

    /**
     * Description: 设置成本中心人员信息
     * @param SetOapiAlitripBtripCostCenterEntityRequest $request
     * @param RuntimeOptions $runtime
     * @return SetOapiAlitripBtripCostCenterEntityResponse
     */
    public function setOapiAlitripBtripCostCenterEntityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SetOapiAlitripBtripCostCenterEntityResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/entity/set", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据项目批量删除项目成员
     * @param RemovebyprojectOapiTdpProjectMemberRequest $request
     * @return RemovebyprojectOapiTdpProjectMemberResponse
     */
    public function removebyprojectOapiTdpProjectMember($request){
        $runtime = new RuntimeOptions([]);
        return $this->removebyprojectOapiTdpProjectMemberEx($request, $runtime);
    }

    /**
     * Description: 根据项目批量删除项目成员
     * @param RemovebyprojectOapiTdpProjectMemberRequest $request
     * @param RuntimeOptions $runtime
     * @return RemovebyprojectOapiTdpProjectMemberResponse
     */
    public function removebyprojectOapiTdpProjectMemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return RemovebyprojectOapiTdpProjectMemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/project/member/removebyproject", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 删除成本中心
     * @param DeleteOapiAlitripBtripCostCenterRequest $request
     * @return DeleteOapiAlitripBtripCostCenterResponse
     */
    public function deleteOapiAlitripBtripCostCenter($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiAlitripBtripCostCenterEx($request, $runtime);
    }

    /**
     * Description: 删除成本中心
     * @param DeleteOapiAlitripBtripCostCenterRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiAlitripBtripCostCenterResponse
     */
    public function deleteOapiAlitripBtripCostCenterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiAlitripBtripCostCenterResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据id查询任务详情
     * @param GetOapiTdpTaskBasicRequest $request
     * @return GetOapiTdpTaskBasicResponse
     */
    public function getOapiTdpTaskBasic($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiTdpTaskBasicEx($request, $runtime);
    }

    /**
     * Description: 根据id查询任务详情
     * @param GetOapiTdpTaskBasicRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiTdpTaskBasicResponse
     */
    public function getOapiTdpTaskBasicEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiTdpTaskBasicResponse::fromMap($this->doRequestOApi("POST", "/topapi/tdp/task/basic/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改成本中心基本信息
     * @param ModifyOapiAlitripBtripCostCenterRequest $request
     * @return ModifyOapiAlitripBtripCostCenterResponse
     */
    public function modifyOapiAlitripBtripCostCenter($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifyOapiAlitripBtripCostCenterEx($request, $runtime);
    }

    /**
     * Description: 修改成本中心基本信息
     * @param ModifyOapiAlitripBtripCostCenterRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifyOapiAlitripBtripCostCenterResponse
     */
    public function modifyOapiAlitripBtripCostCenterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifyOapiAlitripBtripCostCenterResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/modify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据姓名和工号搜索企业员工
     * @param BaseinfoCorpSearchCorpcontactRequest $request
     * @return BaseinfoCorpSearchCorpcontactResponse
     */
    public function baseinfoCorpSearchCorpcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->baseinfoCorpSearchCorpcontactEx($request, $runtime);
    }

    /**
     * Description: 根据姓名和工号搜索企业员工
     * @param BaseinfoCorpSearchCorpcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return BaseinfoCorpSearchCorpcontactResponse
     */
    public function baseinfoCorpSearchCorpcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BaseinfoCorpSearchCorpcontactResponse::fromMap($this->doRequest("dingtalk.corp.search.corpcontact.baseinfo", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 新建成本中心
     * @param NewOapiAlitripBtripCostCenterRequest $request
     * @return NewOapiAlitripBtripCostCenterResponse
     */
    public function newOapiAlitripBtripCostCenter($request){
        $runtime = new RuntimeOptions([]);
        return $this->newOapiAlitripBtripCostCenterEx($request, $runtime);
    }

    /**
     * Description: 新建成本中心
     * @param NewOapiAlitripBtripCostCenterRequest $request
     * @param RuntimeOptions $runtime
     * @return NewOapiAlitripBtripCostCenterResponse
     */
    public function newOapiAlitripBtripCostCenterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return NewOapiAlitripBtripCostCenterResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/new", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询开放平台回调失败记录，提供此接口用于确认消费
     * @param ConfirmOapiCallbackFailrecordRequest $request
     * @return ConfirmOapiCallbackFailrecordResponse
     */
    public function confirmOapiCallbackFailrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->confirmOapiCallbackFailrecordEx($request, $runtime);
    }

    /**
     * Description: 查询开放平台回调失败记录，提供此接口用于确认消费
     * @param ConfirmOapiCallbackFailrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return ConfirmOapiCallbackFailrecordResponse
     */
    public function confirmOapiCallbackFailrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ConfirmOapiCallbackFailrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/callback/failrecord/confirm", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新审批单
     * @param UpdateOapiAlitripBtripApprovalRequest $request
     * @return UpdateOapiAlitripBtripApprovalResponse
     */
    public function updateOapiAlitripBtripApproval($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiAlitripBtripApprovalEx($request, $runtime);
    }

    /**
     * Description: 更新审批单
     * @param UpdateOapiAlitripBtripApprovalRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiAlitripBtripApprovalResponse
     */
    public function updateOapiAlitripBtripApprovalEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiAlitripBtripApprovalResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/approval/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 提供给isv用于查询http回调失败记录，做补偿
     * @param ListOapiCallbackFailrecordRequest $request
     * @return ListOapiCallbackFailrecordResponse
     */
    public function listOapiCallbackFailrecord($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiCallbackFailrecordEx($request, $runtime);
    }

    /**
     * Description: 提供给isv用于查询http回调失败记录，做补偿
     * @param ListOapiCallbackFailrecordRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiCallbackFailrecordResponse
     */
    public function listOapiCallbackFailrecordEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiCallbackFailrecordResponse::fromMap($this->doRequestOApi("POST", "/topapi/callback/failrecord/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询成本中心
     * @param QueryOapiAlitripBtripCostCenterRequest $request
     * @return QueryOapiAlitripBtripCostCenterResponse
     */
    public function queryOapiAlitripBtripCostCenter($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiAlitripBtripCostCenterEx($request, $runtime);
    }

    /**
     * Description: 查询成本中心
     * @param QueryOapiAlitripBtripCostCenterRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiAlitripBtripCostCenterResponse
     */
    public function queryOapiAlitripBtripCostCenterEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiAlitripBtripCostCenterResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/cost/center/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业群群成员接口
     * @param ListmemberCorpConversationCorpconversionRequest $request
     * @return ListmemberCorpConversationCorpconversionResponse
     */
    public function listmemberCorpConversationCorpconversion($request){
        $runtime = new RuntimeOptions([]);
        return $this->listmemberCorpConversationCorpconversionEx($request, $runtime);
    }

    /**
     * Description: 获取企业群群成员接口
     * @param ListmemberCorpConversationCorpconversionRequest $request
     * @param RuntimeOptions $runtime
     * @return ListmemberCorpConversationCorpconversionResponse
     */
    public function listmemberCorpConversationCorpconversionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListmemberCorpConversationCorpconversionResponse::fromMap($this->doRequest("dingtalk.corp.conversation.corpconversion.listmember", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改群成员列表，支持成员增删。
     * @param ModifyOapiImpaasGroupmemberRequest $request
     * @return ModifyOapiImpaasGroupmemberResponse
     */
    public function modifyOapiImpaasGroupmember($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifyOapiImpaasGroupmemberEx($request, $runtime);
    }

    /**
     * Description: 修改群成员列表，支持成员增删。
     * @param ModifyOapiImpaasGroupmemberRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifyOapiImpaasGroupmemberResponse
     */
    public function modifyOapiImpaasGroupmemberEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifyOapiImpaasGroupmemberResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/groupmember/modify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 更新员工离职信息
     * @param UpdateOapiSmartworkHrmEmployeeDismissionRequest $request
     * @return UpdateOapiSmartworkHrmEmployeeDismissionResponse
     */
    public function updateOapiSmartworkHrmEmployeeDismission($request){
        $runtime = new RuntimeOptions([]);
        return $this->updateOapiSmartworkHrmEmployeeDismissionEx($request, $runtime);
    }

    /**
     * Description: 更新员工离职信息
     * @param UpdateOapiSmartworkHrmEmployeeDismissionRequest $request
     * @param RuntimeOptions $runtime
     * @return UpdateOapiSmartworkHrmEmployeeDismissionResponse
     */
    public function updateOapiSmartworkHrmEmployeeDismissionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UpdateOapiSmartworkHrmEmployeeDismissionResponse::fromMap($this->doRequestOApi("POST", "/topapi/smartwork/hrm/employee/dismission/update", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业群基本信息接口
     * @param GetconversationCorpConversationCorpconversionRequest $request
     * @return GetconversationCorpConversationCorpconversionResponse
     */
    public function getconversationCorpConversationCorpconversion($request){
        $runtime = new RuntimeOptions([]);
        return $this->getconversationCorpConversationCorpconversionEx($request, $runtime);
    }

    /**
     * Description: 获取企业群基本信息接口
     * @param GetconversationCorpConversationCorpconversionRequest $request
     * @param RuntimeOptions $runtime
     * @return GetconversationCorpConversationCorpconversionResponse
     */
    public function getconversationCorpConversationCorpconversionEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetconversationCorpConversationCorpconversionResponse::fromMap($this->doRequest("dingtalk.corp.conversation.corpconversion.getconversation", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 修改群信息：群名称、群主等；
     * @param ModifyOapiImpaasGroupRequest $request
     * @return ModifyOapiImpaasGroupResponse
     */
    public function modifyOapiImpaasGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->modifyOapiImpaasGroupEx($request, $runtime);
    }

    /**
     * Description: 修改群信息：群名称、群主等；
     * @param ModifyOapiImpaasGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return ModifyOapiImpaasGroupResponse
     */
    public function modifyOapiImpaasGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ModifyOapiImpaasGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/group/modify", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询当前用户的数字化考试情况，是否获取了证书
     * @param GetOapiEduCertRequest $request
     * @return GetOapiEduCertResponse
     */
    public function getOapiEduCert($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiEduCertEx($request, $runtime);
    }

    /**
     * Description: 查询当前用户的数字化考试情况，是否获取了证书
     * @param GetOapiEduCertRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiEduCertResponse
     */
    public function getOapiEduCertEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiEduCertResponse::fromMap($this->doRequestOApi("POST", "/topapi/edu/cert/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量上传音、视频的内容到钉钉课堂
     * @param UploadOapiPlanetomFeedsRequest $request
     * @return UploadOapiPlanetomFeedsResponse
     */
    public function uploadOapiPlanetomFeeds($request){
        $runtime = new RuntimeOptions([]);
        return $this->uploadOapiPlanetomFeedsEx($request, $runtime);
    }

    /**
     * Description: 批量上传音、视频的内容到钉钉课堂
     * @param UploadOapiPlanetomFeedsRequest $request
     * @param RuntimeOptions $runtime
     * @return UploadOapiPlanetomFeedsResponse
     */
    public function uploadOapiPlanetomFeedsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UploadOapiPlanetomFeedsResponse::fromMap($this->doRequestOApi("POST", "/topapi/planetom/feeds/upload", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param BetaOapiCateringAllowanceOrderPushRequest $request
     * @return BetaOapiCateringAllowanceOrderPushResponse
     */
    public function betaOapiCateringAllowanceOrderPush($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringAllowanceOrderPushEx($request, $runtime);
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param BetaOapiCateringAllowanceOrderPushRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringAllowanceOrderPushResponse
     */
    public function betaOapiCateringAllowanceOrderPushEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringAllowanceOrderPushResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/order/push/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询开通餐补的企业用户是否具有餐补金额
     * @param BetaOapiCateringAllowanceCapacityGetRequest $request
     * @return BetaOapiCateringAllowanceCapacityGetResponse
     */
    public function betaOapiCateringAllowanceCapacityGet($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringAllowanceCapacityGetEx($request, $runtime);
    }

    /**
     * Description: 查询开通餐补的企业用户是否具有餐补金额
     * @param BetaOapiCateringAllowanceCapacityGetRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringAllowanceCapacityGetResponse
     */
    public function betaOapiCateringAllowanceCapacityGetEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringAllowanceCapacityGetResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/capacity/get/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查看订单是否已经预抵扣金额
     * @param BetaOapiCateringAllowancePredeductRequest $request
     * @return BetaOapiCateringAllowancePredeductResponse
     */
    public function betaOapiCateringAllowancePrededuct($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringAllowancePredeductEx($request, $runtime);
    }

    /**
     * Description: 查看订单是否已经预抵扣金额
     * @param BetaOapiCateringAllowancePredeductRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringAllowancePredeductResponse
     */
    public function betaOapiCateringAllowancePredeductEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringAllowancePredeductResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/prededuct/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 批量上传音、视频的任务结果查询
     * @param TaskinfoOapiPlanetomFeedsRequest $request
     * @return TaskinfoOapiPlanetomFeedsResponse
     */
    public function taskinfoOapiPlanetomFeeds($request){
        $runtime = new RuntimeOptions([]);
        return $this->taskinfoOapiPlanetomFeedsEx($request, $runtime);
    }

    /**
     * Description: 批量上传音、视频的任务结果查询
     * @param TaskinfoOapiPlanetomFeedsRequest $request
     * @param RuntimeOptions $runtime
     * @return TaskinfoOapiPlanetomFeedsResponse
     */
    public function taskinfoOapiPlanetomFeedsEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return TaskinfoOapiPlanetomFeedsResponse::fromMap($this->doRequestOApi("POST", "/topapi/planetom/feeds/taskinfo", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 退单或者取消订单时，释放已经抵扣的餐补金额
     * @param BetaOapiCateringAllowanceUnfreezeRequest $request
     * @return BetaOapiCateringAllowanceUnfreezeResponse
     */
    public function betaOapiCateringAllowanceUnfreeze($request){
        $runtime = new RuntimeOptions([]);
        return $this->betaOapiCateringAllowanceUnfreezeEx($request, $runtime);
    }

    /**
     * Description: 退单或者取消订单时，释放已经抵扣的餐补金额
     * @param BetaOapiCateringAllowanceUnfreezeRequest $request
     * @param RuntimeOptions $runtime
     * @return BetaOapiCateringAllowanceUnfreezeResponse
     */
    public function betaOapiCateringAllowanceUnfreezeEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return BetaOapiCateringAllowanceUnfreezeResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/unfreeze/beta", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 用车订单查询接口
     * @param SearchOapiAlitripBtripVehicleOrderRequest $request
     * @return SearchOapiAlitripBtripVehicleOrderResponse
     */
    public function searchOapiAlitripBtripVehicleOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->searchOapiAlitripBtripVehicleOrderEx($request, $runtime);
    }

    /**
     * Description: 用车订单查询接口
     * @param SearchOapiAlitripBtripVehicleOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return SearchOapiAlitripBtripVehicleOrderResponse
     */
    public function searchOapiAlitripBtripVehicleOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SearchOapiAlitripBtripVehicleOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/vehicle/order/search", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 退单或者取消订单时，释放已经抵扣的餐补金额
     * @param UnfreezeOapiCateringAllowanceRequest $request
     * @return UnfreezeOapiCateringAllowanceResponse
     */
    public function unfreezeOapiCateringAllowance($request){
        $runtime = new RuntimeOptions([]);
        return $this->unfreezeOapiCateringAllowanceEx($request, $runtime);
    }

    /**
     * Description: 退单或者取消订单时，释放已经抵扣的餐补金额
     * @param UnfreezeOapiCateringAllowanceRequest $request
     * @param RuntimeOptions $runtime
     * @return UnfreezeOapiCateringAllowanceResponse
     */
    public function unfreezeOapiCateringAllowanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return UnfreezeOapiCateringAllowanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/unfreeze", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 机票城市搜索
     * @param SuggestOapiAlitripBtripFlightCityRequest $request
     * @return SuggestOapiAlitripBtripFlightCityResponse
     */
    public function suggestOapiAlitripBtripFlightCity($request){
        $runtime = new RuntimeOptions([]);
        return $this->suggestOapiAlitripBtripFlightCityEx($request, $runtime);
    }

    /**
     * Description: 机票城市搜索
     * @param SuggestOapiAlitripBtripFlightCityRequest $request
     * @param RuntimeOptions $runtime
     * @return SuggestOapiAlitripBtripFlightCityResponse
     */
    public function suggestOapiAlitripBtripFlightCityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SuggestOapiAlitripBtripFlightCityResponse::fromMap($this->doRequestOApi("POST", "/topapi/alitrip/btrip/flight/city/suggest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查看订单是否已经预抵扣金额
     * @param PredeductOapiCateringAllowanceRequest $request
     * @return PredeductOapiCateringAllowanceResponse
     */
    public function predeductOapiCateringAllowance($request){
        $runtime = new RuntimeOptions([]);
        return $this->predeductOapiCateringAllowanceEx($request, $runtime);
    }

    /**
     * Description: 查看订单是否已经预抵扣金额
     * @param PredeductOapiCateringAllowanceRequest $request
     * @param RuntimeOptions $runtime
     * @return PredeductOapiCateringAllowanceResponse
     */
    public function predeductOapiCateringAllowanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PredeductOapiCateringAllowanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/prededuct", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 分页获取合作企业点餐设置列表
     * @param GetOapiCateringCooplistRequest $request
     * @return GetOapiCateringCooplistResponse
     */
    public function getOapiCateringCooplist($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCateringCooplistEx($request, $runtime);
    }

    /**
     * Description: 分页获取合作企业点餐设置列表
     * @param GetOapiCateringCooplistRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCateringCooplistResponse
     */
    public function getOapiCateringCooplistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCateringCooplistResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/cooplist/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询开通餐补的企业用户是否具有餐补金额
     * @param GetOapiCateringAllowanceCapacityRequest $request
     * @return GetOapiCateringAllowanceCapacityResponse
     */
    public function getOapiCateringAllowanceCapacity($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCateringAllowanceCapacityEx($request, $runtime);
    }

    /**
     * Description: 查询开通餐补的企业用户是否具有餐补金额
     * @param GetOapiCateringAllowanceCapacityRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCateringAllowanceCapacityResponse
     */
    public function getOapiCateringAllowanceCapacityEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCateringAllowanceCapacityResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/capacity/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param PushOapiCateringAllowanceOrderRequest $request
     * @return PushOapiCateringAllowanceOrderResponse
     */
    public function pushOapiCateringAllowanceOrder($request){
        $runtime = new RuntimeOptions([]);
        return $this->pushOapiCateringAllowanceOrderEx($request, $runtime);
    }

    /**
     * Description: 团餐ISV可通过该api上传餐饮商家的订单信息
     * @param PushOapiCateringAllowanceOrderRequest $request
     * @param RuntimeOptions $runtime
     * @return PushOapiCateringAllowanceOrderResponse
     */
    public function pushOapiCateringAllowanceOrderEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return PushOapiCateringAllowanceOrderResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/allowance/order/push", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取所有申请合作企业id列表
     * @param GetOapiCateringApplylistCorpidlistRequest $request
     * @return GetOapiCateringApplylistCorpidlistResponse
     */
    public function getOapiCateringApplylistCorpidlist($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCateringApplylistCorpidlistEx($request, $runtime);
    }

    /**
     * Description: 获取所有申请合作企业id列表
     * @param GetOapiCateringApplylistCorpidlistRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCateringApplylistCorpidlistResponse
     */
    public function getOapiCateringApplylistCorpidlistEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCateringApplylistCorpidlistResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/applylist/corpidlist/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 商户端处理合作关系
     * @param DealOapiCateringCoopRequest $request
     * @return DealOapiCateringCoopResponse
     */
    public function dealOapiCateringCoop($request){
        $runtime = new RuntimeOptions([]);
        return $this->dealOapiCateringCoopEx($request, $runtime);
    }

    /**
     * Description: 商户端处理合作关系
     * @param DealOapiCateringCoopRequest $request
     * @param RuntimeOptions $runtime
     * @return DealOapiCateringCoopResponse
     */
    public function dealOapiCateringCoopEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DealOapiCateringCoopResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/coop/deal", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取企业的临时联系方式
     * @param GetOapiCateringCoopcontactRequest $request
     * @return GetOapiCateringCoopcontactResponse
     */
    public function getOapiCateringCoopcontact($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCateringCoopcontactEx($request, $runtime);
    }

    /**
     * Description: 获取企业的临时联系方式
     * @param GetOapiCateringCoopcontactRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCateringCoopcontactResponse
     */
    public function getOapiCateringCoopcontactEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCateringCoopcontactResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/coopcontact/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 当前企业的点餐设置
     * @param GetOapiCateringMealconfigRequest $request
     * @return GetOapiCateringMealconfigResponse
     */
    public function getOapiCateringMealconfig($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiCateringMealconfigEx($request, $runtime);
    }

    /**
     * Description: 当前企业的点餐设置
     * @param GetOapiCateringMealconfigRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiCateringMealconfigResponse
     */
    public function getOapiCateringMealconfigEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiCateringMealconfigResponse::fromMap($this->doRequestOApi("POST", "/topapi/catering/mealconfig/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 创建/修改钉钉考勤班次
     * @param AddOapiAttendanceShiftRequest $request
     * @return AddOapiAttendanceShiftResponse
     */
    public function addOapiAttendanceShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAttendanceShiftEx($request, $runtime);
    }

    /**
     * Description: 创建/修改钉钉考勤班次
     * @param AddOapiAttendanceShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAttendanceShiftResponse
     */
    public function addOapiAttendanceShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAttendanceShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据id删除考勤班次
     * @param DeleteOapiAttendanceShiftRequest $request
     * @return DeleteOapiAttendanceShiftResponse
     */
    public function deleteOapiAttendanceShift($request){
        $runtime = new RuntimeOptions([]);
        return $this->deleteOapiAttendanceShiftEx($request, $runtime);
    }

    /**
     * Description: 根据id删除考勤班次
     * @param DeleteOapiAttendanceShiftRequest $request
     * @param RuntimeOptions $runtime
     * @return DeleteOapiAttendanceShiftResponse
     */
    public function deleteOapiAttendanceShiftEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return DeleteOapiAttendanceShiftResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/shift/delete", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤组写入接口
     * @param AddOapiAttendanceGroupRequest $request
     * @return AddOapiAttendanceGroupResponse
     */
    public function addOapiAttendanceGroup($request){
        $runtime = new RuntimeOptions([]);
        return $this->addOapiAttendanceGroupEx($request, $runtime);
    }

    /**
     * Description: 考勤组写入接口
     * @param AddOapiAttendanceGroupRequest $request
     * @param RuntimeOptions $runtime
     * @return AddOapiAttendanceGroupResponse
     */
    public function addOapiAttendanceGroupEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return AddOapiAttendanceGroupResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/group/add", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业机器人群聊消息发送结果查询
     * @param QueryOapiRobotMessageOrggrouptaskRequest $request
     * @return QueryOapiRobotMessageOrggrouptaskResponse
     */
    public function queryOapiRobotMessageOrggrouptask($request){
        $runtime = new RuntimeOptions([]);
        return $this->queryOapiRobotMessageOrggrouptaskEx($request, $runtime);
    }

    /**
     * Description: 企业机器人群聊消息发送结果查询
     * @param QueryOapiRobotMessageOrggrouptaskRequest $request
     * @param RuntimeOptions $runtime
     * @return QueryOapiRobotMessageOrggrouptaskResponse
     */
    public function queryOapiRobotMessageOrggrouptaskEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return QueryOapiRobotMessageOrggrouptaskResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/orggrouptask/query", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业每日电话会议的明细列表
     * @param ListOapiKacDatavTelconfDetailRequest $request
     * @return ListOapiKacDatavTelconfDetailResponse
     */
    public function listOapiKacDatavTelconfDetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavTelconfDetailEx($request, $runtime);
    }

    /**
     * Description: 查询企业每日电话会议的明细列表
     * @param ListOapiKacDatavTelconfDetailRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavTelconfDetailResponse
     */
    public function listOapiKacDatavTelconfDetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavTelconfDetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/telconf/detail/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 企业机器人推送群聊消息
     * @param SendorggroupOapiRobotMessageRequest $request
     * @return SendorggroupOapiRobotMessageResponse
     */
    public function sendorggroupOapiRobotMessage($request){
        $runtime = new RuntimeOptions([]);
        return $this->sendorggroupOapiRobotMessageEx($request, $runtime);
    }

    /**
     * Description: 企业机器人推送群聊消息
     * @param SendorggroupOapiRobotMessageRequest $request
     * @param RuntimeOptions $runtime
     * @return SendorggroupOapiRobotMessageResponse
     */
    public function sendorggroupOapiRobotMessageEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return SendorggroupOapiRobotMessageResponse::fromMap($this->doRequestOApi("POST", "/topapi/robot/message/sendorggroup", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉数据：查询大客户部门维度电话会议统计列表
     * @param ListOapiKacDatavDeptTelconfRequest $request
     * @return ListOapiKacDatavDeptTelconfResponse
     */
    public function listOapiKacDatavDeptTelconf($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavDeptTelconfEx($request, $runtime);
    }

    /**
     * Description: 钉钉数据：查询大客户部门维度电话会议统计列表
     * @param ListOapiKacDatavDeptTelconfRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavDeptTelconfResponse
     */
    public function listOapiKacDatavDeptTelconfEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavDeptTelconfResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/dept/telconf/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 钉钉数据：查询大客户部门维度视频会议统计列表
     * @param ListOapiKacDatavDeptVideoconfRequest $request
     * @return ListOapiKacDatavDeptVideoconfResponse
     */
    public function listOapiKacDatavDeptVideoconf($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavDeptVideoconfEx($request, $runtime);
    }

    /**
     * Description: 钉钉数据：查询大客户部门维度视频会议统计列表
     * @param ListOapiKacDatavDeptVideoconfRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavDeptVideoconfResponse
     */
    public function listOapiKacDatavDeptVideoconfEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavDeptVideoconfResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/dept/videoconf/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 查询企业每日视频会议的明细列表
     * @param ListOapiKacDatavVideoconfDetailRequest $request
     * @return ListOapiKacDatavVideoconfDetailResponse
     */
    public function listOapiKacDatavVideoconfDetail($request){
        $runtime = new RuntimeOptions([]);
        return $this->listOapiKacDatavVideoconfDetailEx($request, $runtime);
    }

    /**
     * Description: 查询企业每日视频会议的明细列表
     * @param ListOapiKacDatavVideoconfDetailRequest $request
     * @param RuntimeOptions $runtime
     * @return ListOapiKacDatavVideoconfDetailResponse
     */
    public function listOapiKacDatavVideoconfDetailEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListOapiKacDatavVideoconfDetailResponse::fromMap($this->doRequestOApi("POST", "/topapi/kac/datav/videoconf/detail/list", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 考勤智能报表是考勤为了满足企业个性化的统计需求而开发的一套智能的可编程的报表系统，企业可以通过简单勾选或者高级编程模式来定制自己的统计规则，通过智能报表可以非常方便地输出便于计算薪酬结果的统计数据。该接口可以通过企业corpId来判断企业是否开启了考勤智能报表。开启报表需要管理员登录OA后台切换到新报表即可
     * @param IsopensmartreportOapiAttendanceRequest $request
     * @return IsopensmartreportOapiAttendanceResponse
     */
    public function isopensmartreportOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->isopensmartreportOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 考勤智能报表是考勤为了满足企业个性化的统计需求而开发的一套智能的可编程的报表系统，企业可以通过简单勾选或者高级编程模式来定制自己的统计规则，通过智能报表可以非常方便地输出便于计算薪酬结果的统计数据。该接口可以通过企业corpId来判断企业是否开启了考勤智能报表。开启报表需要管理员登录OA后台切换到新报表即可
     * @param IsopensmartreportOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return IsopensmartreportOapiAttendanceResponse
     */
    public function isopensmartreportOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return IsopensmartreportOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/isopensmartreport", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口用于获取企业智能考勤报表中的列信息，通过获取列信息中的id值，ISV可以根据列的id查询考勤智能报表中该列的统计数据
     * @param GetattcolumnsOapiAttendanceRequest $request
     * @return GetattcolumnsOapiAttendanceResponse
     */
    public function getattcolumnsOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getattcolumnsOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 该接口用于获取企业智能考勤报表中的列信息，通过获取列信息中的id值，ISV可以根据列的id查询考勤智能报表中该列的统计数据
     * @param GetattcolumnsOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetattcolumnsOapiAttendanceResponse
     */
    public function getattcolumnsOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = [];
        return GetattcolumnsOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getattcolumns", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取指定企业员工的识别底图照片
     * @param GetfaceCorpSmartdeviceRequest $request
     * @return GetfaceCorpSmartdeviceResponse
     */
    public function getfaceCorpSmartdevice($request){
        $runtime = new RuntimeOptions([]);
        return $this->getfaceCorpSmartdeviceEx($request, $runtime);
    }

    /**
     * Description: 获取指定企业员工的识别底图照片
     * @param GetfaceCorpSmartdeviceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetfaceCorpSmartdeviceResponse
     */
    public function getfaceCorpSmartdeviceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetfaceCorpSmartdeviceResponse::fromMap($this->doRequest("dingtalk.corp.smartdevice.getface", "POST", "/router/rest", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 该接口用于获取钉钉智能考勤报表的列值数据，其中包含了一定时间段内报表某一列的所有数据，以及相关的列信息，可以供指定的ISV进行使用。
     * @param GetcolumnvalOapiAttendanceRequest $request
     * @return GetcolumnvalOapiAttendanceResponse
     */
    public function getcolumnvalOapiAttendance($request){
        $runtime = new RuntimeOptions([]);
        return $this->getcolumnvalOapiAttendanceEx($request, $runtime);
    }

    /**
     * Description: 该接口用于获取钉钉智能考勤报表的列值数据，其中包含了一定时间段内报表某一列的所有数据，以及相关的列信息，可以供指定的ISV进行使用。
     * @param GetcolumnvalOapiAttendanceRequest $request
     * @param RuntimeOptions $runtime
     * @return GetcolumnvalOapiAttendanceResponse
     */
    public function getcolumnvalOapiAttendanceEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetcolumnvalOapiAttendanceResponse::fromMap($this->doRequestOApi("POST", "/topapi/attendance/getcolumnval", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 根据userid分页获取用户可见的审批模板列表，每次最多获取100个模板。
     * @param ListbyuseridOapiProcessRequest $request
     * @return ListbyuseridOapiProcessResponse
     */
    public function listbyuseridOapiProcess($request){
        $runtime = new RuntimeOptions([]);
        return $this->listbyuseridOapiProcessEx($request, $runtime);
    }

    /**
     * Description: 根据userid分页获取用户可见的审批模板列表，每次最多获取100个模板。
     * @param ListbyuseridOapiProcessRequest $request
     * @param RuntimeOptions $runtime
     * @return ListbyuseridOapiProcessResponse
     */
    public function listbyuseridOapiProcessEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return ListbyuseridOapiProcessResponse::fromMap($this->doRequestOApi("POST", "/topapi/process/listbyuserid", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: impaas关系查询, 查询 sender im openid 跟 receiver im openid的关系
     * @param GetOapiImpaasRelationRequest $request
     * @return GetOapiImpaasRelationResponse
     */
    public function getOapiImpaasRelation($request){
        $runtime = new RuntimeOptions([]);
        return $this->getOapiImpaasRelationEx($request, $runtime);
    }

    /**
     * Description: impaas关系查询, 查询 sender im openid 跟 receiver im openid的关系
     * @param GetOapiImpaasRelationRequest $request
     * @param RuntimeOptions $runtime
     * @return GetOapiImpaasRelationResponse
     */
    public function getOapiImpaasRelationEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetOapiImpaasRelationResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/relation/get", $request->headers, $appParams, $runtime));
    }

    /**
     * Description: 获取免登token
     * @param GetlogintokenOapiImpaasUserRequest $request
     * @return GetlogintokenOapiImpaasUserResponse
     */
    public function getlogintokenOapiImpaasUser($request){
        $runtime = new RuntimeOptions([]);
        return $this->getlogintokenOapiImpaasUserEx($request, $runtime);
    }

    /**
     * Description: 获取免登token
     * @param GetlogintokenOapiImpaasUserRequest $request
     * @param RuntimeOptions $runtime
     * @return GetlogintokenOapiImpaasUserResponse
     */
    public function getlogintokenOapiImpaasUserEx($request, $runtime){
        Utils::validateModel($request);
        $appParams = Utils::stringifyMapValue(Utils::toMap($request->params));
        return GetlogintokenOapiImpaasUserResponse::fromMap($this->doRequestOApi("POST", "/topapi/impaas/user/getlogintoken", $request->headers, $appParams, $runtime));
    }
}
